{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\DetailScreen\\\\DetailScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Colors from \"../../utils/Colors\";\nimport { useSelector } from 'react-redux';\nimport Snackbar from \"../../components/Notification/Snackbar\";\nimport { Header, DetailBody, ActionButton, ModalComp, Comments } from \"./components\";\nimport { colorCheck } from \"../../utils/Tools\";\nexport var DetailScreen = function DetailScreen(props) {\n  var scrollY = new Animated.Value(0);\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  });\n  var item = props.route.params.item;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showSnackbar = _useState4[0],\n      setShowSnackbar = _useState4[1];\n\n  var _useState5 = useState(Colors.lighter_green),\n      _useState6 = _slicedToArray(_useState5, 2),\n      color = _useState6[0],\n      setColor = _useState6[1];\n\n  var type = item.color;\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalVisible = _useState8[0],\n      setModalVisible = _useState8[1];\n\n  var FavoriteProducts = useSelector(function (state) {\n    return state.fav.favoriteList.some(function (product) {\n      return product._id === item._id;\n    });\n  });\n  useEffect(function () {\n    var checkColor = function checkColor() {\n      var getColor;\n      return _regeneratorRuntime.async(function checkColor$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(colorCheck(type));\n\n            case 2:\n              getColor = _context.sent;\n              setColor(getColor);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    checkColor();\n  }, [item]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, showSnackbar ? React.createElement(Snackbar, {\n    checkVisible: showSnackbar,\n    message: message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }) : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), React.createElement(Header, {\n    navigation: props.navigation,\n    scrollY: scrollY,\n    item: item,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(Animated.ScrollView, {\n    scrollEventThrottle: 1,\n    onScroll: Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          y: scrollY\n        }\n      }\n    }], {\n      useNativeDriver: false\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(DetailBody, {\n    item: item,\n    color: color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), React.createElement(Comments, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), React.createElement(ActionButton, {\n    item: item,\n    FavoriteProducts: FavoriteProducts,\n    setShowSnackbar: setShowSnackbar,\n    setModalVisible: setModalVisible,\n    setMessage: setMessage,\n    user: user,\n    color: color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), React.createElement(ModalComp, {\n    item: item,\n    color: color,\n    modalVisible: modalVisible,\n    setModalVisible: setModalVisible,\n    navigation: props.navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingBottom: 20\n  }\n});","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/DetailScreen/DetailScreen.js"],"names":["React","useState","useEffect","Colors","useSelector","Snackbar","Header","DetailBody","ActionButton","ModalComp","Comments","colorCheck","DetailScreen","props","scrollY","Animated","Value","user","state","auth","item","route","params","message","setMessage","showSnackbar","setShowSnackbar","lighter_green","color","setColor","type","modalVisible","setModalVisible","FavoriteProducts","fav","favoriteList","some","product","_id","checkColor","getColor","styles","container","navigation","event","nativeEvent","contentOffset","y","useNativeDriver","StyleSheet","create","flex","backgroundColor","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Dimensions, Animated } from 'react-native';\r\n//Color\r\nimport Colors from '../../utils/Colors';\r\n//Redux\r\nimport { useSelector } from 'react-redux';\r\n//Components\r\nimport Snackbar from '../../components/Notification/Snackbar';\r\nimport {\r\n  Header,\r\n  DetailBody,\r\n  ActionButton,\r\n  ModalComp,\r\n  Comments,\r\n} from './components';\r\nimport { colorCheck } from '../../utils/Tools';\r\n\r\nexport const DetailScreen = (props) => {\r\n  const scrollY = new Animated.Value(0);\r\n  const user = useSelector((state) => state.auth.user);\r\n  const { item } = props.route.params;\r\n  const [message, setMessage] = useState('');\r\n  const [showSnackbar, setShowSnackbar] = useState(false);\r\n  const [color, setColor] = useState(Colors.lighter_green);\r\n  //color\r\n  const type = item.color;\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  //Favorite\r\n  const FavoriteProducts = useSelector((state) =>\r\n    state.fav.favoriteList.some((product) => product._id === item._id),\r\n  );\r\n  useEffect(() => {\r\n    const checkColor = async () => {\r\n      const getColor = await colorCheck(type);\r\n      setColor(getColor);\r\n    };\r\n    checkColor();\r\n  }, [item]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {showSnackbar ? (\r\n        <Snackbar checkVisible={showSnackbar} message={message} />\r\n      ) : (\r\n        <View />\r\n      )}\r\n      <Header navigation={props.navigation} scrollY={scrollY} item={item} />\r\n\r\n      <Animated.ScrollView\r\n        scrollEventThrottle={1}\r\n        onScroll={Animated.event(\r\n          [{ nativeEvent: { contentOffset: { y: scrollY } } }],\r\n          { useNativeDriver: false },\r\n        )}\r\n      >\r\n        <DetailBody item={item} color={color} />\r\n        <Comments />\r\n      </Animated.ScrollView>\r\n      <ActionButton\r\n        item={item}\r\n        FavoriteProducts={FavoriteProducts}\r\n        setShowSnackbar={setShowSnackbar}\r\n        setModalVisible={setModalVisible}\r\n        setMessage={setMessage}\r\n        user={user}\r\n        color={color}\r\n      />\r\n      <ModalComp\r\n        item={item}\r\n        color={color}\r\n        modalVisible={modalVisible}\r\n        setModalVisible={setModalVisible}\r\n        navigation={props.navigation}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, backgroundColor: '#fff', paddingBottom: 20 },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}