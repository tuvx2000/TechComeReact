{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\IntroScreen\\\\IntroScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { useDispatch } from \"react-redux\";\nimport * as CheckFirstTimeAction from \"../../reducers/product/checkFirstTimeActions\";\nimport { Slide, SubSlide, Ticker, Pagination } from \"./components\";\nimport slides from \"../../db/IntroSlides\";\nimport Loader from \"../../components/Loaders/Loader\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nexport var IntroScreen = function IntroScreen() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var scrollX = useRef(new Animated.Value(0)).current;\n  var scrollClick = useRef(null);\n  var unmounted = useRef(false);\n  useEffect(function () {\n    return function () {\n      unmounted.current = true;\n    };\n  }, []);\n  var backgroundColor = scrollX.interpolate({\n    inputRange: [0, width, width * 2],\n    outputRange: [\"#BFEAF5\", \"#BEECC4\", \"#FFE4D9\"],\n    extrapolate: \"clamp\"\n  });\n  var textTranslate = scrollX.interpolate({\n    inputRange: [0, width, width * 2],\n    outputRange: [0, width * -1, width * -2],\n    extrapolate: \"clamp\"\n  });\n\n  var EnterApp = function EnterApp() {\n    return _regeneratorRuntime.async(function EnterApp$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(dispatch(CheckFirstTimeAction.firstOpen()));\n\n          case 3:\n            if (!unmounted.current) {\n              setLoading(false);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(Animated.View, {\n    style: [styles.slider, {\n      backgroundColor: backgroundColor\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Ticker, {\n    scrollX: scrollX,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), React.createElement(Animated.ScrollView, {\n    ref: scrollClick,\n    horizontal: true,\n    snapToInterval: width,\n    scrollTo: {\n      x: scrollClick,\n      animated: true\n    },\n    decelerationRate: \"fast\",\n    showsHorizontalScrollIndicator: false,\n    bounces: false,\n    scrollEventThrottle: 1,\n    onScroll: Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          x: scrollX\n        }\n      }\n    }], {\n      useNativeDriver: false\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, slides.map(function (slide) {\n    return React.createElement(Slide, {\n      key: slide.id,\n      imageUrl: slide.imageUrl,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 20\n      }\n    });\n  }))), React.createElement(View, {\n    style: styles.footer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(Pagination, {\n    slides: slides,\n    scrollX: scrollX,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), React.createElement(Animated.View, {\n    style: [StyleSheet.absoluteFillObject, {\n      backgroundColor: backgroundColor\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), React.createElement(Animated.View, {\n    style: styles.footerContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: {\n      flexDirection: \"row\",\n      width: width * slides.length,\n      transform: [{\n        translateX: textTranslate\n      }]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, slides.map(function (_ref, index) {\n    var subtitle = _ref.subtitle,\n        des = _ref.des;\n    return React.createElement(SubSlide, {\n      key: subtitle,\n      last: index === slides.length - 1,\n      EnterApp: EnterApp,\n      subtitle: subtitle,\n      des: des,\n      scrollX: scrollX,\n      NextSlide: function NextSlide() {\n        if (scrollClick.current) {\n          scrollClick.current.scrollTo({\n            x: width * (index + 1)\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    });\n  })))));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ffffff\"\n  },\n  slider: {\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 20,\n    height: 0.61 * height,\n    borderBottomEndRadius: 75\n  },\n  footer: {\n    flex: 1\n  },\n  footerContent: {\n    flex: 1,\n    borderTopLeftRadius: 75,\n    flexDirection: \"row\",\n    backgroundColor: \"#ffffff\"\n  }\n});","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/IntroScreen/IntroScreen.js"],"names":["React","useState","useRef","useEffect","useDispatch","CheckFirstTimeAction","Slide","SubSlide","Ticker","Pagination","slides","Loader","Dimensions","get","height","width","IntroScreen","dispatch","loading","setLoading","scrollX","Animated","Value","current","scrollClick","unmounted","backgroundColor","interpolate","inputRange","outputRange","extrapolate","textTranslate","EnterApp","firstOpen","styles","container","slider","x","animated","event","nativeEvent","contentOffset","useNativeDriver","map","slide","id","imageUrl","footer","StyleSheet","absoluteFillObject","footerContent","flexDirection","length","transform","translateX","index","subtitle","des","scrollTo","create","flex","paddingTop","Platform","OS","StatusBar","currentHeight","borderBottomEndRadius","borderTopLeftRadius"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;;;;;AASA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,KAAKC,oBAAZ;AAEA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,UAAlC;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;;AAEA,sBAA0BC,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;AAAA,IAAQC,MAAR,mBAAQA,MAAR;AAAA,IAAgBC,KAAhB,mBAAgBA,KAAhB;;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/B,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;;AACA,kBAA8BH,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOiB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,OAAO,GAAGlB,MAAM,CAAC,IAAImB,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA9C;AACA,MAAMC,WAAW,GAAGtB,MAAM,CAAC,IAAD,CAA1B;AACA,MAAMuB,SAAS,GAAGvB,MAAM,CAAC,KAAD,CAAxB;AACAC,EAAAA,SAAS,CAAC,YAAM;AACd,WAAO,YAAM;AACXsB,MAAAA,SAAS,CAACF,OAAV,GAAoB,IAApB;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAKA,MAAMG,eAAe,GAAGN,OAAO,CAACO,WAAR,CAAoB;AAC1CC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAIb,KAAJ,EAAWA,KAAK,GAAG,CAAnB,CAD8B;AAE1Cc,IAAAA,WAAW,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAF6B;AAG1CC,IAAAA,WAAW,EAAE;AAH6B,GAApB,CAAxB;AAKA,MAAMC,aAAa,GAAGX,OAAO,CAACO,WAAR,CAAoB;AACxCC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAIb,KAAJ,EAAWA,KAAK,GAAG,CAAnB,CAD4B;AAExCc,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAId,KAAK,GAAG,CAAC,CAAb,EAAgBA,KAAK,GAAG,CAAC,CAAzB,CAF2B;AAGxCe,IAAAA,WAAW,EAAE;AAH2B,GAApB,CAAtB;;AAMA,MAAME,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AACfb,YAAAA,UAAU,CAAC,IAAD,CAAV;AADe;AAAA,6CAETF,QAAQ,CAACZ,oBAAoB,CAAC4B,SAArB,EAAD,CAFC;;AAAA;AAGf,gBAAI,CAACR,SAAS,CAACF,OAAf,EAAwB;AACtBJ,cAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AALc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAQA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEe,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAACD,MAAM,CAACE,MAAR,EAAgB;AAAEV,MAAAA,eAAe,EAAfA;AAAF,KAAhB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD,CAAU,UAAV;AACE,IAAA,GAAG,EAAEI,WADP;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,cAAc,EAAET,KAHlB;AAIE,IAAA,QAAQ,EAAE;AAAEsB,MAAAA,CAAC,EAAEb,WAAL;AAAkBc,MAAAA,QAAQ,EAAE;AAA5B,KAJZ;AAKE,IAAA,gBAAgB,EAAC,MALnB;AAME,IAAA,8BAA8B,EAAE,KANlC;AAOE,IAAA,OAAO,EAAE,KAPX;AAQE,IAAA,mBAAmB,EAAE,CARvB;AASE,IAAA,QAAQ,EAAEjB,QAAQ,CAACkB,KAAT,CACR,CAAC;AAAEC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAEJ,UAAAA,CAAC,EAAEjB;AAAL;AAAjB;AAAf,KAAD,CADQ,EAER;AAAEsB,MAAAA,eAAe,EAAE;AAAnB,KAFQ,CATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGhC,MAAM,CAACiC,GAAP,CAAW,UAACC,KAAD,EAAW;AACrB,WAAO,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,MAAA,QAAQ,EAAED,KAAK,CAACE,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CAdH,CAFF,CADF,EAsBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACa,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAErC,MAApB;AAA4B,IAAA,OAAO,EAAEU,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE,CAAC4B,UAAU,CAACC,kBAAZ,EAAgC;AAAEvB,MAAAA,eAAe,EAAfA;AAAF,KAAhC,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAKE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAEQ,MAAM,CAACgB,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,aAAa,EAAE,KADV;AAELpC,MAAAA,KAAK,EAAEA,KAAK,GAAGL,MAAM,CAAC0C,MAFjB;AAGLC,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,UAAU,EAAEvB;AAAd,OAAD;AAHN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGrB,MAAM,CAACiC,GAAP,CAAW,gBAAoBY,KAApB,EAA8B;AAAA,QAA3BC,QAA2B,QAA3BA,QAA2B;AAAA,QAAjBC,GAAiB,QAAjBA,GAAiB;AACxC,WACE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAED,QADP;AAEE,MAAA,IAAI,EAAED,KAAK,KAAK7C,MAAM,CAAC0C,MAAP,GAAgB,CAFlC;AAGE,MAAA,QAAQ,EAAEpB,QAHZ;AAIE,MAAA,QAAQ,EAAEwB,QAJZ;AAKE,MAAA,GAAG,EAAEC,GALP;AAME,MAAA,OAAO,EAAErC,OANX;AAOE,MAAA,SAAS,EAAE,qBAAM;AACf,YAAII,WAAW,CAACD,OAAhB,EAAyB;AACvBC,UAAAA,WAAW,CAACD,OAAZ,CAAoBmC,QAApB,CAA6B;AAAErB,YAAAA,CAAC,EAAEtB,KAAK,IAAIwC,KAAK,GAAG,CAAZ;AAAV,WAA7B;AACD;AACF,OAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAeD,GAhBA,CAPH,CADF,CALF,CAtBF,CADF;AA0DD,CAxFM;AA0FP,IAAMrB,MAAM,GAAGc,UAAU,CAACW,MAAX,CAAkB;AAC/BxB,EAAAA,SAAS,EAAE;AACTyB,IAAAA,IAAI,EAAE,CADG;AAETlC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/BU,EAAAA,MAAM,EAAE;AACNyB,IAAAA,UAAU,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4BC,SAAS,CAACC,aAAtC,GAAsD,EAD5D;AAENnD,IAAAA,MAAM,EAAE,OAAOA,MAFT;AAGNoD,IAAAA,qBAAqB,EAAE;AAHjB,GALuB;AAU/BnB,EAAAA,MAAM,EAAE;AACNa,IAAAA,IAAI,EAAE;AADA,GAVuB;AAa/BV,EAAAA,aAAa,EAAE;AACbU,IAAAA,IAAI,EAAE,CADO;AAEbO,IAAAA,mBAAmB,EAAE,EAFR;AAGbhB,IAAAA,aAAa,EAAE,KAHF;AAIbzB,IAAAA,eAAe,EAAE;AAJJ;AAbgB,CAAlB,CAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Dimensions,\r\n  Animated,\r\n  StatusBar,\r\n} from \"react-native\";\r\n//Redux\r\nimport { useDispatch } from \"react-redux\";\r\n//Action\r\nimport * as CheckFirstTimeAction from \"../../reducers/product/checkFirstTimeActions\";\r\n//Slides\r\nimport { Slide, SubSlide, Ticker, Pagination } from \"./components\";\r\nimport slides from \"../../db/IntroSlides\";\r\nimport Loader from \"../../components/Loaders/Loader\";\r\n\r\nconst { height, width } = Dimensions.get(\"window\");\r\n\r\nexport const IntroScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const scrollX = useRef(new Animated.Value(0)).current;\r\n  const scrollClick = useRef(null);\r\n  const unmounted = useRef(false);\r\n  useEffect(() => {\r\n    return () => {\r\n      unmounted.current = true;\r\n    };\r\n  }, []);\r\n  const backgroundColor = scrollX.interpolate({\r\n    inputRange: [0, width, width * 2],\r\n    outputRange: [\"#BFEAF5\", \"#BEECC4\", \"#FFE4D9\"],\r\n    extrapolate: \"clamp\",\r\n  });\r\n  const textTranslate = scrollX.interpolate({\r\n    inputRange: [0, width, width * 2],\r\n    outputRange: [0, width * -1, width * -2],\r\n    extrapolate: \"clamp\",\r\n  });\r\n\r\n  const EnterApp = async () => {\r\n    setLoading(true);\r\n    await dispatch(CheckFirstTimeAction.firstOpen());\r\n    if (!unmounted.current) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Animated.View style={[styles.slider, { backgroundColor }]}>\r\n        <Ticker scrollX={scrollX} />\r\n        <Animated.ScrollView\r\n          ref={scrollClick}\r\n          horizontal\r\n          snapToInterval={width}\r\n          scrollTo={{ x: scrollClick, animated: true }}\r\n          decelerationRate='fast'\r\n          showsHorizontalScrollIndicator={false}\r\n          bounces={false}\r\n          scrollEventThrottle={1}\r\n          onScroll={Animated.event(\r\n            [{ nativeEvent: { contentOffset: { x: scrollX } } }],\r\n            { useNativeDriver: false } //\r\n          )}\r\n        >\r\n          {slides.map((slide) => {\r\n            return <Slide key={slide.id} imageUrl={slide.imageUrl} />;\r\n          })}\r\n        </Animated.ScrollView>\r\n      </Animated.View>\r\n      <View style={styles.footer}>\r\n        <Pagination slides={slides} scrollX={scrollX} />\r\n        <Animated.View\r\n          style={[StyleSheet.absoluteFillObject, { backgroundColor }]}\r\n        ></Animated.View>\r\n        <Animated.View style={styles.footerContent}>\r\n          <Animated.View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              width: width * slides.length,\r\n              transform: [{ translateX: textTranslate }],\r\n            }}\r\n          >\r\n            {slides.map(({ subtitle, des }, index) => {\r\n              return (\r\n                <SubSlide\r\n                  key={subtitle}\r\n                  last={index === slides.length - 1}\r\n                  EnterApp={EnterApp}\r\n                  subtitle={subtitle}\r\n                  des={des}\r\n                  scrollX={scrollX}\r\n                  NextSlide={() => {\r\n                    if (scrollClick.current) {\r\n                      scrollClick.current.scrollTo({ x: width * (index + 1) });\r\n                    }\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          </Animated.View>\r\n        </Animated.View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  slider: {\r\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 20,\r\n    height: 0.61 * height,\r\n    borderBottomEndRadius: 75,\r\n  },\r\n  footer: {\r\n    flex: 1,\r\n  },\r\n  footerContent: {\r\n    flex: 1,\r\n    borderTopLeftRadius: 75,\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}