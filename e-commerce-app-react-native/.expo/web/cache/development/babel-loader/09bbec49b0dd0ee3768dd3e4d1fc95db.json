{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\DetailScreen\\\\components\\\\ActionButton.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport CustomText from \"../../../components/UI/CustomText\";\nimport { Ionicons } from '@expo/vector-icons';\nimport LottieView from 'lottie-react-native';\nimport * as Animatable from 'react-native-animatable';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToCart, removeFavorite, addFavorite } from \"../../../reducers\";\nimport Messages from \"../../../messages/user\";\nimport Colors from \"../../../utils/Colors\";\nimport PropTypes from 'prop-types';\nexport var ActionButton = function ActionButton(_ref) {\n  var user = _ref.user,\n      item = _ref.item,\n      color = _ref.color,\n      setShowSnackbar = _ref.setShowSnackbar,\n      FavoriteProducts = _ref.FavoriteProducts,\n      setModalVisible = _ref.setModalVisible,\n      setMessage = _ref.setMessage;\n  var dispatch = useDispatch();\n  var cartLoading = useSelector(function (state) {\n    return state.cart.isLoading;\n  });\n  var unmounted = useRef(false);\n  useEffect(function () {\n    return function () {\n      unmounted.current = true;\n    };\n  }, []);\n\n  var addToCartAct = function addToCartAct() {\n    return _regeneratorRuntime.async(function addToCartAct$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(Object.keys(user).length === 0)) {\n              _context.next = 5;\n              break;\n            }\n\n            setMessage(Messages['user.login.require']);\n            setShowSnackbar(true);\n            _context.next = 14;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(dispatch(addToCart(item, user.token)));\n\n          case 8:\n            setModalVisible(true);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](5);\n            throw _context.t0;\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 11]], Promise);\n  };\n\n  var toggleFavorite = function toggleFavorite() {\n    if (Object.keys(user).length === 0) {\n      setMessage(Messages['user.login.require']);\n      setShowSnackbar(true);\n    } else if (FavoriteProducts) {\n      Alert.alert('Bỏ yêu thích', 'Bạn có muốn bỏ sản phẩm ra khỏi mục yêu thích?', [{\n        text: 'Hủy',\n        style: 'cancel'\n      }, {\n        text: 'Đồng ý',\n        onPress: function onPress() {\n          return dispatch(removeFavorite(item._id));\n        }\n      }]);\n    } else {\n      dispatch(addFavorite(item));\n    }\n  };\n\n  return React.createElement(Animatable.View, {\n    delay: 1500,\n    animation: \"fadeInUp\",\n    style: styles.actionContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.action,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: toggleFavorite,\n    style: [styles.favorite, {\n      borderColor: color\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, FavoriteProducts ? React.createElement(LottieView, {\n    source: require(\"../../../components/IconAnimation/heart.json\"),\n    autoPlay: FavoriteProducts,\n    loop: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }) : React.createElement(Ionicons, {\n    name: \"ios-heart-empty\",\n    size: 27,\n    color: color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.addCart, {\n      backgroundColor: color\n    }],\n    onPress: addToCartAct,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, cartLoading ? React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }) : React.createElement(CustomText, {\n    style: styles.actionText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Th\\xEAm v\\xE0o gi\\u1ECF h\\xE0ng\"))));\n};\nActionButton.propTypes = {\n  item: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  color: PropTypes.string.isRequired,\n  setShowSnackbar: PropTypes.func.isRequired,\n  FavoriteProducts: PropTypes.bool.isRequired,\n  setModalVisible: PropTypes.func.isRequired,\n  setMessage: PropTypes.func.isRequired\n};\nvar styles = StyleSheet.create({\n  action: {\n    flexDirection: 'row',\n    height: 60,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    backgroundColor: '#fff'\n  },\n  addCart: {\n    width: '80%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    height: 50\n  },\n  favorite: {\n    width: '18%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 2,\n    paddingTop: 5,\n    borderRadius: 5,\n    height: 50\n  },\n  actionText: {\n    fontSize: 15,\n    textAlign: 'center',\n    color: '#fff'\n  }\n});","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/DetailScreen/components/ActionButton.js"],"names":["React","useRef","useEffect","CustomText","Ionicons","LottieView","Animatable","useDispatch","useSelector","addToCart","removeFavorite","addFavorite","Messages","Colors","PropTypes","ActionButton","user","item","color","setShowSnackbar","FavoriteProducts","setModalVisible","setMessage","dispatch","cartLoading","state","cart","isLoading","unmounted","current","addToCartAct","Object","keys","length","token","toggleFavorite","Alert","alert","text","style","onPress","_id","styles","actionContainer","action","favorite","borderColor","require","addCart","backgroundColor","actionText","propTypes","object","isRequired","string","func","bool","StyleSheet","create","flexDirection","height","justifyContent","alignItems","paddingHorizontal","width","borderRadius","borderWidth","paddingTop","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Alert,\r\n  ActivityIndicator,\r\n} from 'react-native';\r\n//import CustomText\r\nimport CustomText from '../../../components/UI/CustomText';\r\n//icon\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport LottieView from 'lottie-react-native';\r\n//Animatable\r\nimport * as Animatable from 'react-native-animatable';\r\n//Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n//Action\r\nimport { addToCart, removeFavorite, addFavorite } from '../../../reducers';\r\nimport Messages from '../../../messages/user';\r\nimport Colors from '../../../utils/Colors';\r\n\r\n//PropTypes check\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ActionButton = ({\r\n  user,\r\n  item,\r\n  color,\r\n  setShowSnackbar,\r\n  FavoriteProducts,\r\n  setModalVisible,\r\n  setMessage,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const cartLoading = useSelector((state) => state.cart.isLoading);\r\n  const unmounted = useRef(false);\r\n  useEffect(() => {\r\n    return () => {\r\n      unmounted.current = true;\r\n    };\r\n  }, []);\r\n  //Set Colors\r\n  const addToCartAct = async () => {\r\n    if (Object.keys(user).length === 0) {\r\n      setMessage(Messages['user.login.require']);\r\n      setShowSnackbar(true);\r\n    } else {\r\n      try {\r\n        await dispatch(addToCart(item, user.token));\r\n        setModalVisible(true);\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    }\r\n  };\r\n  const toggleFavorite = () => {\r\n    if (Object.keys(user).length === 0) {\r\n      setMessage(Messages['user.login.require']);\r\n      setShowSnackbar(true);\r\n    } else if (FavoriteProducts) {\r\n      Alert.alert(\r\n        'Bỏ yêu thích',\r\n        'Bạn có muốn bỏ sản phẩm ra khỏi mục yêu thích?',\r\n        [\r\n          {\r\n            text: 'Hủy',\r\n            style: 'cancel',\r\n          },\r\n          {\r\n            text: 'Đồng ý',\r\n            onPress: () => dispatch(removeFavorite(item._id)),\r\n          },\r\n        ],\r\n      );\r\n    } else {\r\n      dispatch(addFavorite(item));\r\n    }\r\n  };\r\n  return (\r\n    <Animatable.View\r\n      delay={1500}\r\n      animation='fadeInUp'\r\n      style={styles.actionContainer}\r\n    >\r\n      <View style={styles.action}>\r\n        <TouchableOpacity\r\n          onPress={toggleFavorite}\r\n          style={[styles.favorite, { borderColor: color }]}\r\n        >\r\n          {FavoriteProducts ? (\r\n            <LottieView\r\n              source={require('../../../components/IconAnimation/heart.json')}\r\n              autoPlay={FavoriteProducts}\r\n              loop={false}\r\n            />\r\n          ) : (\r\n            <Ionicons name='ios-heart-empty' size={27} color={color} />\r\n          )}\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={[styles.addCart, { backgroundColor: color }]}\r\n          onPress={addToCartAct}\r\n        >\r\n          {cartLoading ? (\r\n            <ActivityIndicator size='small' color='#fff' />\r\n          ) : (\r\n            <CustomText style={styles.actionText}>Thêm vào giỏ hàng</CustomText>\r\n          )}\r\n        </TouchableOpacity>\r\n      </View>\r\n    </Animatable.View>\r\n  );\r\n};\r\n\r\nActionButton.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  setShowSnackbar: PropTypes.func.isRequired,\r\n  FavoriteProducts: PropTypes.bool.isRequired,\r\n  setModalVisible: PropTypes.func.isRequired,\r\n  setMessage: PropTypes.func.isRequired,\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  action: {\r\n    flexDirection: 'row',\r\n    height: 60,\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    backgroundColor: '#fff',\r\n  },\r\n  addCart: {\r\n    width: '80%',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 5,\r\n    height: 50,\r\n  },\r\n  favorite: {\r\n    width: '18%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderWidth: 2,\r\n    paddingTop: 5,\r\n    borderRadius: 5,\r\n    height: 50,\r\n  },\r\n  actionText: {\r\n    fontSize: 15,\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}