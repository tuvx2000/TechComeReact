{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\HomeScreen\\\\HomeScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchProducts } from \"../../reducers\";\nimport Colors from \"../../utils/Colors\";\nimport Animated from 'react-native-reanimated';\nimport { Carousel, Header, CategorySection, FloatButton, categories, Market } from \"./components\";\nimport Skeleton from \"../../components/Loaders/SkeletonLoading\";\nimport Snackbar from \"../../components/Notification/Snackbar\";\nimport { Portal, Provider } from 'react-native-paper';\nvar AnimatedFlatList = Animated.createAnimatedComponent(FlatList);\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height;\n\nexport var HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var scrollY = new Animated.Value(0);\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  });\n  var products = useSelector(function (state) {\n    return state.store.products;\n  });\n  var isLoading = useSelector(function (state) {\n    return state.store.isLoading;\n  });\n  var notification = useSelector(function (state) {\n    return state.auth.notification;\n  });\n  useEffect(function () {\n    var fetching = function fetching() {\n      return _regeneratorRuntime.async(function fetching$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(dispatch(fetchProducts()));\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              alert(_context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    };\n\n    fetching();\n  }, [user.userid]);\n  return React.createElement(Provider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(Skeleton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }) : React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    scrollPoint: scrollY,\n    navigation: navigation,\n    products: products,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), React.createElement(Portal, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, React.createElement(FloatButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })), React.createElement(AnimatedFlatList, {\n    contentContainerStyle: styles.list,\n    showsVerticalScrollIndicator: false,\n    ListHeaderComponent: function ListHeaderComponent() {\n      return React.createElement(View, {\n        style: styles.banner,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, React.createElement(Carousel, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }), React.createElement(Market, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }));\n    },\n    scrollEventThrottle: 1,\n    onScroll: Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          y: scrollY\n        }\n      }\n    }], {\n      useNativeDriver: true\n    }),\n    data: categories,\n    keyExtractor: function keyExtractor(item) {\n      return item.name;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(CategorySection, {\n        name: item.name,\n        bg: item.bg,\n        data: products,\n        navigation: navigation,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), Object.keys(notification).length === 0 ? React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }) : React.createElement(Snackbar, {\n    checkVisible: true,\n    message: Object.keys(user).length === 0 ? notification : notification + ' ' + user.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.white\n  },\n  list: {\n    width: '100%',\n    marginTop: 50,\n    paddingBottom: 20\n  }\n});","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/HomeScreen/HomeScreen.js"],"names":["React","useEffect","AsyncStorage","useSelector","useDispatch","fetchProducts","Colors","Animated","Carousel","Header","CategorySection","FloatButton","categories","Market","Skeleton","Snackbar","Portal","Provider","AnimatedFlatList","createAnimatedComponent","FlatList","Dimensions","get","height","HomeScreen","navigation","dispatch","scrollY","Value","user","state","auth","products","store","isLoading","notification","fetching","alert","userid","styles","container","list","banner","event","nativeEvent","contentOffset","y","useNativeDriver","item","name","bg","Object","keys","length","StyleSheet","create","flex","backgroundColor","white","width","marginTop","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Dimensions,\r\n  Platform,\r\n  FlatList,\r\n  AsyncStorage,\r\n} from 'react-native';\r\n//Redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchProducts } from '../../reducers';\r\n//Colors\r\nimport Colors from '../../utils/Colors';\r\n//Animation\r\nimport Animated from 'react-native-reanimated';\r\n//Components\r\nimport {\r\n  Carousel,\r\n  Header,\r\n  CategorySection,\r\n  FloatButton,\r\n  categories,\r\n  Market,\r\n} from './components';\r\nimport Skeleton from '../../components/Loaders/SkeletonLoading';\r\nimport Snackbar from '../../components/Notification/Snackbar';\r\n//FloatButton\r\nimport { Portal, Provider } from 'react-native-paper';\r\nconst AnimatedFlatList = Animated.createAnimatedComponent(FlatList);\r\n//height\r\nconst { height } = Dimensions.get('window');\r\n\r\nexport const HomeScreen = ({ navigation }) => {\r\n  const dispatch = useDispatch();\r\n  //Header Animation\r\n  let scrollY = new Animated.Value(0);\r\n  const user = useSelector((state) => state.auth.user);\r\n  const products = useSelector((state) => state.store.products);\r\n  const isLoading = useSelector((state) => state.store.isLoading);\r\n  const notification = useSelector((state) => state.auth.notification);\r\n  //fetch Api\r\n  useEffect(() => {\r\n    // AsyncStorage.removeItem(\"isFirstTime\");\r\n    const fetching = async () => {\r\n      try {\r\n        await dispatch(fetchProducts());\r\n      } catch (err) {\r\n        alert(err);\r\n      }\r\n    };\r\n    fetching();\r\n  }, [user.userid]);\r\n\r\n  return (\r\n    <Provider>\r\n      {isLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <View style={styles.container}>\r\n          <Header\r\n            scrollPoint={scrollY}\r\n            navigation={navigation}\r\n            products={products}\r\n          ></Header>\r\n          <Portal>\r\n            <FloatButton />\r\n          </Portal>\r\n          <AnimatedFlatList\r\n            contentContainerStyle={styles.list}\r\n            showsVerticalScrollIndicator={false}\r\n            ListHeaderComponent={() => (\r\n              <View style={styles.banner}>\r\n                <Carousel />\r\n                <Market />\r\n              </View>\r\n            )}\r\n            scrollEventThrottle={1}\r\n            onScroll={Animated.event(\r\n              [\r\n                {\r\n                  nativeEvent: { contentOffset: { y: scrollY } },\r\n                },\r\n              ],\r\n              { useNativeDriver: true },\r\n            )}\r\n            data={categories}          \r\n            keyExtractor={(item) => item.name}         \r\n            renderItem={({ item }) => (\r\n              <CategorySection\r\n                name={item.name}\r\n                bg={item.bg}\r\n                data={products}\r\n                navigation={navigation}\r\n              />\r\n            )}\r\n          />\r\n          {Object.keys(notification).length === 0 ? (\r\n            <View />\r\n          ) : (\r\n            <Snackbar\r\n              checkVisible={true}\r\n              message={\r\n                Object.keys(user).length === 0\r\n                  ? notification\r\n                  : notification + ' ' + user.name\r\n              }\r\n            />\r\n          )}\r\n        </View>\r\n      )}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: Colors.white,\r\n  },\r\n  list: {\r\n    width: '100%',\r\n    marginTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}