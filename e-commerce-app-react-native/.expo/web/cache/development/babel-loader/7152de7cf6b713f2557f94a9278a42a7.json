{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\ProfileScreen\\\\ProfileScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UploadProfilePic } from \"../../reducers\";\nimport { EditButton, ProfilePic, ProfileBody } from \"./components\";\nimport { ActionSheetProvider } from \"@expo/react-native-action-sheet\";\nimport Loader from \"../../components/Loaders/Loader\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nexport var ProfileScreen = function ProfileScreen(props) {\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  });\n  var loading = useSelector(function (state) {\n    return state.auth.isLoading;\n  });\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageUri = _useState2[0],\n      setImageUri = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filename = _useState4[0],\n      setFilename = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      type = _useState6[0],\n      setType = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      uploadButton = _useState8[0],\n      setUploadButton = _useState8[1];\n\n  var dispatch = useDispatch();\n  var unmounted = useRef(false);\n  useEffect(function () {\n    return function () {\n      unmounted.current = true;\n    };\n  }, []);\n\n  var UploadProfile = function UploadProfile() {\n    return _regeneratorRuntime.async(function UploadProfile$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(dispatch(UploadProfilePic(imageUri, filename, type)));\n\n          case 3:\n            setUploadButton(true);\n\n            if (!unmounted.current) {\n              Alert.alert(\"Cập nhật\", \"Cập nhật thành công\", [{\n                text: \"Ok\"\n              }]);\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(ActionSheetProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), loading ? React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 20\n    }\n  }) : React.createElement(React.Fragment, null), React.createElement(View, {\n    style: styles.profileContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.profileBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, React.createElement(EditButton, {\n    navigation: props.navigation,\n    user: user,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), React.createElement(ProfilePic, {\n    user: user,\n    imageUri: imageUri,\n    setImageUri: setImageUri,\n    setType: setType,\n    setFilename: setFilename,\n    setUploadButton: setUploadButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), React.createElement(ProfileBody, {\n    user: user,\n    uploadButton: uploadButton,\n    setUploadButton: setUploadButton,\n    setImageUri: setImageUri,\n    loading: loading,\n    UploadProfile: UploadProfile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })))));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    width: width,\n    flexDirection: \"row\",\n    height: 0.15 * height,\n    justifyContent: \"center\"\n  },\n  profileContainer: {\n    width: width,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  profileBox: {\n    backgroundColor: \"#fff\",\n    borderRadius: 20,\n    width: width,\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/ProfileScreen/ProfileScreen.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","UploadProfilePic","EditButton","ProfilePic","ProfileBody","ActionSheetProvider","Loader","Dimensions","get","width","height","ProfileScreen","props","user","state","auth","loading","isLoading","imageUri","setImageUri","filename","setFilename","type","setType","uploadButton","setUploadButton","dispatch","unmounted","current","UploadProfile","Alert","alert","text","styles","container","header","profileContainer","profileBox","navigation","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","backgroundColor","borderRadius"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;;;AAGA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,gBAAT;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,WAAjC;AACA,SAASC,mBAAT,QAAoC,iCAApC;AAEA,OAAOC,MAAP;;AAEA,sBAA0BC,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;AAAA,IAAQC,KAAR,mBAAQA,KAAR;AAAA,IAAeC,MAAf,mBAAeA,MAAf;;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AACtC,MAAMC,IAAI,GAAGb,WAAW,CAAC,UAACc,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWF,IAAtB;AAAA,GAAD,CAAxB;AACA,MAAMG,OAAO,GAAGhB,WAAW,CAAC,UAACc,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWE,SAAtB;AAAA,GAAD,CAA3B;;AACA,kBAAgCrB,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOsB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCvB,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOwB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwBzB,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAO0B,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwC3B,QAAQ,CAAC,IAAD,CAAhD;AAAA;AAAA,MAAO4B,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAMC,QAAQ,GAAG3B,WAAW,EAA5B;AACA,MAAM4B,SAAS,GAAG7B,MAAM,CAAC,KAAD,CAAxB;AACAD,EAAAA,SAAS,CAAC,YAAM;AACd,WAAO,YAAM;AACX8B,MAAAA,SAAS,CAACC,OAAV,GAAoB,IAApB;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAKA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEZH,QAAQ,CAACzB,gBAAgB,CAACiB,QAAD,EAAWE,QAAX,EAAqBE,IAArB,CAAjB,CAFI;;AAAA;AAGlBG,YAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,gBAAI,CAACE,SAAS,CAACC,OAAf,EAAwB;AACtBE,cAAAA,KAAK,CAACC,KAAN,CAAY,UAAZ,EAAwB,qBAAxB,EAA+C,CAC7C;AACEC,gBAAAA,IAAI,EAAE;AADR,eAD6C,CAA/C;AAKD;;AAViB;AAAA;;AAAA;AAAA;AAAA;AAYlBD,YAAAA,KAAK,aAAL;;AAZkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAgBA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGnB,OAAO,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAgB,yCAF1B,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEiB,MAAM,CAACG,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEzB,KAAK,CAAC0B,UAA9B;AAA0C,IAAA,IAAI,EAAEzB,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEA,IADR;AAEE,IAAA,QAAQ,EAAEK,QAFZ;AAGE,IAAA,WAAW,EAAEC,WAHf;AAIE,IAAA,OAAO,EAAEI,OAJX;AAKE,IAAA,WAAW,EAAEF,WALf;AAME,IAAA,eAAe,EAAEI,eANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAEZ,IADR;AAEE,IAAA,YAAY,EAAEW,YAFhB;AAGE,IAAA,eAAe,EAAEC,eAHnB;AAIE,IAAA,WAAW,EAAEN,WAJf;AAKE,IAAA,OAAO,EAAEH,OALX;AAME,IAAA,aAAa,EAAEa,aANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CAHF,CADF,CADF;AA6BD,CA5DM;AA8DP,IAAMI,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BN,EAAAA,MAAM,EAAE;AACN1B,IAAAA,KAAK,EAALA,KADM;AAENiC,IAAAA,aAAa,EAAE,KAFT;AAGNhC,IAAAA,MAAM,EAAE,OAAOA,MAHT;AAINiC,IAAAA,cAAc,EAAE;AAJV,GAJuB;AAU/BP,EAAAA,gBAAgB,EAAE;AAChB3B,IAAAA,KAAK,EAALA,KADgB;AAEhBkC,IAAAA,cAAc,EAAE,QAFA;AAGhBC,IAAAA,UAAU,EAAE;AAHI,GAVa;AAe/BP,EAAAA,UAAU,EAAE;AACVQ,IAAAA,eAAe,EAAE,MADP;AAEVC,IAAAA,YAAY,EAAE,EAFJ;AAGVrC,IAAAA,KAAK,EAALA,KAHU;AAIVmC,IAAAA,UAAU,EAAE;AAJF;AAfmB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { View, StyleSheet, Dimensions, Alert } from \"react-native\";\r\n//Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//Action\r\nimport { UploadProfilePic } from \"../../reducers\";\r\nimport { EditButton, ProfilePic, ProfileBody } from \"./components\";\r\nimport { ActionSheetProvider } from \"@expo/react-native-action-sheet\";\r\n//Loader\r\nimport Loader from \"../../components/Loaders/Loader\";\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\nexport const ProfileScreen = (props) => {\r\n  const user = useSelector((state) => state.auth.user);\r\n  const loading = useSelector((state) => state.auth.isLoading);\r\n  const [imageUri, setImageUri] = useState(\"\");\r\n  const [filename, setFilename] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [uploadButton, setUploadButton] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n  const unmounted = useRef(false);\r\n  useEffect(() => {\r\n    return () => {\r\n      unmounted.current = true;\r\n    };\r\n  }, []);\r\n  const UploadProfile = async () => {\r\n    try {\r\n      await dispatch(UploadProfilePic(imageUri, filename, type));\r\n      setUploadButton(true);\r\n      if (!unmounted.current) {\r\n        Alert.alert(\"Cập nhật\", \"Cập nhật thành công\", [\r\n          {\r\n            text: \"Ok\",\r\n          },\r\n        ]);\r\n      }\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ActionSheetProvider>\r\n      <View style={styles.container}>\r\n        <View style={styles.header}></View>\r\n        {loading ? <Loader /> : <></>}\r\n        <View style={styles.profileContainer}>\r\n          <View style={styles.profileBox}>\r\n            <EditButton navigation={props.navigation} user={user} />\r\n            <ProfilePic\r\n              user={user}\r\n              imageUri={imageUri}\r\n              setImageUri={setImageUri}\r\n              setType={setType}\r\n              setFilename={setFilename}\r\n              setUploadButton={setUploadButton}\r\n            />\r\n            <ProfileBody\r\n              user={user}\r\n              uploadButton={uploadButton}\r\n              setUploadButton={setUploadButton}\r\n              setImageUri={setImageUri}\r\n              loading={loading}\r\n              UploadProfile={UploadProfile}\r\n            />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </ActionSheetProvider>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  header: {\r\n    width,\r\n    flexDirection: \"row\",\r\n    height: 0.15 * height,\r\n    justifyContent: \"center\",\r\n  },\r\n  profileContainer: {\r\n    width,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  profileBox: {\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 20,\r\n    width,\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}