{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\ForgetPasswordScreen\\\\ForgetPasswordScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Field, reduxForm } from \"redux-form\";\nimport CustomText from \"../../components/UI/CustomText\";\nimport renderField from \"./components/ForgetRenderField\";\nimport Colors from \"../../utils/Colors\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ForgetPassword } from \"../../reducers\";\n\nvar validate = function validate(values) {\n  var errors = {};\n\n  if (!values.email) {\n    errors.email = \"Email không được bỏ trống\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Email không hơp lệ\";\n  }\n\n  return errors;\n};\n\nvar SignupForm = function SignupForm(props) {\n  var handleSubmit = props.handleSubmit,\n      reset = props.reset;\n  var loading = useSelector(function (state) {\n    return state.auth.isLoading;\n  });\n  var dispatch = useDispatch();\n  var unmounted = useRef(false);\n  useEffect(function () {\n    return function () {\n      unmounted.current = true;\n    };\n  }, []);\n\n  var submit = function submit(values) {\n    return _regeneratorRuntime.async(function submit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(dispatch(ForgetPassword(values.email)));\n\n          case 3:\n            if (!unmounted.current) {\n              props.navigation.navigate(\"FinishResetScreen\", {\n                value: values\n              });\n            }\n\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      props.navigation.goBack();\n    },\n    style: {\n      position: \"absolute\",\n      top: 30,\n      left: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(Feather, {\n    name: \"arrow-left-circle\",\n    size: 30,\n    color: Colors.lighter_green,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(CustomText, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \" Forget Password \"), React.createElement(Field, {\n    name: \"email\",\n    keyboardType: \"email-address\",\n    icon: \"email\",\n    label: \"Email\",\n    component: renderField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: handleSubmit(submit),\n    style: {\n      marginVertical: 10,\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.signIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, loading ? React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }) : React.createElement(CustomText, {\n    style: styles.textSign,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"NEXT\")))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  content: {\n    marginTop: \"20%\",\n    height: 300,\n    paddingHorizontal: 20\n  },\n  title: {\n    color: Colors.lighter_green,\n    fontSize: 30\n  },\n  signIn: {\n    width: \"100%\",\n    height: 45,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 5,\n    flexDirection: \"row\",\n    marginBottom: 10,\n    backgroundColor: Colors.lighter_green\n  },\n  textSign: {\n    fontSize: 15,\n    color: \"#fff\",\n    fontWeight: \"500\"\n  }\n});\nexport var ForgetPwScreen = reduxForm({\n  form: \"contact\",\n  validate: validate\n})(SignupForm);","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/ForgetPasswordScreen/ForgetPasswordScreen.js"],"names":["React","useRef","useEffect","Field","reduxForm","CustomText","renderField","Colors","Feather","useDispatch","useSelector","ForgetPassword","validate","values","errors","email","test","SignupForm","props","handleSubmit","reset","loading","state","auth","isLoading","dispatch","unmounted","current","submit","navigation","navigate","value","alert","styles","container","goBack","position","top","left","lighter_green","content","title","marginVertical","alignItems","signIn","textSign","StyleSheet","create","flex","backgroundColor","marginTop","height","paddingHorizontal","color","fontSize","width","justifyContent","borderRadius","flexDirection","marginBottom","fontWeight","ForgetPwScreen","form"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport CustomText from \"../../components/UI/CustomText\";\r\nimport renderField from \"./components/ForgetRenderField\";\r\n//Colors\r\nimport Colors from \"../../utils/Colors\";\r\n//Icon\r\nimport { Feather } from \"@expo/vector-icons\";\r\n//Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//Action\r\nimport { ForgetPassword } from \"../../reducers\";\r\n\r\n//Validation\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.email) {\r\n    errors.email = \"Email không được bỏ trống\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = \"Email không hơp lệ\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst SignupForm = (props) => {\r\n  const { handleSubmit, reset } = props;\r\n  const loading = useSelector((state) => state.auth.isLoading);\r\n  const dispatch = useDispatch();\r\n  const unmounted = useRef(false);\r\n  useEffect(() => {\r\n    return () => {\r\n      unmounted.current = true;\r\n    };\r\n  }, []);\r\n  const submit = async (values) => {\r\n    try {\r\n      await dispatch(ForgetPassword(values.email));\r\n      if (!unmounted.current) {\r\n        props.navigation.navigate(\"FinishResetScreen\", {\r\n          value: values,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          props.navigation.goBack();\r\n        }}\r\n        style={{ position: \"absolute\", top: 30, left: 20 }}\r\n      >\r\n        <Feather\r\n          name='arrow-left-circle'\r\n          size={30}\r\n          color={Colors.lighter_green}\r\n        />\r\n      </TouchableOpacity>\r\n      <View style={styles.content}>\r\n        <CustomText style={styles.title}> Forget Password </CustomText>\r\n        <Field\r\n          name='email'\r\n          keyboardType='email-address'\r\n          icon='email'\r\n          label='Email'\r\n          component={renderField}\r\n        />\r\n        <TouchableOpacity\r\n          onPress={handleSubmit(submit)}\r\n          style={{ marginVertical: 10, alignItems: \"center\" }}\r\n        >\r\n          <View style={styles.signIn}>\r\n            {loading ? (\r\n              <ActivityIndicator size='small' color='#fff' />\r\n            ) : (\r\n              <CustomText style={styles.textSign}>NEXT</CustomText>\r\n            )}\r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  content: {\r\n    marginTop: \"20%\",\r\n    height: 300,\r\n    paddingHorizontal: 20,\r\n  },\r\n  title: {\r\n    color: Colors.lighter_green,\r\n    fontSize: 30,\r\n  },\r\n  signIn: {\r\n    width: \"100%\",\r\n    height: 45,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 5,\r\n    flexDirection: \"row\",\r\n    marginBottom: 10,\r\n    backgroundColor: Colors.lighter_green,\r\n  },\r\n  textSign: {\r\n    fontSize: 15,\r\n    color: \"#fff\",\r\n    fontWeight: \"500\",\r\n  },\r\n});\r\nexport const ForgetPwScreen = reduxForm({\r\n  form: \"contact\", // a unique identifier for this form\r\n  validate, // <--- validation function given to redux-form\r\n})(SignupForm);\r\n"]},"metadata":{},"sourceType":"module"}