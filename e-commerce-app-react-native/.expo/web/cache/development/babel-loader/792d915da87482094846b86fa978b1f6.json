{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\node_modules\\\\react-native-loading-placeholder\\\\src\\\\Placeholder.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\n\nvar Placeholder = function (_Component) {\n  _inherits(Placeholder, _Component);\n\n  var _super = _createSuper(Placeholder);\n\n  function Placeholder(props) {\n    var _this;\n\n    _classCallCheck(this, Placeholder);\n\n    _this = _super.call(this, props);\n\n    _this._resolve = function () {\n      _this.setState(function () {\n        return {\n          resolved: true\n        };\n      });\n    };\n\n    _this._setDimensions = function (event) {\n      var x = event.nativeEvent.layout.x;\n\n      _this.setState(function () {\n        return {\n          x: x,\n          isMeasured: true\n        };\n      });\n    };\n\n    _this.state = {\n      x: 0,\n      width: 0,\n      isMeasured: false,\n      resolved: false\n    };\n    return _this;\n  }\n\n  _createClass(Placeholder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.context.registerPlaceholder(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          style = _this$props.style,\n          children = _this$props.children;\n      var _this$state = this.state,\n          x = _this$state.x,\n          isMeasured = _this$state.isMeasured,\n          resolved = _this$state.resolved;\n      var _this$context = this.context,\n          animatedComponent = _this$context.animatedComponent,\n          position = _this$context.position;\n\n      if (resolved) {\n        return children;\n      }\n\n      var animatedStyle = {\n        height: '100%',\n        width: '100%',\n        transform: [{\n          translateX: position\n        }],\n        left: -x\n      };\n      return React.createElement(View, {\n        ref: function ref(_ref) {\n          _this2.testRef = _ref;\n        },\n        onLayout: this._setDimensions,\n        style: [style, styles.overflow],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, isMeasured && React.createElement(Animated.View, {\n        style: animatedStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, animatedComponent));\n    }\n  }]);\n\n  return Placeholder;\n}(Component);\n\nexport { Placeholder as default };\nPlaceholder.contextTypes = {\n  position: PropTypes.object.isRequired,\n  animatedComponent: PropTypes.object.isRequired,\n  registerPlaceholder: PropTypes.func.isRequired\n};\nvar styles = StyleSheet.create({\n  overflow: {\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/node_modules/react-native-loading-placeholder/src/Placeholder.js"],"names":["React","Component","PropTypes","Placeholder","props","_resolve","setState","resolved","_setDimensions","event","x","nativeEvent","layout","isMeasured","state","width","context","registerPlaceholder","style","children","animatedComponent","position","animatedStyle","height","transform","translateX","left","ref","testRef","styles","overflow","contextTypes","object","isRequired","func","StyleSheet","create"],"mappings":";;;;;;;;;;;AAIA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;IAmBqBC,W;;;;;AAGnB,uBAAYC,KAAZ,EAAqC;AAAA;;AAAA;;AACnC,8BAAMA,KAAN;;AADmC,UA2CrCC,QA3CqC,GA2C1B,YAAM;AACf,YAAKC,QAAL,CAAc;AAAA,eAAO;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAP;AAAA,OAAd;AACD,KA7CoC;;AAAA,UA+CrCC,cA/CqC,GA+CpB,UAACC,KAAD,EAAiB;AAChC,UAAQC,CAAR,GAAcD,KAAK,CAACE,WAAN,CAAkBC,MAAhC,CAAQF,CAAR;;AACA,YAAKJ,QAAL,CAAc;AAAA,eAAO;AAAEI,UAAAA,CAAC,EAADA,CAAF;AAAKG,UAAAA,UAAU,EAAE;AAAjB,SAAP;AAAA,OAAd;AACD,KAlDoC;;AAEnC,UAAKC,KAAL,GAAa;AACXJ,MAAAA,CAAC,EAAE,CADQ;AAEXK,MAAAA,KAAK,EAAE,CAFI;AAGXF,MAAAA,UAAU,EAAE,KAHD;AAIXN,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAFmC;AAQpC;;;;WAED,6BAA0B;AACxB,WAAKS,OAAL,CAAaC,mBAAb,CAAiC,IAAjC;AACD;;;WAED,kBAA2B;AAAA;;AACzB,wBAA4B,KAAKb,KAAjC;AAAA,UAAQc,KAAR,eAAQA,KAAR;AAAA,UAAeC,QAAf,eAAeA,QAAf;AACA,wBAAoC,KAAKL,KAAzC;AAAA,UAAQJ,CAAR,eAAQA,CAAR;AAAA,UAAWG,UAAX,eAAWA,UAAX;AAAA,UAAuBN,QAAvB,eAAuBA,QAAvB;AACA,0BAAwC,KAAKS,OAA7C;AAAA,UAAQI,iBAAR,iBAAQA,iBAAR;AAAA,UAA2BC,QAA3B,iBAA2BA,QAA3B;;AAEA,UAAId,QAAJ,EAAc;AACZ,eAAOY,QAAP;AACD;;AACD,UAAMG,aAAa,GAAG;AACpBC,QAAAA,MAAM,EAAE,MADY;AAEpBR,QAAAA,KAAK,EAAE,MAFa;AAGpBS,QAAAA,SAAS,EAAE,CAAC;AAAEC,UAAAA,UAAU,EAAEJ;AAAd,SAAD,CAHS;AAIpBK,QAAAA,IAAI,EAAE,CAAChB;AAJa,OAAtB;AAMA,aACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAE,aAAAiB,IAAG,EAAI;AACV,UAAA,MAAI,CAACC,OAAL,GAAeD,IAAf;AACD,SAHH;AAIE,QAAA,QAAQ,EAAE,KAAKnB,cAJjB;AAKE,QAAA,KAAK,EAAE,CAACU,KAAD,EAAQW,MAAM,CAACC,QAAf,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGjB,UAAU,IACT,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAES,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,iBADH,CARJ,CADF;AAcD;;;;EA7CsCnB,S;;SAApBE,W;AAwDrBA,WAAW,CAAC4B,YAAZ,GAA2B;AACvBV,EAAAA,QAAQ,EAAEnB,SAAS,CAAC8B,MAAV,CAAiBC,UADJ;AAEvBb,EAAAA,iBAAiB,EAAElB,SAAS,CAAC8B,MAAV,CAAiBC,UAFb;AAGvBhB,EAAAA,mBAAmB,EAAEf,SAAS,CAACgC,IAAV,CAAeD;AAHb,CAA3B;AAOA,IAAMJ,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,QAAQ,EAAE;AACRA,IAAAA,QAAQ,EAAE;AADF;AADqB,CAAlB,CAAf","sourcesContent":["/*\n* @flow\n*/\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  StyleSheet,\n  Animated,\n} from 'react-native';\n\ntype PlaceholderProps = {\n  style: Object,\n  animatedComponent: React.Element<*>\n};\n\ntype PlaceholderState = {\n  x: number,\n  width: number,\n  isMeasured: boolean,\n  resolved: boolean\n};\n\nexport default class Placeholder extends Component {\n  state: PlaceholderState;\n  props: PlaceholderProps;\n  constructor(props: PlaceholderProps) {\n    super(props);\n    this.state = {\n      x: 0,\n      width: 0,\n      isMeasured: false,\n      resolved: false\n    };\n  }\n\n  componentDidMount(): void {\n    this.context.registerPlaceholder(this);\n  }\n\n  render(): React.Element<*> {\n    const { style, children } = this.props;\n    const { x, isMeasured, resolved } = this.state;\n    const { animatedComponent, position } = this.context;\n\n    if (resolved) {\n      return children\n    }\n    const animatedStyle = {\n      height: '100%',\n      width: '100%',\n      transform: [{ translateX: position }],\n      left: -x\n    };\n    return (\n      <View\n        ref={ref => {\n          this.testRef = ref;\n        }}\n        onLayout={this._setDimensions}\n        style={[style, styles.overflow]}\n      >\n        {isMeasured &&\n          <Animated.View style={animatedStyle}>\n            {animatedComponent}\n          </Animated.View>}\n      </View>\n    );\n  }\n  _resolve = () => {\n    this.setState(() => ({ resolved: true }));\n  };\n\n  _setDimensions = (event): void => {\n    const { x } = event.nativeEvent.layout;\n    this.setState(() => ({ x, isMeasured: true }));\n  };\n}\n\nPlaceholder.contextTypes = {\n    position: PropTypes.object.isRequired,\n    animatedComponent: PropTypes.object.isRequired,\n    registerPlaceholder: PropTypes.func.isRequired\n}\n\n\nconst styles = StyleSheet.create({\n  overflow: {\n    overflow: 'hidden'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}