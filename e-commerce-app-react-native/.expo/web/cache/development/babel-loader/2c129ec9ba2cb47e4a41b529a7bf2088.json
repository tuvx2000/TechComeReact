{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\TouchIdScreen\\\\components\\\\AuthBody.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useSelector } from \"react-redux\";\nimport Colors from \"../../../utils/Colors\";\nimport CustomText from \"../../../components/UI/CustomText\";\nimport userMessages from \"../../../messages/user\";\nimport * as LocalAuthentication from \"expo-local-authentication\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { secretKey } from \"../../../utils/Config\";\nimport PropTypes from \"prop-types\";\nexport var AuthBody = function AuthBody() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEnabled = _useState2[0],\n      setIsEnabled = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isSupport = _useState4[0],\n      setIsSupport = _useState4[1];\n\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  });\n\n  var switchHandler = function switchHandler() {\n    return _regeneratorRuntime.async(function switchHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsEnabled(function (previousState) {\n              return !previousState;\n            });\n\n            if (isEnabled) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(secretKey, JSON.stringify({\n              email: user.email,\n              password: user.password\n            })));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(SecureStore.deleteItemAsync(secretKey));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getData = function getData() {\n    var resData, data;\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync(secretKey));\n\n          case 2:\n            resData = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(JSON.parse(resData));\n\n          case 5:\n            data = _context2.sent;\n\n            if (!(resData === null)) {\n              _context2.next = 10;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 10:\n            if (!(data.email !== user.email)) {\n              _context2.next = 14;\n              break;\n            }\n\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(SecureStore.deleteItemAsync(secretKey));\n\n          case 13:\n            return _context2.abrupt(\"return\", setIsEnabled(false));\n\n          case 14:\n            setIsEnabled(true);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    checkDeviceForHardware();\n    checkForFingerprints();\n    getData();\n  }, [user.id]);\n\n  var checkDeviceForHardware = function checkDeviceForHardware() {\n    var compatible;\n    return _regeneratorRuntime.async(function checkDeviceForHardware$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(LocalAuthentication.hasHardwareAsync());\n\n          case 2:\n            compatible = _context3.sent;\n            setIsSupport(compatible);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkForFingerprints = function checkForFingerprints() {\n    var fingerprints;\n    return _regeneratorRuntime.async(function checkForFingerprints$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(LocalAuthentication.isEnrolledAsync());\n\n          case 2:\n            fingerprints = _context4.sent;\n            setIsSupport(fingerprints);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, !isSupport ? React.createElement(CustomText, {\n    style: styles.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, userMessages[\"user.touchid.fail\"], \"!\") : React.createElement(React.Fragment, null), React.createElement(View, {\n    style: styles.circleImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../../assets/Images/faceid.png\"),\n    style: styles.faceid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.contentContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(CustomText, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"M\\u1EDF kh\\xF3a b\\u1EB1ng v\\xE2n tay ho\\u1EB7c khu\\xF4n m\\u1EB7t\"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#767577\",\n      true: \"#60c46b\"\n    },\n    thumbColor: isEnabled ? Colors.white : \"#f4f3f4\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: switchHandler,\n    value: isEnabled,\n    disabled: !isSupport,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })));\n};\nAuthBody.propTypes = {};\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 20,\n    marginVertical: 20,\n    alignItems: \"center\"\n  },\n  contentContainer: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  error: {\n    marginVertical: 10,\n    color: \"red\",\n    fontFamily: \"Roboto-Medium\",\n    fontSize: 15\n  },\n  circleImage: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderWidth: 2,\n    padding: 20,\n    borderRadius: 70,\n    borderStyle: \"dashed\",\n    borderColor: Colors.grey\n  },\n  faceid: {\n    resizeMode: \"contain\",\n    height: 100,\n    width: 100\n  },\n  text: {\n    fontFamily: \"Roboto-Medium\",\n    fontSize: 15,\n    color: Colors.lighter_green\n  }\n});","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/TouchIdScreen/components/AuthBody.js"],"names":["React","useEffect","useState","useSelector","Colors","CustomText","userMessages","LocalAuthentication","SecureStore","secretKey","PropTypes","AuthBody","isEnabled","setIsEnabled","isSupport","setIsSupport","user","state","auth","switchHandler","previousState","setItemAsync","JSON","stringify","email","password","deleteItemAsync","getData","getItemAsync","resData","parse","data","checkDeviceForHardware","checkForFingerprints","id","hasHardwareAsync","compatible","isEnrolledAsync","fingerprints","styles","container","error","circleImage","require","faceid","contentContainer","text","false","true","white","propTypes","StyleSheet","create","paddingHorizontal","marginVertical","alignItems","width","flexDirection","justifyContent","marginTop","color","fontFamily","fontSize","borderWidth","padding","borderRadius","borderStyle","borderColor","grey","resizeMode","height","lighter_green"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, StyleSheet, Switch, Image } from \"react-native\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Colors from \"../../../utils/Colors\";\r\nimport CustomText from \"../../../components/UI/CustomText\";\r\nimport userMessages from \"../../../messages/user\";\r\n//Authentiation Touch ID Face ID\r\nimport * as LocalAuthentication from \"expo-local-authentication\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport { secretKey } from \"../../../utils/Config\";\r\n//PropTypes check\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AuthBody = () => {\r\n  const [isEnabled, setIsEnabled] = useState(false);\r\n  const [isSupport, setIsSupport] = useState(false);\r\n  const user = useSelector((state) => state.auth.user);\r\n  const switchHandler = async () => {\r\n    setIsEnabled((previousState) => !previousState);\r\n    if (!isEnabled) {\r\n      await SecureStore.setItemAsync(\r\n        secretKey,\r\n        JSON.stringify({\r\n          email: user.email,\r\n          password: user.password,\r\n        })\r\n      );\r\n    } else {\r\n      await SecureStore.deleteItemAsync(secretKey);\r\n    }\r\n  };\r\n  const getData = async () => {\r\n    const resData = await SecureStore.getItemAsync(secretKey);\r\n    const data = await JSON.parse(resData);\r\n    if (resData === null) {\r\n      return;\r\n    } else if (data.email !== user.email) {\r\n      await SecureStore.deleteItemAsync(secretKey);\r\n      return setIsEnabled(false);\r\n    }\r\n    setIsEnabled(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkDeviceForHardware();\r\n    checkForFingerprints();\r\n    getData();\r\n  }, [user.id]);\r\n  const checkDeviceForHardware = async () => {\r\n    let compatible = await LocalAuthentication.hasHardwareAsync();\r\n    setIsSupport(compatible);\r\n  };\r\n  const checkForFingerprints = async () => {\r\n    let fingerprints = await LocalAuthentication.isEnrolledAsync();\r\n    setIsSupport(fingerprints);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {!isSupport ? (\r\n        <CustomText style={styles.error}>\r\n          {userMessages[\"user.touchid.fail\"]}!\r\n        </CustomText>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <View style={styles.circleImage}>\r\n        <Image\r\n          source={require(\"../../../assets/Images/faceid.png\")}\r\n          style={styles.faceid}\r\n        />\r\n      </View>\r\n      <View style={styles.contentContainer}>\r\n        <CustomText style={styles.text}>\r\n          Mở khóa bằng vân tay hoặc khuôn mặt\r\n        </CustomText>\r\n        <Switch\r\n          trackColor={{ false: \"#767577\", true: \"#60c46b\" }}\r\n          thumbColor={isEnabled ? Colors.white : \"#f4f3f4\"}\r\n          ios_backgroundColor=\"#3e3e3e\"\r\n          onValueChange={switchHandler}\r\n          value={isEnabled}\r\n          disabled={!isSupport}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nAuthBody.propTypes = {};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingHorizontal: 20,\r\n    marginVertical: 20,\r\n    alignItems: \"center\",\r\n  },\r\n  contentContainer: {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  error: {\r\n    marginVertical: 10,\r\n    color: \"red\",\r\n    fontFamily: \"Roboto-Medium\",\r\n    fontSize: 15,\r\n  },\r\n  circleImage: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderWidth: 2,\r\n    padding: 20,\r\n    borderRadius: 70,\r\n    borderStyle: \"dashed\",\r\n    borderColor: Colors.grey,\r\n  },\r\n  faceid: {\r\n    resizeMode: \"contain\",\r\n    height: 100,\r\n    width: 100,\r\n  },\r\n  text: {\r\n    fontFamily: \"Roboto-Medium\",\r\n    fontSize: 15,\r\n    color: Colors.lighter_green,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}