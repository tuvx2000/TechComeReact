{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\PaymentScreen\\\\PaymentScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Colors from \"../../utils/Colors\";\nimport Loader from \"../../components/Loaders/Loader\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addOrder, resetCart } from \"../../reducers\";\nimport CustomText from \"../../components/UI/CustomText\";\nimport { Header, PaymentBody } from \"./components\";\nimport { SummaryOrder } from \"../PreOrderScreen/components\";\nexport var PaymentScreen = function PaymentScreen(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var carts = useSelector(function (state) {\n    return state.cart.cartItems;\n  });\n  var cartLoading = useSelector(function (state) {\n    return state.cart.isLoading;\n  });\n  var orderLoading = useSelector(function (state) {\n    return state.order.isLoading;\n  });\n  var token = props.route.params.token;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      payByCard = _useState4[0],\n      setPayByCard = _useState4[1];\n\n  var paymentMethod = payByCard ? 'Credit Card' : 'Cash';\n  var unmounted = useRef(false);\n  useEffect(function () {\n    return function () {\n      unmounted.current = true;\n    };\n  }, []);\n  useEffect(function () {\n    var interval = setInterval(function () {\n      setLoading(false);\n    }, 1000);\n\n    if (!unmounted.current) {\n      return function () {\n        return clearInterval(interval);\n      };\n    }\n  });\n  useEffect(function () {\n    setPayByCard(token ? true : false);\n  }, [token]);\n  var dispatch = useDispatch();\n  var _props$route$params = props.route.params,\n      orderItems = _props$route$params.orderItems,\n      name = _props$route$params.name,\n      phone = _props$route$params.phone,\n      total = _props$route$params.total,\n      cartId = _props$route$params.cartId,\n      fullAddress = _props$route$params.fullAddress;\n\n  var addOrderAct = function addOrderAct() {\n    return _regeneratorRuntime.async(function addOrderAct$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            token = payByCard ? token : {};\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(dispatch(addOrder(token, orderItems, name, total, paymentMethod, fullAddress, phone)));\n\n          case 4:\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(dispatch(resetCart(cartId)));\n\n          case 6:\n            props.navigation.navigate('FinishOrder');\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    navigation: props.navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), loading || cartLoading || orderLoading ? React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }) : React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, React.createElement(PaymentBody, {\n    navigation: props.navigation,\n    payByCard: payByCard,\n    setPayByCard: setPayByCard,\n    token: token,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), React.createElement(SummaryOrder, {\n    cartItems: carts.items,\n    total: total,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.total,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.orderButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: addOrderAct,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, React.createElement(CustomText, {\n    style: {\n      color: '#fff',\n      fontSize: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Ti\\u1EBFn h\\xE0nh \\u0111\\u1EB7t h\\xE0ng\"))))));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.white\n  },\n  total: {\n    width: '100%',\n    position: 'absolute',\n    bottom: 20,\n    left: 0,\n    paddingHorizontal: 10,\n    backgroundColor: 'transparent'\n  },\n  orderButton: {\n    width: '100%',\n    height: 50,\n    backgroundColor: Colors.red,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 5,\n    marginBottom: 5\n  }\n});","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/PaymentScreen/PaymentScreen.js"],"names":["React","useState","useEffect","useRef","Colors","Loader","useDispatch","useSelector","addOrder","resetCart","CustomText","Header","PaymentBody","SummaryOrder","PaymentScreen","props","loading","setLoading","carts","state","cart","cartItems","cartLoading","isLoading","orderLoading","order","token","route","params","payByCard","setPayByCard","paymentMethod","unmounted","current","interval","setInterval","clearInterval","dispatch","orderItems","name","phone","total","cartId","fullAddress","addOrderAct","navigation","navigate","alert","styles","container","items","orderButton","color","fontSize","StyleSheet","create","flex","backgroundColor","white","width","position","bottom","left","paddingHorizontal","height","red","alignItems","justifyContent","borderRadius","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';\r\n//Icon\r\nimport Colors from '../../utils/Colors';\r\nimport Loader from '../../components/Loaders/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n//Action\r\nimport { addOrder, resetCart } from '../../reducers';\r\n//Text\r\nimport CustomText from '../../components/UI/CustomText';\r\nimport { Header, PaymentBody } from './components';\r\nimport { SummaryOrder } from '../PreOrderScreen/components';\r\n\r\nexport const PaymentScreen = (props) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const carts = useSelector((state) => state.cart.cartItems);\r\n  const cartLoading = useSelector((state) => state.cart.isLoading);\r\n  const orderLoading = useSelector((state) => state.order.isLoading);\r\n  let token = props.route.params.token;\r\n  const [payByCard, setPayByCard] = useState(false);\r\n  const paymentMethod = payByCard ? 'Credit Card' : 'Cash';\r\n  const unmounted = useRef(false);\r\n  useEffect(() => {\r\n    return () => {\r\n      unmounted.current = true;\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n    if (!unmounted.current) {\r\n      return () => clearInterval(interval);\r\n    }\r\n  });\r\n  useEffect(() => {\r\n    setPayByCard(token ? true : false);\r\n  }, [token]);\r\n\r\n  const dispatch = useDispatch();\r\n  const {\r\n    orderItems,\r\n    name,\r\n    phone,\r\n    total,\r\n    cartId,\r\n    fullAddress,\r\n  } = props.route.params;\r\n\r\n  //action Add Order\r\n  const addOrderAct = async () => {\r\n    try {\r\n      token = payByCard ? token : {};\r\n      await dispatch(\r\n        addOrder(\r\n          token,\r\n          orderItems,\r\n          name,\r\n          total,\r\n          paymentMethod,\r\n          fullAddress,\r\n          phone,\r\n        ),\r\n      );\r\n      await dispatch(resetCart(cartId));\r\n      props.navigation.navigate('FinishOrder');\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Header navigation={props.navigation} />\r\n      {loading || cartLoading || orderLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <ScrollView>\r\n            <PaymentBody\r\n              navigation={props.navigation}\r\n              payByCard={payByCard}\r\n              setPayByCard={setPayByCard}\r\n              token={token}\r\n            />\r\n            <SummaryOrder cartItems={carts.items} total={total} />\r\n          </ScrollView>\r\n          <View style={styles.total}>\r\n            <View style={styles.orderButton}>\r\n              <TouchableOpacity onPress={addOrderAct}>\r\n                <CustomText style={{ color: '#fff', fontSize: 16 }}>\r\n                  Tiến hành đặt hàng\r\n                </CustomText>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, backgroundColor: Colors.white },\r\n  total: {\r\n    width: '100%',\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    left: 0,\r\n    paddingHorizontal: 10,\r\n    backgroundColor: 'transparent',\r\n  },\r\n  orderButton: {\r\n    width: '100%',\r\n    height: 50,\r\n    backgroundColor: Colors.red,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 5,\r\n    marginBottom: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}