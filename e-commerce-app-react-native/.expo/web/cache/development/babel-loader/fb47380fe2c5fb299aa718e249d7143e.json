{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport valid from \"card-validator\";\nimport pick from \"lodash.pick\";\nimport values from \"lodash.values\";\nimport every from \"lodash.every\";\n\nvar toStatus = function toStatus(validation) {\n  return validation.isValid ? \"valid\" : validation.isPotentiallyValid ? \"incomplete\" : \"invalid\";\n};\n\nvar FALLBACK_CARD = {\n  gaps: [4, 8, 12],\n  lengths: [16],\n  code: {\n    size: 3\n  }\n};\n\nvar CCFieldValidator = function CCFieldValidator(displayedFields, validatePostalCode) {\n  var _this = this;\n\n  _classCallCheck(this, CCFieldValidator);\n\n  this.validateValues = function (formValues) {\n    var numberValidation = valid.number(formValues.number);\n    var expiryValidation = valid.expirationDate(formValues.expiry);\n    var maxCVCLength = (numberValidation.card || FALLBACK_CARD).code.size;\n    var cvcValidation = valid.cvv(formValues.cvc, maxCVCLength);\n    var validationStatuses = pick({\n      number: toStatus(numberValidation),\n      expiry: toStatus(expiryValidation),\n      cvc: toStatus(cvcValidation),\n      name: !!formValues.name ? \"valid\" : \"incomplete\",\n      postalCode: _this._validatePostalCode(formValues.postalCode)\n    }, _this._displayedFields);\n    return {\n      valid: every(values(validationStatuses), function (status) {\n        return status === \"valid\";\n      }),\n      status: validationStatuses\n    };\n  };\n\n  this._displayedFields = displayedFields;\n  this._validatePostalCode = validatePostalCode;\n};\n\nexport { CCFieldValidator as default };","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/node_modules/react-native-input-credit-card/src/CCFieldValidator.js"],"names":["valid","pick","values","every","toStatus","validation","isValid","isPotentiallyValid","FALLBACK_CARD","gaps","lengths","code","size","CCFieldValidator","displayedFields","validatePostalCode","validateValues","formValues","numberValidation","number","expiryValidation","expirationDate","expiry","maxCVCLength","card","cvcValidation","cvv","cvc","validationStatuses","name","postalCode","_validatePostalCode","_displayedFields","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,UAAU,EAAI;AAC7B,SAAOA,UAAU,CAACC,OAAX,GAAqB,OAArB,GACAD,UAAU,CAACE,kBAAX,GAAgC,YAAhC,GACA,SAFP;AAGD,CAJD;;AAMA,IAAMC,aAAa,GAAG;AAAEC,EAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAAR;AAAoBC,EAAAA,OAAO,EAAE,CAAC,EAAD,CAA7B;AAAmCC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR;AAAzC,CAAtB;;IACqBC,gB,GACnB,0BAAYC,eAAZ,EAA6BC,kBAA7B,EAAiD;AAAA;;AAAA;;AAAA,OAKjDC,cALiD,GAKhC,UAACC,UAAD,EAAgB;AAC/B,QAAMC,gBAAgB,GAAGlB,KAAK,CAACmB,MAAN,CAAaF,UAAU,CAACE,MAAxB,CAAzB;AACA,QAAMC,gBAAgB,GAAGpB,KAAK,CAACqB,cAAN,CAAqBJ,UAAU,CAACK,MAAhC,CAAzB;AACA,QAAMC,YAAY,GAAG,CAACL,gBAAgB,CAACM,IAAjB,IAAyBhB,aAA1B,EAAyCG,IAAzC,CAA8CC,IAAnE;AACA,QAAMa,aAAa,GAAGzB,KAAK,CAAC0B,GAAN,CAAUT,UAAU,CAACU,GAArB,EAA0BJ,YAA1B,CAAtB;AAEA,QAAMK,kBAAkB,GAAG3B,IAAI,CAAC;AAC9BkB,MAAAA,MAAM,EAAEf,QAAQ,CAACc,gBAAD,CADc;AAE9BI,MAAAA,MAAM,EAAElB,QAAQ,CAACgB,gBAAD,CAFc;AAG9BO,MAAAA,GAAG,EAAEvB,QAAQ,CAACqB,aAAD,CAHiB;AAI9BI,MAAAA,IAAI,EAAE,CAAC,CAACZ,UAAU,CAACY,IAAb,GAAoB,OAApB,GAA8B,YAJN;AAK9BC,MAAAA,UAAU,EAAE,KAAI,CAACC,mBAAL,CAAyBd,UAAU,CAACa,UAApC;AALkB,KAAD,EAM5B,KAAI,CAACE,gBANuB,CAA/B;AAQA,WAAO;AACLhC,MAAAA,KAAK,EAAEG,KAAK,CAACD,MAAM,CAAC0B,kBAAD,CAAP,EAA6B,UAAAK,MAAM;AAAA,eAAIA,MAAM,KAAK,OAAf;AAAA,OAAnC,CADP;AAELA,MAAAA,MAAM,EAAEL;AAFH,KAAP;AAID,GAvBgD;;AAC/C,OAAKI,gBAAL,GAAwBlB,eAAxB;AACA,OAAKiB,mBAAL,GAA2BhB,kBAA3B;AACD,C;;SAJkBF,gB","sourcesContent":["import valid from \"card-validator\";\nimport pick from \"lodash.pick\";\nimport values from \"lodash.values\";\nimport every from \"lodash.every\";\n\nconst toStatus = validation => {\n  return validation.isValid ? \"valid\" :\n         validation.isPotentiallyValid ? \"incomplete\" :\n         \"invalid\";\n};\n\nconst FALLBACK_CARD = { gaps: [4, 8, 12], lengths: [16], code: { size: 3 } };\nexport default class CCFieldValidator {\n  constructor(displayedFields, validatePostalCode) {\n    this._displayedFields = displayedFields;\n    this._validatePostalCode = validatePostalCode;\n  }\n\n  validateValues = (formValues) => {\n    const numberValidation = valid.number(formValues.number);\n    const expiryValidation = valid.expirationDate(formValues.expiry);\n    const maxCVCLength = (numberValidation.card || FALLBACK_CARD).code.size;\n    const cvcValidation = valid.cvv(formValues.cvc, maxCVCLength);\n\n    const validationStatuses = pick({\n      number: toStatus(numberValidation),\n      expiry: toStatus(expiryValidation),\n      cvc: toStatus(cvcValidation),\n      name: !!formValues.name ? \"valid\" : \"incomplete\",\n      postalCode: this._validatePostalCode(formValues.postalCode),\n    }, this._displayedFields);\n\n    return {\n      valid: every(values(validationStatuses), status => status === \"valid\"),\n      status: validationStatuses,\n    };\n  };\n}\n"]},"metadata":{},"sourceType":"module"}