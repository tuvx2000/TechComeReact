{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\PaymentScreen\\\\AddCreditCardScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AddSubscriptionView } from \"./components\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { getCreditCardToken } from \"../../utils/Tools\";\nvar STRIPE_ERROR = \"Payment service error. Try again later.\";\nexport var AddCreditCardScreen = function AddCreditCardScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      submitted = _useState2[0],\n      setSubmitted = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var onSubmit = function onSubmit(creditCardInput) {\n    var creditCardToken;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setSubmitted(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(getCreditCardToken(creditCardInput));\n\n          case 4:\n            creditCardToken = _context.sent;\n\n            if (!creditCardToken.error) {\n              _context.next = 9;\n              break;\n            }\n\n            setSubmitted(false);\n            setError(STRIPE_ERROR);\n            return _context.abrupt(\"return\");\n\n          case 9:\n            _context.next = 16;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            setSubmitted(false);\n            setError(STRIPE_ERROR);\n            return _context.abrupt(\"return\");\n\n          case 16:\n            navigation.navigate(\"PaymentScreen\", {\n              token: creditCardToken\n            });\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 11]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.backIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"arrow-left\",\n    size: 30,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }))), React.createElement(AddSubscriptionView, {\n    error: error,\n    submitted: submitted,\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  backIcon: {\n    marginTop: 20,\n    marginHorizontal: 20,\n    marginBottom: 20\n  }\n});","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/PaymentScreen/AddCreditCardScreen.js"],"names":["React","useState","AddSubscriptionView","MaterialCommunityIcons","getCreditCardToken","STRIPE_ERROR","AddCreditCardScreen","navigation","submitted","setSubmitted","error","setError","onSubmit","creditCardInput","creditCardToken","navigate","token","styles","container","backIcon","goBack","StyleSheet","create","flex","marginTop","marginHorizontal","marginBottom"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,mBAAT;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,SAASC,kBAAT;AAEA,IAAMC,YAAY,GAAG,yCAArB;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACrD,kBAAkCN,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA0BR,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAOC,eAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAGfJ,YAAAA,YAAY,CAAC,IAAD,CAAZ;AAHe;AAAA;AAAA,6CAOWL,kBAAkB,CAACS,eAAD,CAP7B;;AAAA;AAObC,YAAAA,eAPa;;AAAA,iBAQTA,eAAe,CAACJ,KARP;AAAA;AAAA;AAAA;;AAWXD,YAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,YAAAA,QAAQ,CAACN,YAAD,CAAR;AAZW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBbI,YAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,YAAAA,QAAQ,CAACN,YAAD,CAAR;AAnBa;;AAAA;AAsBfE,YAAAA,UAAU,CAACQ,QAAX,CAAoB,eAApB,EAAqC;AAAEC,cAAAA,KAAK,EAAEF;AAAT,aAArC;;AAtBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAyBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMZ,UAAU,CAACa,MAAX,EAAN;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,sBAAD;AAAwB,IAAA,IAAI,EAAC,YAA7B;AAA0C,IAAA,IAAI,EAAE,EAAhD;AAAoD,IAAA,KAAK,EAAC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAME,oBAAC,mBAAD;AACE,IAAA,KAAK,EAAEV,KADT;AAEE,IAAA,SAAS,EAAEF,SAFb;AAGE,IAAA,QAAQ,EAAEI,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAcD,CA3CM;AA6CP,IAAMK,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BJ,EAAAA,QAAQ,EAAE;AACRK,IAAAA,SAAS,EAAE,EADH;AAERC,IAAAA,gBAAgB,EAAE,EAFV;AAGRC,IAAAA,YAAY,EAAE;AAHN;AAJqB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { AddSubscriptionView } from \"./components\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { getCreditCardToken } from \"../../utils/Tools\";\r\n\r\nconst STRIPE_ERROR = \"Payment service error. Try again later.\";\r\n\r\nexport const AddCreditCardScreen = ({ navigation }) => {\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  // Handles submitting the payment request\r\n  const onSubmit = async (creditCardInput) => {\r\n    // Disable the Submit button after the request is sent\r\n    // console.log(creditCardInput);\r\n    setSubmitted(true);\r\n    let creditCardToken;\r\n    try {\r\n      // Create a credit card token\r\n      creditCardToken = await getCreditCardToken(creditCardInput);\r\n      if (creditCardToken.error) {\r\n        // Reset the state if Stripe responds with an error\r\n        // Set submitted to false to let the user subscribe again\r\n        setSubmitted(false);\r\n        setError(STRIPE_ERROR);\r\n        return;\r\n      }\r\n    } catch (e) {\r\n      // Reset the state if the request was sent with an error\r\n      // Set submitted to false to let the user subscribe again\r\n      setSubmitted(false);\r\n      setError(STRIPE_ERROR);\r\n      return;\r\n    } // Send a request to your server with the received credit card token\r\n    navigation.navigate(\"PaymentScreen\", { token: creditCardToken });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.backIcon}>\r\n        <TouchableOpacity onPress={() => navigation.goBack()}>\r\n          <MaterialCommunityIcons name='arrow-left' size={30} color='black' />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <AddSubscriptionView\r\n        error={error}\r\n        submitted={submitted}\r\n        onSubmit={onSubmit}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  backIcon: {\r\n    marginTop: 20,\r\n    marginHorizontal: 20,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}