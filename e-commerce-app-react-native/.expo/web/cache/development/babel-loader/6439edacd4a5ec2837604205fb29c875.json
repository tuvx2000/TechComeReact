{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\components\\\\UI\\\\ShareItem.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport { FontAwesome } from \"@expo/vector-icons\";\n\nvar ShareItem = function ShareItem(_ref) {\n  var imageURL = _ref.imageURL,\n      title = _ref.title,\n      message = _ref.message,\n      color = _ref.color;\n\n  var onShare = function onShare() {\n    var result;\n    return _regeneratorRuntime.async(function onShare$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Share.share({\n              title: title,\n              message: message,\n              url: imageURL\n            }));\n\n          case 3:\n            result = _context.sent;\n\n            if (result.action === Share.sharedAction) {\n              if (result.activityType) {} else {}\n            } else if (result.action === Share.dismissedAction) {}\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(TouchableOpacity, {\n    onPress: onShare,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(FontAwesome, {\n    name: \"share-square-o\",\n    size: 25,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ShareItem;","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/components/UI/ShareItem.js"],"names":["React","FontAwesome","ShareItem","imageURL","title","message","color","onShare","Share","share","url","result","action","sharedAction","activityType","dismissedAction","alert"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAyC;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AACzD,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAESC,KAAK,CAACC,KAAN,CAAY;AAC/BL,cAAAA,KAAK,EAAEA,KADwB;AAE/BC,cAAAA,OAAO,EAAEA,OAFsB;AAG/BK,cAAAA,GAAG,EAAEP;AAH0B,aAAZ,CAFT;;AAAA;AAENQ,YAAAA,MAFM;;AAOZ,gBAAIA,MAAM,CAACC,MAAP,KAAkBJ,KAAK,CAACK,YAA5B,EAA0C;AACxC,kBAAIF,MAAM,CAACG,YAAX,EAAyB,CAExB,CAFD,MAEO,CAEN;AACF,aAND,MAMO,IAAIH,MAAM,CAACC,MAAP,KAAkBJ,KAAK,CAACO,eAA5B,EAA6C,CAEnD;;AAfW;AAAA;;AAAA;AAAA;AAAA;AAiBZC,YAAAA,KAAK,CAAC,YAAMX,OAAP,CAAL;;AAjBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAoBA,SACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEE,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,gBAAlB;AAAmC,IAAA,IAAI,EAAE,EAAzC;AAA6C,IAAA,KAAK,EAAC,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA1BD;;AA4BA,eAAeL,SAAf","sourcesContent":["import React from \"react\";\r\nimport { TouchableOpacity, Share } from \"react-native\";\r\n//icon\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\n\r\nconst ShareItem = ({ imageURL, title, message, color }) => {\r\n  const onShare = async () => {\r\n    try {\r\n      const result = await Share.share({\r\n        title: title,\r\n        message: message,\r\n        url: imageURL,\r\n      });\r\n      if (result.action === Share.sharedAction) {\r\n        if (result.activityType) {\r\n          // shared with activity type of result.activityType\r\n        } else {\r\n          // shared\r\n        }\r\n      } else if (result.action === Share.dismissedAction) {\r\n        // dismissed\r\n      }\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <TouchableOpacity onPress={onShare}>\r\n      <FontAwesome name='share-square-o' size={25} color='white' />\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default ShareItem;\r\n"]},"metadata":{},"sourceType":"module"}