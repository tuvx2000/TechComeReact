{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\ProfileScreen\\\\EditProfileScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport Colors from \"../../utils/Colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { EditInfo } from \"../../reducers\";\nimport Loader from \"../../components/Loaders/Loader\";\nexport var EditProfileScreen = function EditProfileScreen(props) {\n  var user = props.route.params.user;\n  var loading = useSelector(function (state) {\n    return state.auth.isLoading;\n  });\n\n  var _useState = useState(user.address),\n      _useState2 = _slicedToArray(_useState, 2),\n      address = _useState2[0],\n      setAddress = _useState2[1];\n\n  var _useState3 = useState(user.phone),\n      _useState4 = _slicedToArray(_useState3, 2),\n      phone = _useState4[0],\n      setPhone = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      disableButton = _useState6[0],\n      setDisableBotton = _useState6[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (user.phone !== phone || user.address !== address) {\n      setDisableBotton(false);\n    }\n  }, [address, phone]);\n\n  var updateInfoHandler = function updateInfoHandler() {\n    return _regeneratorRuntime.async(function updateInfoHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(phone.length === 10 && address.length >= 6)) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(dispatch(EditInfo(phone, address)));\n\n          case 4:\n            props.navigation.navigate(\"Profile\");\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n            alert(_context.t0);\n\n          case 10:\n            _context.next = 13;\n            break;\n\n          case 12:\n            return _context.abrupt(\"return\", Alert.alert(\"Error\", \"Thông tin không hợp lệ. Vui lòng nhập lại\", [{\n              text: \"OK\"\n            }]));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 7]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, loading ? React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }\n  }) : React.createElement(React.Fragment, null), React.createElement(View, {\n    style: styles.backIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"arrow-left\",\n    size: 30,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.infoContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    label: \"Email\",\n    value: user.email,\n    disabled: true,\n    mode: \"outlined\",\n    theme: {\n      colors: {\n        primary: Colors.leave_green\n      }\n    },\n    selectionColor: Colors.leave_green,\n    style: {\n      marginVertical: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    label: \"Phone\",\n    value: phone,\n    mode: \"outlined\",\n    theme: {\n      colors: {\n        primary: Colors.leave_green\n      }\n    },\n    selectionColor: Colors.leave_green,\n    onChangeText: function onChangeText(text) {\n      return setPhone(text);\n    },\n    style: {\n      marginVertical: 10\n    },\n    keyboardType: \"numeric\",\n    returnKeyType: \"done\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    label: \"Address\",\n    value: address,\n    mode: \"outlined\",\n    theme: {\n      colors: {\n        primary: Colors.leave_green\n      }\n    },\n    selectionColor: Colors.leave_green,\n    onChangeText: function onChangeText(text) {\n      return setAddress(text);\n    },\n    style: {\n      marginVertical: 10\n    },\n    autoCapitalize: \"words\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    icon: \"update\",\n    mode: \"contained\",\n    loading: loading,\n    disabled: disableButton,\n    onPress: updateInfoHandler,\n    style: {\n      height: 50,\n      justifyContent: \"center\",\n      backgroundColor: Colors.leave_green,\n      marginHorizontal: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Update Your Information\"))));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  backIcon: {\n    marginVertical: 10,\n    marginHorizontal: 10\n  },\n  infoContainer: {\n    paddingHorizontal: 10\n  },\n  button: {\n    marginTop: 30\n  }\n});","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/ProfileScreen/EditProfileScreen.js"],"names":["React","useState","useEffect","MaterialCommunityIcons","TouchableOpacity","TextInput","Button","Colors","useDispatch","useSelector","EditInfo","Loader","EditProfileScreen","props","user","route","params","loading","state","auth","isLoading","address","setAddress","phone","setPhone","disableButton","setDisableBotton","dispatch","updateInfoHandler","length","navigation","navigate","alert","Alert","text","styles","container","backIcon","goBack","infoContainer","email","colors","primary","leave_green","marginVertical","button","height","justifyContent","backgroundColor","marginHorizontal","StyleSheet","create","flex","paddingHorizontal","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, StyleSheet, Alert } from \"react-native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport { TextInput, Button } from \"react-native-paper\";\r\nimport Colors from \"../../utils/Colors\";\r\n//Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//Action\r\nimport { EditInfo } from \"../../reducers\";\r\n//Loader\r\nimport Loader from \"../../components/Loaders/Loader\";\r\n\r\nexport const EditProfileScreen = (props) => {\r\n  const { user } = props.route.params;\r\n  const loading = useSelector((state) => state.auth.isLoading);\r\n  const [address, setAddress] = useState(user.address);\r\n  const [phone, setPhone] = useState(user.phone);\r\n  const [disableButton, setDisableBotton] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (user.phone !== phone || user.address !== address) {\r\n      setDisableBotton(false);\r\n    }\r\n  }, [address, phone]);\r\n\r\n  const updateInfoHandler = async () => {\r\n    if (phone.length === 10 && address.length >= 6) {\r\n      try {\r\n        await dispatch(EditInfo(phone, address));\r\n        props.navigation.navigate(\"Profile\");\r\n      } catch (err) {\r\n        alert(err);\r\n      }\r\n    } else {\r\n      return Alert.alert(\"Error\", \"Thông tin không hợp lệ. Vui lòng nhập lại\", [\r\n        {\r\n          text: \"OK\",\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {loading ? <Loader /> : <></>}\r\n      <View style={styles.backIcon}>\r\n        <TouchableOpacity onPress={() => props.navigation.goBack()}>\r\n          <MaterialCommunityIcons name='arrow-left' size={30} color='black' />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View>\r\n        <View style={styles.infoContainer}>\r\n          <TextInput\r\n            label='Email'\r\n            value={user.email}\r\n            disabled\r\n            mode='outlined'\r\n            theme={{ colors: { primary: Colors.leave_green } }}\r\n            selectionColor={Colors.leave_green}\r\n            style={{ marginVertical: 10 }}\r\n          />\r\n          <TextInput\r\n            label='Phone'\r\n            value={phone}\r\n            mode='outlined'\r\n            theme={{ colors: { primary: Colors.leave_green } }}\r\n            selectionColor={Colors.leave_green}\r\n            onChangeText={(text) => setPhone(text)}\r\n            style={{ marginVertical: 10 }}\r\n            keyboardType='numeric'\r\n            returnKeyType='done'\r\n          />\r\n          <TextInput\r\n            label='Address'\r\n            value={address}\r\n            mode='outlined'\r\n            theme={{ colors: { primary: Colors.leave_green } }}\r\n            selectionColor={Colors.leave_green}\r\n            onChangeText={(text) => setAddress(text)}\r\n            style={{ marginVertical: 10 }}\r\n            autoCapitalize='words'\r\n          />\r\n        </View>\r\n        <View style={styles.button}>\r\n          <Button\r\n            icon='update'\r\n            mode='contained'\r\n            loading={loading}\r\n            disabled={disableButton}\r\n            onPress={updateInfoHandler}\r\n            style={{\r\n              height: 50,\r\n              justifyContent: \"center\",\r\n              backgroundColor: Colors.leave_green,\r\n              marginHorizontal: 10,\r\n            }}\r\n          >\r\n            Update Your Information\r\n          </Button>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  backIcon: {\r\n    marginVertical: 10,\r\n    marginHorizontal: 10,\r\n  },\r\n  infoContainer: {\r\n    paddingHorizontal: 10,\r\n  },\r\n  button: {\r\n    marginTop: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}