{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\ResetPwScreen\\\\ResetPwScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Field, reduxForm } from \"redux-form\";\nimport CustomText from \"../../components/UI/CustomText\";\nimport renderField from \"./components/ResetRenderFileld\";\nimport Colors from \"../../utils/Colors\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ResetPassword } from \"../../reducers\";\nimport Loader from \"../../components/Loaders/Loader\";\nimport * as SecureStore from \"expo-secure-store\";\n\nvar validate = function validate(values) {\n  var errors = {};\n\n  if (!values.password) {\n    errors.password = \"Mật khẩu không được bỏ trống\";\n  } else if (values.password.length < 6) {\n    errors.password = \"Mật khẩu phải nhiều hơn hoặc bằng 6 ký tự\";\n  }\n\n  if (values.confirmpassword !== values.password) {\n    errors.confirmpassword = \"Mật khẩu xác nhận không trùng khớp\";\n  }\n\n  return errors;\n};\n\nvar resetForm = function resetForm(props) {\n  var handleSubmit = props.handleSubmit,\n      reset = props.reset;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showPass = _useState2[0],\n      setShowPass = _useState2[1];\n\n  var loading = useSelector(function (state) {\n    return state.auth.isLoading;\n  });\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showConfirmPass = _useState4[0],\n      setshowConfirmPass = _useState4[1];\n\n  var url = props.route.params;\n\n  var submit = function submit(values) {\n    return _regeneratorRuntime.async(function submit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(dispatch(ResetPassword(values.password, url)));\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(SecureStore.deleteItemAsync(secretKey));\n\n          case 5:\n            Keyboard.dismiss;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(reset());\n\n          case 8:\n            Alert.alert(\"Reset Successfully\", \"You can login now\", [{\n              text: \"Okay\",\n              onPress: function onPress() {\n                props.navigation.navigate(\"Home\");\n              }\n            }]);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, loading ? React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 18\n    }\n  }) : React.createElement(React.Fragment, null), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      props.navigation.goBack();\n    },\n    style: {\n      position: \"absolute\",\n      top: 50,\n      left: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(Feather, {\n    name: \"arrow-left-circle\",\n    size: 30,\n    color: Colors.lighter_green,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, React.createElement(CustomText, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \" Reset Password \"), React.createElement(Field, {\n    name: \"password\",\n    keyboardType: \"default\",\n    label: \"M\\u1EADt Kh\\u1EA9u\",\n    component: renderField,\n    secureTextEntry: !showPass ? true : false,\n    placeholder: \"M\\u1EADt kh\\u1EA9u c\\u1EE7a b\\u1EA1n\",\n    icon: \"lock-outline\",\n    passIcon: \"pass\",\n    showPass: showPass,\n    setShowPass: setShowPass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), React.createElement(Field, {\n    name: \"confirmpassword\",\n    keyboardType: \"default\",\n    label: \"X\\xE1c Nh\\u1EADn M\\u1EADt Kh\\u1EA9u\",\n    component: renderField,\n    secureTextEntry: !showConfirmPass ? true : false,\n    placeholder: \"X\\xE1c nh\\u1EADn m\\u1EADt kh\\u1EA9u\",\n    passIcon: \"confirm\",\n    icon: \"lock-outline\",\n    showConfirmPass: showConfirmPass,\n    setshowConfirmPass: setshowConfirmPass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: handleSubmit(submit),\n    style: {\n      marginVertical: 10,\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.signIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, React.createElement(CustomText, {\n    style: styles.textSign,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Reset Your Password\")))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  content: {\n    marginTop: \"20%\",\n    height: 300,\n    paddingHorizontal: 20\n  },\n  title: {\n    color: Colors.lighter_green,\n    fontSize: 30,\n    marginBottom: 10\n  },\n  signIn: {\n    width: \"100%\",\n    height: 45,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 5,\n    flexDirection: \"row\",\n    marginBottom: 10,\n    backgroundColor: Colors.lighter_green\n  },\n  textSign: {\n    fontSize: 15,\n    color: \"#fff\"\n  }\n});\nexport var ResetPwScreen = reduxForm({\n  form: \"resetPw\",\n  validate: validate\n})(resetForm);","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/ResetPwScreen/ResetPwScreen.js"],"names":["React","useState","Field","reduxForm","CustomText","renderField","Colors","Feather","useDispatch","useSelector","ResetPassword","Loader","SecureStore","validate","values","errors","password","length","confirmpassword","resetForm","props","handleSubmit","reset","dispatch","showPass","setShowPass","loading","state","auth","isLoading","showConfirmPass","setshowConfirmPass","url","route","params","submit","deleteItemAsync","secretKey","Keyboard","dismiss","Alert","alert","text","onPress","navigation","navigate","styles","container","goBack","position","top","left","lighter_green","content","title","marginVertical","alignItems","signIn","textSign","StyleSheet","create","flex","backgroundColor","marginTop","height","paddingHorizontal","color","fontSize","marginBottom","width","justifyContent","borderRadius","flexDirection","ResetPwScreen","form"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Keyboard,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport CustomText from \"../../components/UI/CustomText\";\r\nimport renderField from \"./components/ResetRenderFileld\";\r\n//Colors\r\nimport Colors from \"../../utils/Colors\";\r\n//Icon\r\nimport { Feather } from \"@expo/vector-icons\";\r\n//Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// Action\r\nimport { ResetPassword } from \"../../reducers\";\r\nimport Loader from \"../../components/Loaders/Loader\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\n\r\n//Validation\r\nconst validate = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.password) {\r\n    errors.password = \"Mật khẩu không được bỏ trống\";\r\n  } else if (values.password.length < 6) {\r\n    errors.password = \"Mật khẩu phải nhiều hơn hoặc bằng 6 ký tự\";\r\n  }\r\n  if (values.confirmpassword !== values.password) {\r\n    errors.confirmpassword = \"Mật khẩu xác nhận không trùng khớp\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst resetForm = (props) => {\r\n  const { handleSubmit, reset } = props;\r\n  const dispatch = useDispatch();\r\n  const [showPass, setShowPass] = useState(false);\r\n  const loading = useSelector((state) => state.auth.isLoading);\r\n  const [showConfirmPass, setshowConfirmPass] = useState(false);\r\n  const url = props.route.params;\r\n  const submit = async (values) => {\r\n    try {\r\n      await dispatch(ResetPassword(values.password, url));\r\n      await SecureStore.deleteItemAsync(secretKey);\r\n      Keyboard.dismiss;\r\n      await reset();\r\n      Alert.alert(\"Reset Successfully\", \"You can login now\", [\r\n        {\r\n          text: \"Okay\",\r\n          onPress: () => {\r\n            props.navigation.navigate(\"Home\");\r\n          },\r\n        },\r\n      ]);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      {loading ? <Loader /> : <></>}\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          props.navigation.goBack();\r\n        }}\r\n        style={{ position: \"absolute\", top: 50, left: 20 }}\r\n      >\r\n        <Feather\r\n          name=\"arrow-left-circle\"\r\n          size={30}\r\n          color={Colors.lighter_green}\r\n        />\r\n      </TouchableOpacity>\r\n      <View style={styles.content}>\r\n        <CustomText style={styles.title}> Reset Password </CustomText>\r\n        <Field\r\n          name=\"password\"\r\n          keyboardType=\"default\"\r\n          label=\"Mật Khẩu\"\r\n          component={renderField}\r\n          secureTextEntry={!showPass ? true : false}\r\n          placeholder=\"Mật khẩu của bạn\"\r\n          icon=\"lock-outline\"\r\n          passIcon=\"pass\"\r\n          showPass={showPass}\r\n          setShowPass={setShowPass}\r\n        />\r\n        <Field\r\n          name=\"confirmpassword\"\r\n          keyboardType=\"default\"\r\n          label=\"Xác Nhận Mật Khẩu\"\r\n          component={renderField}\r\n          secureTextEntry={!showConfirmPass ? true : false}\r\n          placeholder=\"Xác nhận mật khẩu\"\r\n          passIcon=\"confirm\"\r\n          icon=\"lock-outline\"\r\n          showConfirmPass={showConfirmPass}\r\n          setshowConfirmPass={setshowConfirmPass}\r\n        />\r\n        <TouchableOpacity\r\n          onPress={handleSubmit(submit)}\r\n          style={{ marginVertical: 10, alignItems: \"center\" }}\r\n        >\r\n          <View style={styles.signIn}>\r\n            <CustomText style={styles.textSign}>Reset Your Password</CustomText>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  content: {\r\n    marginTop: \"20%\",\r\n    height: 300,\r\n    paddingHorizontal: 20,\r\n  },\r\n  title: {\r\n    color: Colors.lighter_green,\r\n    fontSize: 30,\r\n    marginBottom: 10,\r\n  },\r\n  signIn: {\r\n    width: \"100%\",\r\n    height: 45,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 5,\r\n    flexDirection: \"row\",\r\n    marginBottom: 10,\r\n    backgroundColor: Colors.lighter_green,\r\n  },\r\n  textSign: {\r\n    fontSize: 15,\r\n    color: \"#fff\",\r\n  },\r\n});\r\nexport const ResetPwScreen = reduxForm({\r\n  form: \"resetPw\", // a unique identifier for this form\r\n  validate, // <--- validation function given to redux-form\r\n})(resetForm);\r\n"]},"metadata":{},"sourceType":"module"}