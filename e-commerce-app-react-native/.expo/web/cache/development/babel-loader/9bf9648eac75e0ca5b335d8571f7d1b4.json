{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\ProfileScreen\\\\components\\\\ProfilePic.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ActionSheetIOS } from \"react-native-web/dist/index\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport Colors from \"../../../utils/Colors\";\nimport { _pickImage } from \"../../../utils/Tools\";\nimport CustomText from \"../../../components/UI/CustomText\";\nimport { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport PropTypes from \"prop-types\";\nexport var ProfilePic = function ProfilePic(_ref) {\n  var user = _ref.user,\n      imageUri = _ref.imageUri,\n      setImageUri = _ref.setImageUri,\n      setFilename = _ref.setFilename,\n      setType = _ref.setType,\n      setUploadButton = _ref.setUploadButton;\n\n  var _useActionSheet = useActionSheet(),\n      showActionSheetWithOptions = _useActionSheet.showActionSheetWithOptions;\n\n  var UploadProfileHandler = function UploadProfileHandler() {\n    var options = [\"Take Photo\", \"Choose From Library\", \"Cancel\"];\n    showActionSheetWithOptions({\n      options: options\n    }, function _callee(buttonIndex) {\n      var result, data, _data, localUri, filename;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(buttonIndex === 2)) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 4:\n              if (!(buttonIndex === 0)) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(_pickImage(\"camera\"));\n\n            case 7:\n              data = _context.sent;\n              result = data;\n              _context.next = 16;\n              break;\n\n            case 11:\n              if (!(buttonIndex === 1)) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(_pickImage(\"library\"));\n\n            case 14:\n              _data = _context.sent;\n              result = _data;\n\n            case 16:\n              if (!result.cancelled) {\n                localUri = result.uri;\n                filename = localUri.split(\"/\").pop();\n                setImageUri(localUri);\n                setFilename(filename);\n                setType(result.type);\n                setUploadButton(false);\n              }\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 50,\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.profilePic,\n    source: imageUri.length === 0 ? user.profilePicture.length === 0 ? require(\"../../../assets/Images/defaultprofile.png\") : {\n      uri: user.profilePicture\n    } : {\n      uri: imageUri\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      width: \"100%\",\n      alignItems: \"flex-end\",\n      transform: [{\n        translateY: -110\n      }, {\n        translateX: -5\n      }]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.cameraContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: UploadProfileHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, React.createElement(FontAwesome, {\n    name: \"camera\",\n    size: 15,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }))))), React.createElement(CustomText, {\n    style: styles.userName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, user.name));\n};\nProfilePic.propTypes = {\n  user: PropTypes.object.isRequired,\n  imageUri: PropTypes.string.isRequired,\n  setImageUri: PropTypes.func.isRequired,\n  setFilename: PropTypes.func.isRequired,\n  setType: PropTypes.func.isRequired,\n  setUploadButton: PropTypes.func.isRequired\n};\nvar styles = StyleSheet.create({\n  profilePic: {\n    resizeMode: Platform.OS === \"android\" ? \"cover\" : \"contain\",\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n    transform: [{\n      translateY: -70\n    }],\n    borderWidth: 3,\n    borderColor: \"#fff\"\n  },\n  cameraContainer: {\n    height: 30,\n    width: 30,\n    borderRadius: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: Colors.leave_green\n  },\n  userName: {\n    fontSize: 20,\n    marginTop: 10,\n    color: Colors.leave_green,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/ProfileScreen/components/ProfilePic.js"],"names":["React","ActionSheetIOS","FontAwesome","Colors","_pickImage","CustomText","useActionSheet","PropTypes","ProfilePic","user","imageUri","setImageUri","setFilename","setType","setUploadButton","showActionSheetWithOptions","UploadProfileHandler","options","buttonIndex","data","result","cancelled","localUri","uri","filename","split","pop","type","height","alignItems","styles","profilePic","length","profilePicture","require","width","transform","translateY","translateX","cameraContainer","userName","name","propTypes","object","isRequired","string","func","StyleSheet","create","resizeMode","Platform","OS","borderRadius","borderWidth","borderColor","justifyContent","backgroundColor","leave_green","fontSize","marginTop","color","textAlign"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;SAMEC,c;;AAIF,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,MAAP;AACA,SAASC,UAAT;AACA,OAAOC,UAAP;AACA,SAASC,cAAT,QAA+B,iCAA/B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAOpB;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,WAII,QAJJA,WAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADJC,eACI,QADJA,eACI;;AACJ,wBAAuCR,cAAc,EAArD;AAAA,MAAQS,0BAAR,mBAAQA,0BAAR;;AAEA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjC,QAAMC,OAAO,GAAG,CAAC,YAAD,EAAe,qBAAf,EAAsC,QAAtC,CAAhB;AAEAF,IAAAA,0BAA0B,CACxB;AACEE,MAAAA,OAAO,EAAPA;AADF,KADwB,EAMxB,iBAAOC,WAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEMA,WAAW,KAAK,CAFtB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAIaA,WAAW,KAAK,CAJ7B;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAKuBd,UAAU,CAAC,QAAD,CALjC;;AAAA;AAKUe,cAAAA,IALV;AAMIC,cAAAA,MAAM,GAAGD,IAAT;AANJ;AAAA;;AAAA;AAAA,oBAOaD,WAAW,KAAK,CAP7B;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAQuBd,UAAU,CAAC,SAAD,CARjC;;AAAA;AAQUe,cAAAA,KARV;AASIC,cAAAA,MAAM,GAAGD,KAAT;;AATJ;AAWE,kBAAI,CAACC,MAAM,CAACC,SAAZ,EAAuB;AACjBC,gBAAAA,QADiB,GACNF,MAAM,CAACG,GADD;AAEjBC,gBAAAA,QAFiB,GAENF,QAAQ,CAACG,KAAT,CAAe,GAAf,EAAoBC,GAApB,EAFM;AAGrBf,gBAAAA,WAAW,CAACW,QAAD,CAAX;AACAV,gBAAAA,WAAW,CAACY,QAAD,CAAX;AACAX,gBAAAA,OAAO,CAACO,MAAM,CAACO,IAAR,CAAP;AACAb,gBAAAA,eAAe,CAAC,KAAD,CAAf;AACD;;AAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANwB,CAA1B;AA2BD,GA9BD;;AA+BA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEc,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,UAAU,EAAE;AAA1B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEC,MAAM,CAACC,UADhB;AAEE,IAAA,MAAM,EACJrB,QAAQ,CAACsB,MAAT,KAAoB,CAApB,GACIvB,IAAI,CAACwB,cAAL,CAAoBD,MAApB,KAA+B,CAA/B,GACEE,OAAO,6CADT,GAEE;AAAEX,MAAAA,GAAG,EAAEd,IAAI,CAACwB;AAAZ,KAHN,GAII;AAAEV,MAAAA,GAAG,EAAEb;AAAP,KAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLyB,MAAAA,KAAK,EAAE,MADF;AAELN,MAAAA,UAAU,EAAE,UAFP;AAGLO,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,UAAU,EAAE,CAAC;AAAf,OAAD,EAAuB;AAAEC,QAAAA,UAAU,EAAE,CAAC;AAAf,OAAvB;AAHN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEvB,oBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,IAAI,EAAE,EAAjC;AAAqC,IAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAPF,CAXF,CADF,EA0BE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEc,MAAM,CAACU,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqC/B,IAAI,CAACgC,IAA1C,CA1BF,CADF;AA8BD,CAvEM;AAyEPjC,UAAU,CAACkC,SAAX,GAAuB;AACrBjC,EAAAA,IAAI,EAAEF,SAAS,CAACoC,MAAV,CAAiBC,UADF;AAErBlC,EAAAA,QAAQ,EAAEH,SAAS,CAACsC,MAAV,CAAiBD,UAFN;AAGrBjC,EAAAA,WAAW,EAAEJ,SAAS,CAACuC,IAAV,CAAeF,UAHP;AAIrBhC,EAAAA,WAAW,EAAEL,SAAS,CAACuC,IAAV,CAAeF,UAJP;AAKrB/B,EAAAA,OAAO,EAAEN,SAAS,CAACuC,IAAV,CAAeF,UALH;AAMrB9B,EAAAA,eAAe,EAAEP,SAAS,CAACuC,IAAV,CAAeF;AANX,CAAvB;AAQA,IAAMd,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC/BjB,EAAAA,UAAU,EAAE;AACVkB,IAAAA,UAAU,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,OAA5B,GAAsC,SADxC;AAEVhB,IAAAA,KAAK,EAAE,GAFG;AAGVP,IAAAA,MAAM,EAAE,GAHE;AAIVwB,IAAAA,YAAY,EAAE,EAJJ;AAKVhB,IAAAA,SAAS,EAAE,CAAC;AAAEC,MAAAA,UAAU,EAAE,CAAC;AAAf,KAAD,CALD;AAMVgB,IAAAA,WAAW,EAAE,CANH;AAOVC,IAAAA,WAAW,EAAE;AAPH,GADmB;AAU/Bf,EAAAA,eAAe,EAAE;AACfX,IAAAA,MAAM,EAAE,EADO;AAEfO,IAAAA,KAAK,EAAE,EAFQ;AAGfiB,IAAAA,YAAY,EAAE,EAHC;AAIfvB,IAAAA,UAAU,EAAE,QAJG;AAKf0B,IAAAA,cAAc,EAAE,QALD;AAMfC,IAAAA,eAAe,EAAErD,MAAM,CAACsD;AANT,GAVc;AAkB/BjB,EAAAA,QAAQ,EAAE;AACRkB,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,SAAS,EAAE,EAFH;AAGRC,IAAAA,KAAK,EAAEzD,MAAM,CAACsD,WAHN;AAIRI,IAAAA,SAAS,EAAE;AAJH;AAlBqB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Image,\r\n  ActionSheetIOS,\r\n  Platform,\r\n} from \"react-native\";\r\n//Color\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport Colors from \"../../../utils/Colors\";\r\nimport { _pickImage } from \"../../../utils/Tools\";\r\nimport CustomText from \"../../../components/UI/CustomText\";\r\nimport { useActionSheet } from \"@expo/react-native-action-sheet\";\r\n//PropTypes check\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ProfilePic = ({\r\n  user,\r\n  imageUri,\r\n  setImageUri,\r\n  setFilename,\r\n  setType,\r\n  setUploadButton,\r\n}) => {\r\n  const { showActionSheetWithOptions } = useActionSheet();\r\n\r\n  const UploadProfileHandler = () => {\r\n    const options = [\"Take Photo\", \"Choose From Library\", \"Cancel\"];\r\n\r\n    showActionSheetWithOptions(\r\n      {\r\n        options,\r\n        // destructiveButtonIndex: 2,\r\n        // cancelButtonIndex: 0,\r\n      },\r\n      async (buttonIndex) => {\r\n        let result;\r\n        if (buttonIndex === 2) {\r\n          return;\r\n        } else if (buttonIndex === 0) {\r\n          const data = await _pickImage(\"camera\");\r\n          result = data;\r\n        } else if (buttonIndex === 1) {\r\n          const data = await _pickImage(\"library\");\r\n          result = data;\r\n        }\r\n        if (!result.cancelled) {\r\n          let localUri = result.uri;\r\n          let filename = localUri.split(\"/\").pop();\r\n          setImageUri(localUri);\r\n          setFilename(filename);\r\n          setType(result.type);\r\n          setUploadButton(false);\r\n        }\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <View>\r\n      <View style={{ height: 50, alignItems: \"center\" }}>\r\n        <Image\r\n          style={styles.profilePic}\r\n          source={\r\n            imageUri.length === 0\r\n              ? user.profilePicture.length === 0\r\n                ? require(\"../../../assets/Images/defaultprofile.png\")\r\n                : { uri: user.profilePicture }\r\n              : { uri: imageUri }\r\n          }\r\n        />\r\n        <View\r\n          style={{\r\n            width: \"100%\",\r\n            alignItems: \"flex-end\",\r\n            transform: [{ translateY: -110 }, { translateX: -5 }],\r\n          }}\r\n        >\r\n          <View style={styles.cameraContainer}>\r\n            <TouchableOpacity onPress={UploadProfileHandler}>\r\n              <FontAwesome name=\"camera\" size={15} color=\"white\" />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n      <CustomText style={styles.userName}>{user.name}</CustomText>\r\n    </View>\r\n  );\r\n};\r\n\r\nProfilePic.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  imageUri: PropTypes.string.isRequired,\r\n  setImageUri: PropTypes.func.isRequired,\r\n  setFilename: PropTypes.func.isRequired,\r\n  setType: PropTypes.func.isRequired,\r\n  setUploadButton: PropTypes.func.isRequired,\r\n};\r\nconst styles = StyleSheet.create({\r\n  profilePic: {\r\n    resizeMode: Platform.OS === \"android\" ? \"cover\" : \"contain\",\r\n    width: 120,\r\n    height: 120,\r\n    borderRadius: 60,\r\n    transform: [{ translateY: -70 }],\r\n    borderWidth: 3,\r\n    borderColor: \"#fff\",\r\n  },\r\n  cameraContainer: {\r\n    height: 30,\r\n    width: 30,\r\n    borderRadius: 15,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: Colors.leave_green,\r\n  },\r\n  userName: {\r\n    fontSize: 20,\r\n    marginTop: 10,\r\n    color: Colors.leave_green,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}