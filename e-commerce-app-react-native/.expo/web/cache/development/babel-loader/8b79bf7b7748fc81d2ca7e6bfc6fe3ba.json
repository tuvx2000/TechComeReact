{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\PreOrderScreen\\\\components\\\\Address.js\";\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RNPickerSelect from \"react-native-picker-select\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport ProvincesData from \"../../../utils/ProvincesData\";\nimport Provinces from \"../../../utils/Proinces\";\nimport Colors from \"../../../utils/Colors\";\nimport PropTypes from \"prop-types\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar Address = function Address(_ref) {\n  var getInfo = _ref.getInfo;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedProvince = _useState2[0],\n      setselectedProvince = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedTown = _useState4[0],\n      setselectedTown = _useState4[1];\n\n  var initialTown = [{\n    label: \"Chọn Quận/Huyện\",\n    value: \"1\"\n  }];\n\n  var _useState5 = useState(initialTown),\n      _useState6 = _slicedToArray(_useState5, 2),\n      getTowns = _useState6[0],\n      setGetTowns = _useState6[1];\n\n  var townsFilter = useCallback(function (name) {\n    if (name === \"1\") {\n      setselectedTown(\"\");\n    } else {\n      var towns = ProvincesData.filter(function (province) {\n        return province.name === name;\n      });\n      var town = towns.map(function (town) {\n        var result = Object.keys(town.cities).map(function (key) {\n          return town.cities[key];\n        });\n        var townsFilter = result.map(function (town) {\n          return {\n            label: town,\n            value: town\n          };\n        });\n        return townsFilter;\n      });\n      setselectedProvince(name);\n      setGetTowns(town[0]);\n    }\n  }, [selectedProvince]);\n  useEffect(function () {\n    getInfo(selectedProvince, selectedTown);\n  }, [selectedProvince, selectedTown]);\n  var showIconPlatform = Platform.OS === \"android\" ? React.createElement(React.Fragment, null) : React.createElement(MaterialIcons, {\n    style: styles.icon,\n    name: \"keyboard-arrow-down\",\n    size: 25,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [styles.boxSelect, {\n      marginTop: 15\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(RNPickerSelect, {\n    onValueChange: function onValueChange(value) {\n      return townsFilter(value);\n    },\n    placeholder: {\n      label: \"Tỉnh/Thành phố\",\n      value: \"1\"\n    },\n    items: Provinces,\n    style: pickerSelectStyles,\n    allowFontScaling: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })), showIconPlatform), React.createElement(View, {\n    style: styles.boxSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(RNPickerSelect, {\n    onValueChange: function onValueChange(value) {\n      return setselectedTown(value);\n    },\n    placeholder: {\n      label: \"Quận/Huyện\",\n      value: \"\"\n    },\n    items: getTowns,\n    value: selectedTown,\n    style: pickerSelectStyles,\n    allowFontScaling: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), showIconPlatform));\n};\n\nAddress.propTypes = {\n  getInfo: PropTypes.func.isRequired\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 10,\n    backgroundColor: \"#fff\"\n  },\n  boxSelect: {\n    borderWidth: 1,\n    borderColor: Colors.grey,\n    height: 60,\n    justifyContent: \"space-between\",\n    marginBottom: 15,\n    paddingHorizontal: 10,\n    borderColor: Colors.text,\n    borderRadius: 5,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    position: \"relative\"\n  },\n  icon: {\n    position: \"absolute\",\n    right: 10\n  }\n});\nvar pickerSelectStyles = StyleSheet.create({\n  inputIOS: {\n    fontSize: 15,\n    color: \"black\",\n    paddingVertical: 10,\n    width: width\n  },\n  inputAndroid: {\n    fontSize: 15,\n    color: \"black\",\n    paddingVertical: 10,\n    paddingRight: width - 30\n  }\n});\nexport default Address;","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/PreOrderScreen/components/Address.js"],"names":["React","useState","useCallback","useEffect","RNPickerSelect","MaterialIcons","ProvincesData","Provinces","Colors","PropTypes","Dimensions","get","width","Address","getInfo","selectedProvince","setselectedProvince","selectedTown","setselectedTown","initialTown","label","value","getTowns","setGetTowns","townsFilter","name","towns","filter","province","town","map","result","Object","keys","cities","key","showIconPlatform","Platform","OS","styles","icon","container","boxSelect","marginTop","pickerSelectStyles","propTypes","func","isRequired","StyleSheet","create","flex","paddingHorizontal","backgroundColor","borderWidth","borderColor","grey","height","justifyContent","marginBottom","text","borderRadius","flexDirection","alignItems","position","right","inputIOS","fontSize","color","paddingVertical","inputAndroid","paddingRight"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { View, StyleSheet, Dimensions, Platform } from \"react-native\";\r\n//Select box\r\nimport RNPickerSelect from \"react-native-picker-select\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\n//Provinces\r\nimport ProvincesData from \"../../../utils/ProvincesData\";\r\nimport Provinces from \"../../../utils/Proinces\";\r\n//Colors\r\nimport Colors from \"../../../utils/Colors\";\r\n//PropTypes check\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\n// TextInput.defaultProps.allowFontScaling = false;\r\n\r\nconst Address = ({ getInfo }) => {\r\n  const [selectedProvince, setselectedProvince] = useState(\"\");\r\n  const [selectedTown, setselectedTown] = useState(\"\");\r\n  const initialTown = [{ label: \"Chọn Quận/Huyện\", value: \"1\" }];\r\n  const [getTowns, setGetTowns] = useState(initialTown);\r\n  //Filter Towns\r\n  const townsFilter = useCallback(\r\n    (name) => {\r\n      if (name === \"1\") {\r\n        setselectedTown(\"\");\r\n      } else {\r\n        const towns = ProvincesData.filter(\r\n          (province) => province.name === name\r\n        );\r\n        const town = towns.map((town) => {\r\n          const result = Object.keys(town.cities).map((key) => {\r\n            return town.cities[key];\r\n          });\r\n          const townsFilter = result.map((town) => {\r\n            return { label: town, value: town };\r\n          });\r\n          return townsFilter;\r\n        });\r\n        setselectedProvince(name);\r\n        setGetTowns(town[0]);\r\n      }\r\n    },\r\n    [selectedProvince]\r\n  );\r\n  //get Address\r\n  useEffect(() => {\r\n    getInfo(selectedProvince, selectedTown);\r\n  }, [selectedProvince, selectedTown]);\r\n  //Show Icon\r\n  const showIconPlatform =\r\n    Platform.OS === \"android\" ? (\r\n      <></>\r\n    ) : (\r\n      <MaterialIcons\r\n        style={styles.icon}\r\n        name='keyboard-arrow-down'\r\n        size={25}\r\n        color='black'\r\n      />\r\n    );\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={[styles.boxSelect, { marginTop: 15 }]}>\r\n        <View>\r\n          <RNPickerSelect\r\n            onValueChange={(value) => townsFilter(value)}\r\n            placeholder={{ label: \"Tỉnh/Thành phố\", value: \"1\" }}\r\n            items={Provinces}\r\n            style={pickerSelectStyles}\r\n            allowFontScaling={false}\r\n          />\r\n        </View>\r\n        {showIconPlatform}\r\n      </View>\r\n      <View style={styles.boxSelect}>\r\n        <View>\r\n          <RNPickerSelect\r\n            onValueChange={(value) => setselectedTown(value)}\r\n            placeholder={{ label: \"Quận/Huyện\", value: \"\" }}\r\n            items={getTowns}\r\n            value={selectedTown}\r\n            style={pickerSelectStyles}\r\n            allowFontScaling={false}\r\n          />\r\n        </View>\r\n        {showIconPlatform}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nAddress.propTypes = {\r\n  getInfo: PropTypes.func.isRequired,\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, paddingHorizontal: 10, backgroundColor: \"#fff\" },\r\n  boxSelect: {\r\n    borderWidth: 1,\r\n    borderColor: Colors.grey,\r\n    height: 60,\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 15,\r\n    paddingHorizontal: 10,\r\n    borderColor: Colors.text,\r\n    borderRadius: 5,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    position: \"relative\",\r\n  },\r\n  icon: {\r\n    position: \"absolute\",\r\n    right: 10,\r\n  },\r\n});\r\n\r\nconst pickerSelectStyles = StyleSheet.create({\r\n  inputIOS: {\r\n    fontSize: 15,\r\n    color: \"black\",\r\n    paddingVertical: 10,\r\n    width: width,\r\n  },\r\n  inputAndroid: {\r\n    fontSize: 15,\r\n    color: \"black\",\r\n    paddingVertical: 10,\r\n    paddingRight: width - 30,\r\n  },\r\n});\r\n\r\nexport default Address;\r\n"]},"metadata":{},"sourceType":"module"}