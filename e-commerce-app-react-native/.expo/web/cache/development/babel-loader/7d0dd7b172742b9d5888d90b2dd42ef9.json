{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\DetailScreen\\\\components\\\\Comments.js\";\n\nimport React, { useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Modalize } from \"react-native-modalize\";\nimport { Portal } from \"react-native-portalize\";\nimport { BlurView } from \"expo-blur\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CustomText from \"../../../components/UI/CustomText\";\nimport Colors from \"../../../utils/Colors\";\nimport comments from \"../../../db/Comments\";\nimport UserComment from \"./UserComment\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nexport var Comments = function Comments() {\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  });\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      textComment = _useState2[0],\n      setTextComment = _useState2[1];\n\n  var modalizeRef = useRef(null);\n\n  var onOpen = function onOpen() {\n    var _modalizeRef$current;\n\n    (_modalizeRef$current = modalizeRef.current) == null ? void 0 : _modalizeRef$current.open();\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.commentContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: onOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(CustomText, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Comments\")), React.createElement(CustomText, {\n    style: styles.commentCount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, comments.length)), React.createElement(Portal, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(Modalize, {\n    ref: modalizeRef,\n    snapPoint: height - 200,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.contentContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, Object.keys(user).length === 0 ? React.createElement(React.Fragment, null) : React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: styles.profileContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: styles.profilePic,\n    source: user.profilePicture.length === 0 ? require(\"../../../assets/Images/defaultprofile.jpg\") : {\n      uri: user.profilePicture\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  })), React.createElement(View, {\n    style: {\n      justifyContent: \"center\",\n      width: \"75%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, React.createElement(BlurView, {\n    tint: \"dark\",\n    intensity: 10,\n    style: styles.inputBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Add a public comment...\",\n    style: {\n      width: \"100%\"\n    },\n    onChangeText: function onChangeText(text) {\n      return setTextComment(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }))), React.createElement(View, {\n    style: {\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, React.createElement(Entypo, {\n    name: \"paper-plane\",\n    size: 25,\n    color: textComment.length === 0 ? Colors.grey : Colors.blue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }))), comments.map(function (comment) {\n    return React.createElement(UserComment, {\n      key: comment.id,\n      comment: comment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    });\n  })))));\n};\nvar styles = StyleSheet.create({\n  commentContainer: {\n    height: 50,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderTopWidth: 1,\n    borderTopColor: Colors.light_grey,\n    paddingHorizontal: 20\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: \"500\"\n  },\n  commentCount: {\n    fontSize: 15,\n    marginHorizontal: 15,\n    color: Colors.grey\n  },\n  contentContainer: {\n    marginHorizontal: 10\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignContent: \"center\",\n    justifyContent: \"space-between\",\n    height: 60,\n    marginTop: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: Colors.light_grey\n  },\n  inputBlur: {\n    height: 40,\n    justifyContent: \"center\",\n    borderRadius: 5,\n    paddingHorizontal: 10\n  },\n  profileContainer: {\n    justifyContent: \"center\"\n  },\n  profilePic: {\n    resizeMode: Platform.OS === \"android\" ? \"cover\" : \"contain\",\n    width: 50,\n    height: 50,\n    borderRadius: 25\n  }\n});","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/DetailScreen/components/Comments.js"],"names":["React","useRef","useState","Modalize","Portal","BlurView","Entypo","useDispatch","useSelector","CustomText","Colors","comments","UserComment","Dimensions","get","width","height","Comments","user","state","auth","textComment","setTextComment","modalizeRef","onOpen","current","open","styles","commentContainer","title","commentCount","length","contentContainer","Object","keys","inputContainer","profileContainer","profilePic","profilePicture","require","uri","justifyContent","inputBlur","text","grey","blue","map","comment","id","StyleSheet","create","flexDirection","alignItems","borderTopWidth","borderTopColor","light_grey","paddingHorizontal","fontSize","fontWeight","marginHorizontal","color","alignContent","marginTop","borderBottomWidth","borderBottomColor","borderRadius","resizeMode","Platform","OS"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  StyleSheet,\r\n  TextInput,\r\n  Image,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { Modalize } from \"react-native-modalize\";\r\nimport { Portal } from \"react-native-portalize\";\r\nimport { BlurView } from \"expo-blur\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomText from \"../../../components/UI/CustomText\";\r\nimport Colors from \"../../../utils/Colors\";\r\nimport comments from \"../../../db/Comments\";\r\nimport UserComment from \"./UserComment\";\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\nexport const Comments = () => {\r\n  const user = useSelector((state) => state.auth.user);\r\n  const [textComment, setTextComment] = useState(\"\");\r\n  const modalizeRef = useRef(null);\r\n\r\n  const onOpen = () => {\r\n    modalizeRef.current?.open();\r\n  };\r\n  return (\r\n    <>\r\n      <View style={styles.commentContainer}>\r\n        <TouchableOpacity onPress={onOpen}>\r\n          <CustomText style={styles.title}>Comments</CustomText>\r\n        </TouchableOpacity>\r\n        <CustomText style={styles.commentCount}>{comments.length}</CustomText>\r\n      </View>\r\n      <Portal>\r\n        <Modalize ref={modalizeRef} snapPoint={height - 200}>\r\n          <View style={styles.contentContainer}>\r\n            {Object.keys(user).length === 0 ? (\r\n              <></>\r\n            ) : (\r\n              <View style={styles.inputContainer}>\r\n                <View style={styles.profileContainer}>\r\n                  <Image\r\n                    style={styles.profilePic}\r\n                    source={\r\n                      user.profilePicture.length === 0\r\n                        ? require(\"../../../assets/Images/defaultprofile.jpg\")\r\n                        : { uri: user.profilePicture }\r\n                    }\r\n                  />\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    justifyContent: \"center\",\r\n                    width: \"75%\",\r\n                  }}\r\n                >\r\n                  <BlurView tint='dark' intensity={10} style={styles.inputBlur}>\r\n                    <TextInput\r\n                      placeholder='Add a public comment...'\r\n                      style={{ width: \"100%\" }}\r\n                      onChangeText={(text) => setTextComment(text)}\r\n                    />\r\n                  </BlurView>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Entypo\r\n                    name='paper-plane'\r\n                    size={25}\r\n                    color={textComment.length === 0 ? Colors.grey : Colors.blue}\r\n                  />\r\n                </View>\r\n              </View>\r\n            )}\r\n            {comments.map((comment) => (\r\n              <UserComment key={comment.id} comment={comment} />\r\n            ))}\r\n          </View>\r\n        </Modalize>\r\n      </Portal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  commentContainer: {\r\n    height: 50,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    borderTopWidth: 1,\r\n    borderTopColor: Colors.light_grey,\r\n    paddingHorizontal: 20,\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    fontWeight: \"500\",\r\n  },\r\n  commentCount: {\r\n    fontSize: 15,\r\n    marginHorizontal: 15,\r\n    color: Colors.grey,\r\n  },\r\n  contentContainer: {\r\n    marginHorizontal: 10,\r\n  },\r\n  inputContainer: {\r\n    flexDirection: \"row\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"space-between\",\r\n    height: 60,\r\n    marginTop: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: Colors.light_grey,\r\n  },\r\n  inputBlur: {\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    borderRadius: 5,\r\n    paddingHorizontal: 10,\r\n  },\r\n  profileContainer: {\r\n    justifyContent: \"center\",\r\n  },\r\n  profilePic: {\r\n    resizeMode: Platform.OS === \"android\" ? \"cover\" : \"contain\",\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}