{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\node_modules\\\\react-native-picker-select\\\\src\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport { defaultStyles } from \"./styles\";\n\nvar RNPickerSelect = function (_PureComponent) {\n  _inherits(RNPickerSelect, _PureComponent);\n\n  var _super = _createSuper(RNPickerSelect);\n\n  function RNPickerSelect(props) {\n    var _this;\n\n    _classCallCheck(this, RNPickerSelect);\n\n    _this = _super.call(this, props);\n    var items = RNPickerSelect.handlePlaceholder({\n      placeholder: props.placeholder\n    }).concat(props.items);\n\n    var _RNPickerSelect$getSe = RNPickerSelect.getSelectedItem({\n      items: items,\n      key: props.itemKey,\n      value: props.value\n    }),\n        selectedItem = _RNPickerSelect$getSe.selectedItem;\n\n    _this.state = {\n      items: items,\n      selectedItem: selectedItem,\n      showPicker: false,\n      animationType: undefined,\n      orientation: 'portrait',\n      doneDepressed: false\n    };\n    _this.onUpArrow = _this.onUpArrow.bind(_assertThisInitialized(_this));\n    _this.onDownArrow = _this.onDownArrow.bind(_assertThisInitialized(_this));\n    _this.onValueChange = _this.onValueChange.bind(_assertThisInitialized(_this));\n    _this.onOrientationChange = _this.onOrientationChange.bind(_assertThisInitialized(_this));\n    _this.setInputRef = _this.setInputRef.bind(_assertThisInitialized(_this));\n    _this.togglePicker = _this.togglePicker.bind(_assertThisInitialized(_this));\n    _this.renderInputAccessoryView = _this.renderInputAccessoryView.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RNPickerSelect, [{\n    key: \"onUpArrow\",\n    value: function onUpArrow() {\n      var onUpArrow = this.props.onUpArrow;\n      this.togglePicker(false, onUpArrow);\n    }\n  }, {\n    key: \"onDownArrow\",\n    value: function onDownArrow() {\n      var onDownArrow = this.props.onDownArrow;\n      this.togglePicker(false, onDownArrow);\n    }\n  }, {\n    key: \"onValueChange\",\n    value: function onValueChange(value, index) {\n      var onValueChange = this.props.onValueChange;\n      onValueChange(value, index);\n      this.setState(function (prevState) {\n        return {\n          selectedItem: prevState.items[index]\n        };\n      });\n    }\n  }, {\n    key: \"onOrientationChange\",\n    value: function onOrientationChange(_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      this.setState({\n        orientation: nativeEvent.orientation\n      });\n    }\n  }, {\n    key: \"setInputRef\",\n    value: function setInputRef(ref) {\n      this.inputRef = ref;\n    }\n  }, {\n    key: \"getPlaceholderStyle\",\n    value: function getPlaceholderStyle() {\n      var _this$props = this.props,\n          placeholder = _this$props.placeholder,\n          style = _this$props.style;\n      var selectedItem = this.state.selectedItem;\n\n      if (!isEqual(placeholder, {}) && selectedItem.label === placeholder.label) {\n        return _objectSpread(_objectSpread({}, defaultStyles.placeholder), style.placeholder);\n      }\n\n      return {};\n    }\n  }, {\n    key: \"triggerOpenCloseCallbacks\",\n    value: function triggerOpenCloseCallbacks() {\n      var _this$props2 = this.props,\n          onOpen = _this$props2.onOpen,\n          onClose = _this$props2.onClose;\n      var showPicker = this.state.showPicker;\n\n      if (!showPicker && onOpen) {\n        onOpen();\n      }\n\n      if (showPicker && onClose) {\n        onClose();\n      }\n    }\n  }, {\n    key: \"togglePicker\",\n    value: function togglePicker() {\n      var animate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var postToggleCallback = arguments.length > 1 ? arguments[1] : undefined;\n      var _this$props3 = this.props,\n          modalProps = _this$props3.modalProps,\n          disabled = _this$props3.disabled;\n      var showPicker = this.state.showPicker;\n\n      if (disabled) {\n        return;\n      }\n\n      if (!showPicker) {\n        Keyboard.dismiss();\n      }\n\n      var animationType = modalProps && modalProps.animationType ? modalProps.animationType : 'slide';\n      this.triggerOpenCloseCallbacks();\n      this.setState(function (prevState) {\n        return {\n          animationType: animate ? animationType : undefined,\n          showPicker: !prevState.showPicker\n        };\n      }, function () {\n        if (postToggleCallback) {\n          postToggleCallback();\n        }\n      });\n    }\n  }, {\n    key: \"renderPickerItems\",\n    value: function renderPickerItems() {\n      var _this2 = this;\n\n      var items = this.state.items;\n      return items.map(function (item) {\n        return React.createElement(Picker.Item, {\n          label: item.label,\n          value: item.value,\n          key: item.key || item.label,\n          color: item.color,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }\n        });\n      });\n    }\n  }, {\n    key: \"renderInputAccessoryView\",\n    value: function renderInputAccessoryView() {\n      var _this3 = this;\n\n      var _this$props4 = this.props,\n          InputAccessoryView = _this$props4.InputAccessoryView,\n          doneText = _this$props4.doneText,\n          onUpArrow = _this$props4.onUpArrow,\n          onDownArrow = _this$props4.onDownArrow,\n          onDonePress = _this$props4.onDonePress,\n          style = _this$props4.style,\n          touchableDoneProps = _this$props4.touchableDoneProps;\n      var doneDepressed = this.state.doneDepressed;\n\n      if (InputAccessoryView) {\n        return React.createElement(InputAccessoryView, {\n          testID: \"custom_input_accessory_view\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        style: [defaultStyles.modalViewMiddle, style.modalViewMiddle],\n        testID: \"input_accessory_view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: [defaultStyles.chevronContainer, style.chevronContainer],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        activeOpacity: onUpArrow ? 0.5 : 1,\n        onPress: onUpArrow ? this.onUpArrow : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: [defaultStyles.chevron, style.chevron, defaultStyles.chevronUp, style.chevronUp, onUpArrow ? [defaultStyles.chevronActive, style.chevronActive] : {}],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableOpacity, {\n        activeOpacity: onDownArrow ? 0.5 : 1,\n        onPress: onDownArrow ? this.onDownArrow : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: [defaultStyles.chevron, style.chevron, defaultStyles.chevronDown, style.chevronDown, onDownArrow ? [defaultStyles.chevronActive, style.chevronActive] : {}],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 25\n        }\n      }))), React.createElement(TouchableOpacity, _extends({\n        testID: \"done_button\",\n        onPress: function onPress() {\n          _this3.togglePicker(true, onDonePress);\n        },\n        onPressIn: function onPressIn() {\n          _this3.setState({\n            doneDepressed: true\n          });\n        },\n        onPressOut: function onPressOut() {\n          _this3.setState({\n            doneDepressed: false\n          });\n        },\n        hitSlop: {\n          top: 4,\n          right: 4,\n          bottom: 4,\n          left: 4\n        }\n      }, touchableDoneProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        testID: \"needed_for_touchable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        testID: \"done_text\",\n        allowFontScaling: false,\n        style: [defaultStyles.done, style.done, doneDepressed ? [defaultStyles.doneDepressed, style.doneDepressed] : {}],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 25\n        }\n      }, doneText))));\n    }\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon() {\n      var _this$props5 = this.props,\n          style = _this$props5.style,\n          Icon = _this$props5.Icon;\n\n      if (!Icon) {\n        return null;\n      }\n\n      return React.createElement(View, {\n        testID: \"icon_container\",\n        style: [defaultStyles.iconContainer, style.iconContainer],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }\n      }, React.createElement(Icon, {\n        testID: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"renderTextInputOrChildren\",\n    value: function renderTextInputOrChildren() {\n      var _this$props6 = this.props,\n          children = _this$props6.children,\n          style = _this$props6.style,\n          textInputProps = _this$props6.textInputProps;\n      var selectedItem = this.state.selectedItem;\n      var containerStyle = Platform.OS === 'ios' ? style.inputIOSContainer : style.inputAndroidContainer;\n\n      if (children) {\n        return React.createElement(View, {\n          pointerEvents: \"box-only\",\n          style: containerStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 17\n          }\n        }, children);\n      }\n\n      return React.createElement(View, {\n        pointerEvents: \"box-only\",\n        style: containerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, _extends({\n        testID: \"text_input\",\n        style: [Platform.OS === 'ios' ? style.inputIOS : style.inputAndroid, this.getPlaceholderStyle()],\n        value: selectedItem.displayValue ? selectedItem.value : selectedItem.label,\n        ref: this.setInputRef,\n        editable: false\n      }, textInputProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 17\n        }\n      })), this.renderIcon());\n    }\n  }, {\n    key: \"renderIOS\",\n    value: function renderIOS() {\n      var _this4 = this;\n\n      var _this$props7 = this.props,\n          style = _this$props7.style,\n          modalProps = _this$props7.modalProps,\n          pickerProps = _this$props7.pickerProps,\n          touchableWrapperProps = _this$props7.touchableWrapperProps;\n      var _this$state = this.state,\n          animationType = _this$state.animationType,\n          orientation = _this$state.orientation,\n          selectedItem = _this$state.selectedItem,\n          showPicker = _this$state.showPicker;\n      return React.createElement(View, {\n        style: [defaultStyles.viewContainer, style.viewContainer],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, _extends({\n        testID: \"ios_touchable_wrapper\",\n        onPress: function onPress() {\n          _this4.togglePicker(true);\n        },\n        activeOpacity: 1\n      }, touchableWrapperProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 17\n        }\n      }), this.renderTextInputOrChildren()), React.createElement(Modal, _extends({\n        testID: \"ios_modal\",\n        visible: showPicker,\n        transparent: true,\n        animationType: animationType,\n        supportedOrientations: ['portrait', 'landscape'],\n        onOrientationChange: this.onOrientationChange\n      }, modalProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: [defaultStyles.modalViewTop, style.modalViewTop],\n        testID: \"ios_modal_top\",\n        onPress: function onPress() {\n          _this4.togglePicker(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 21\n        }\n      }), this.renderInputAccessoryView(), React.createElement(View, {\n        style: [defaultStyles.modalViewBottom, {\n          height: orientation === 'portrait' ? 215 : 162\n        }, style.modalViewBottom],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }\n      }, React.createElement(Picker, _extends({\n        testID: \"ios_picker\",\n        onValueChange: this.onValueChange,\n        selectedValue: selectedItem.value\n      }, pickerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 25\n        }\n      }), this.renderPickerItems()))));\n    }\n  }, {\n    key: \"renderAndroidHeadless\",\n    value: function renderAndroidHeadless() {\n      var _this$props8 = this.props,\n          disabled = _this$props8.disabled,\n          Icon = _this$props8.Icon,\n          style = _this$props8.style,\n          pickerProps = _this$props8.pickerProps,\n          onOpen = _this$props8.onOpen,\n          touchableWrapperProps = _this$props8.touchableWrapperProps;\n      var selectedItem = this.state.selectedItem;\n      return React.createElement(TouchableOpacity, _extends({\n        testID: \"android_touchable_wrapper\",\n        onPress: onOpen,\n        activeOpacity: 1\n      }, touchableWrapperProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: style.headlessAndroidContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 17\n        }\n      }, this.renderTextInputOrChildren(), React.createElement(Picker, _extends({\n        style: [Icon ? {\n          backgroundColor: 'transparent'\n        } : {}, defaultStyles.headlessAndroidPicker, style.headlessAndroidPicker],\n        testID: \"android_picker_headless\",\n        enabled: !disabled,\n        onValueChange: this.onValueChange,\n        selectedValue: selectedItem.value\n      }, pickerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 21\n        }\n      }), this.renderPickerItems())));\n    }\n  }, {\n    key: \"renderAndroidNativePickerStyle\",\n    value: function renderAndroidNativePickerStyle() {\n      var _this$props9 = this.props,\n          disabled = _this$props9.disabled,\n          Icon = _this$props9.Icon,\n          style = _this$props9.style,\n          pickerProps = _this$props9.pickerProps;\n      var selectedItem = this.state.selectedItem;\n      return React.createElement(View, {\n        style: [defaultStyles.viewContainer, style.viewContainer],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 13\n        }\n      }, React.createElement(Picker, _extends({\n        style: [Icon ? {\n          backgroundColor: 'transparent'\n        } : {}, style.inputAndroid, this.getPlaceholderStyle()],\n        testID: \"android_picker\",\n        enabled: !disabled,\n        onValueChange: this.onValueChange,\n        selectedValue: selectedItem.value\n      }, pickerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 17\n        }\n      }), this.renderPickerItems()), this.renderIcon());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props10 = this.props,\n          children = _this$props10.children,\n          useNativeAndroidPickerStyle = _this$props10.useNativeAndroidPickerStyle;\n\n      if (Platform.OS === 'ios') {\n        return this.renderIOS();\n      }\n\n      if (children || !useNativeAndroidPickerStyle) {\n        return this.renderAndroidHeadless();\n      }\n\n      return this.renderAndroidNativePickerStyle();\n    }\n  }], [{\n    key: \"handlePlaceholder\",\n    value: function handlePlaceholder(_ref2) {\n      var placeholder = _ref2.placeholder;\n\n      if (isEqual(placeholder, {})) {\n        return [];\n      }\n\n      return [placeholder];\n    }\n  }, {\n    key: \"getSelectedItem\",\n    value: function getSelectedItem(_ref3) {\n      var items = _ref3.items,\n          key = _ref3.key,\n          value = _ref3.value;\n      var idx = items.findIndex(function (item) {\n        if (item.key && key) {\n          return isEqual(item.key, key);\n        }\n\n        return isEqual(item.value, value);\n      });\n\n      if (idx === -1) {\n        idx = 0;\n      }\n\n      return {\n        selectedItem: items[idx] || {},\n        idx: idx\n      };\n    }\n  }, {\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var items = RNPickerSelect.handlePlaceholder({\n        placeholder: nextProps.placeholder\n      }).concat(nextProps.items);\n      var itemsChanged = !isEqual(prevState.items, items);\n\n      var _RNPickerSelect$getSe2 = RNPickerSelect.getSelectedItem({\n        items: items,\n        key: nextProps.itemKey,\n        value: nextProps.value\n      }),\n          selectedItem = _RNPickerSelect$getSe2.selectedItem,\n          idx = _RNPickerSelect$getSe2.idx;\n\n      var selectedItemChanged = !isEqual(nextProps.value, undefined) && !isEqual(prevState.selectedItem, selectedItem);\n\n      if (itemsChanged || selectedItemChanged) {\n        if (selectedItemChanged) {\n          nextProps.onValueChange(selectedItem.value, idx);\n        }\n\n        return _objectSpread(_objectSpread({}, itemsChanged ? {\n          items: items\n        } : {}), selectedItemChanged ? {\n          selectedItem: selectedItem\n        } : {});\n      }\n\n      return null;\n    }\n  }]);\n\n  return RNPickerSelect;\n}(PureComponent);\n\nRNPickerSelect.propTypes = {\n  onValueChange: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.any.isRequired,\n    key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    color: PropTypes.string,\n    displayValue: PropTypes.bool\n  })).isRequired,\n  value: PropTypes.any,\n  placeholder: PropTypes.shape({\n    label: PropTypes.string,\n    value: PropTypes.any,\n    key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    color: PropTypes.string\n  }),\n  disabled: PropTypes.bool,\n  itemKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.shape({}),\n  children: PropTypes.any,\n  onOpen: PropTypes.func,\n  useNativeAndroidPickerStyle: PropTypes.bool,\n  doneText: PropTypes.string,\n  onDonePress: PropTypes.func,\n  onUpArrow: PropTypes.func,\n  onDownArrow: PropTypes.func,\n  onClose: PropTypes.func,\n  modalProps: PropTypes.shape({}),\n  textInputProps: PropTypes.shape({}),\n  pickerProps: PropTypes.shape({}),\n  touchableDoneProps: PropTypes.shape({}),\n  touchableWrapperProps: PropTypes.shape({}),\n  Icon: PropTypes.func,\n  InputAccessoryView: PropTypes.func\n};\nRNPickerSelect.defaultProps = {\n  value: undefined,\n  placeholder: {\n    label: 'Select an item...',\n    value: null,\n    color: '#9EA0A4'\n  },\n  disabled: false,\n  itemKey: null,\n  style: {},\n  children: null,\n  useNativeAndroidPickerStyle: true,\n  doneText: 'Done',\n  onDonePress: null,\n  onUpArrow: null,\n  onDownArrow: null,\n  onOpen: null,\n  onClose: null,\n  modalProps: {},\n  textInputProps: {},\n  pickerProps: {},\n  touchableDoneProps: {},\n  touchableWrapperProps: {},\n  Icon: null,\n  InputAccessoryView: null\n};\nexport { RNPickerSelect as default };\nexport { defaultStyles };","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/node_modules/react-native-picker-select/src/index.js"],"names":["React","PureComponent","PropTypes","isEqual","defaultStyles","RNPickerSelect","props","items","handlePlaceholder","placeholder","concat","getSelectedItem","key","itemKey","value","selectedItem","state","showPicker","animationType","undefined","orientation","doneDepressed","onUpArrow","bind","onDownArrow","onValueChange","onOrientationChange","setInputRef","togglePicker","renderInputAccessoryView","index","setState","prevState","nativeEvent","ref","inputRef","style","label","onOpen","onClose","animate","postToggleCallback","modalProps","disabled","Keyboard","dismiss","triggerOpenCloseCallbacks","map","item","color","InputAccessoryView","doneText","onDonePress","touchableDoneProps","modalViewMiddle","chevronContainer","chevron","chevronUp","chevronActive","chevronDown","top","right","bottom","left","done","Icon","iconContainer","children","textInputProps","containerStyle","Platform","OS","inputIOSContainer","inputAndroidContainer","inputIOS","inputAndroid","getPlaceholderStyle","displayValue","renderIcon","pickerProps","touchableWrapperProps","viewContainer","renderTextInputOrChildren","modalViewTop","modalViewBottom","height","renderPickerItems","headlessAndroidContainer","backgroundColor","headlessAndroidPicker","useNativeAndroidPickerStyle","renderIOS","renderAndroidHeadless","renderAndroidNativePickerStyle","idx","findIndex","nextProps","itemsChanged","selectedItemChanged","propTypes","func","isRequired","arrayOf","shape","string","any","oneOfType","number","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n    Keyboard,\n    Modal,\n    Picker,\n    Platform,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    View,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport { defaultStyles } from './styles';\n\nexport default class RNPickerSelect extends PureComponent {\n    static propTypes = {\n        onValueChange: PropTypes.func.isRequired,\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                label: PropTypes.string.isRequired,\n                value: PropTypes.any.isRequired,\n                key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n                color: PropTypes.string,\n                displayValue: PropTypes.bool,\n            })\n        ).isRequired,\n        value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n        placeholder: PropTypes.shape({\n            label: PropTypes.string,\n            value: PropTypes.any,\n            key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            color: PropTypes.string,\n        }),\n        disabled: PropTypes.bool,\n        itemKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        style: PropTypes.shape({}),\n        children: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n        onOpen: PropTypes.func,\n        useNativeAndroidPickerStyle: PropTypes.bool,\n\n        // Custom Modal props (iOS only)\n        doneText: PropTypes.string,\n        onDonePress: PropTypes.func,\n        onUpArrow: PropTypes.func,\n        onDownArrow: PropTypes.func,\n        onClose: PropTypes.func,\n\n        // Modal props (iOS only)\n        modalProps: PropTypes.shape({}),\n\n        // TextInput props (iOS only)\n        textInputProps: PropTypes.shape({}),\n\n        // Picker props\n        pickerProps: PropTypes.shape({}),\n\n        // Touchable Done props (iOS only)\n        touchableDoneProps: PropTypes.shape({}),\n\n        // Touchable wrapper props\n        touchableWrapperProps: PropTypes.shape({}),\n\n        // Custom Icon\n        Icon: PropTypes.func,\n        InputAccessoryView: PropTypes.func,\n    };\n\n    static defaultProps = {\n        value: undefined,\n        placeholder: {\n            label: 'Select an item...',\n            value: null,\n            color: '#9EA0A4',\n        },\n        disabled: false,\n        itemKey: null,\n        style: {},\n        children: null,\n        useNativeAndroidPickerStyle: true,\n        doneText: 'Done',\n        onDonePress: null,\n        onUpArrow: null,\n        onDownArrow: null,\n        onOpen: null,\n        onClose: null,\n        modalProps: {},\n        textInputProps: {},\n        pickerProps: {},\n        touchableDoneProps: {},\n        touchableWrapperProps: {},\n        Icon: null,\n        InputAccessoryView: null,\n    };\n\n    static handlePlaceholder({ placeholder }) {\n        if (isEqual(placeholder, {})) {\n            return [];\n        }\n        return [placeholder];\n    }\n\n    static getSelectedItem({ items, key, value }) {\n        let idx = items.findIndex((item) => {\n            if (item.key && key) {\n                return isEqual(item.key, key);\n            }\n            return isEqual(item.value, value);\n        });\n        if (idx === -1) {\n            idx = 0;\n        }\n        return {\n            selectedItem: items[idx] || {},\n            idx,\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        // update items if items or placeholder prop changes\n        const items = RNPickerSelect.handlePlaceholder({\n            placeholder: nextProps.placeholder,\n        }).concat(nextProps.items);\n        const itemsChanged = !isEqual(prevState.items, items);\n\n        // update selectedItem if value prop is defined and differs from currently selected item\n        const { selectedItem, idx } = RNPickerSelect.getSelectedItem({\n            items,\n            key: nextProps.itemKey,\n            value: nextProps.value,\n        });\n        const selectedItemChanged =\n            !isEqual(nextProps.value, undefined) && !isEqual(prevState.selectedItem, selectedItem);\n\n        if (itemsChanged || selectedItemChanged) {\n            if (selectedItemChanged) {\n                nextProps.onValueChange(selectedItem.value, idx);\n            }\n\n            return {\n                ...(itemsChanged ? { items } : {}),\n                ...(selectedItemChanged ? { selectedItem } : {}),\n            };\n        }\n\n        return null;\n    }\n\n    constructor(props) {\n        super(props);\n\n        const items = RNPickerSelect.handlePlaceholder({\n            placeholder: props.placeholder,\n        }).concat(props.items);\n\n        const { selectedItem } = RNPickerSelect.getSelectedItem({\n            items,\n            key: props.itemKey,\n            value: props.value,\n        });\n\n        this.state = {\n            items,\n            selectedItem,\n            showPicker: false,\n            animationType: undefined,\n            orientation: 'portrait',\n            doneDepressed: false,\n        };\n\n        this.onUpArrow = this.onUpArrow.bind(this);\n        this.onDownArrow = this.onDownArrow.bind(this);\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onOrientationChange = this.onOrientationChange.bind(this);\n        this.setInputRef = this.setInputRef.bind(this);\n        this.togglePicker = this.togglePicker.bind(this);\n        this.renderInputAccessoryView = this.renderInputAccessoryView.bind(this);\n    }\n\n    onUpArrow() {\n        const { onUpArrow } = this.props;\n\n        this.togglePicker(false, onUpArrow);\n    }\n\n    onDownArrow() {\n        const { onDownArrow } = this.props;\n\n        this.togglePicker(false, onDownArrow);\n    }\n\n    onValueChange(value, index) {\n        const { onValueChange } = this.props;\n\n        onValueChange(value, index);\n\n        this.setState((prevState) => {\n            return {\n                selectedItem: prevState.items[index],\n            };\n        });\n    }\n\n    onOrientationChange({ nativeEvent }) {\n        this.setState({\n            orientation: nativeEvent.orientation,\n        });\n    }\n\n    setInputRef(ref) {\n        this.inputRef = ref;\n    }\n\n    getPlaceholderStyle() {\n        const { placeholder, style } = this.props;\n        const { selectedItem } = this.state;\n\n        if (!isEqual(placeholder, {}) && selectedItem.label === placeholder.label) {\n            return {\n                ...defaultStyles.placeholder,\n                ...style.placeholder,\n            };\n        }\n        return {};\n    }\n\n    triggerOpenCloseCallbacks() {\n        const { onOpen, onClose } = this.props;\n        const { showPicker } = this.state;\n\n        if (!showPicker && onOpen) {\n            onOpen();\n        }\n\n        if (showPicker && onClose) {\n            onClose();\n        }\n    }\n\n    togglePicker(animate = false, postToggleCallback) {\n        const { modalProps, disabled } = this.props;\n        const { showPicker } = this.state;\n\n        if (disabled) {\n            return;\n        }\n\n        if (!showPicker) {\n            Keyboard.dismiss();\n        }\n\n        const animationType =\n            modalProps && modalProps.animationType ? modalProps.animationType : 'slide';\n\n        this.triggerOpenCloseCallbacks();\n\n        this.setState(\n            (prevState) => {\n                return {\n                    animationType: animate ? animationType : undefined,\n                    showPicker: !prevState.showPicker,\n                };\n            },\n            () => {\n                if (postToggleCallback) {\n                    postToggleCallback();\n                }\n            }\n        );\n    }\n\n    renderPickerItems() {\n        const { items } = this.state;\n\n        return items.map((item) => {\n            return (\n                <Picker.Item\n                    label={item.label}\n                    value={item.value}\n                    key={item.key || item.label}\n                    color={item.color}\n                />\n            );\n        });\n    }\n\n    renderInputAccessoryView() {\n        const {\n            InputAccessoryView,\n            doneText,\n            onUpArrow,\n            onDownArrow,\n            onDonePress,\n            style,\n            touchableDoneProps,\n        } = this.props;\n\n        const { doneDepressed } = this.state;\n\n        if (InputAccessoryView) {\n            return <InputAccessoryView testID=\"custom_input_accessory_view\" />;\n        }\n\n        return (\n            <View\n                style={[defaultStyles.modalViewMiddle, style.modalViewMiddle]}\n                testID=\"input_accessory_view\"\n            >\n                <View style={[defaultStyles.chevronContainer, style.chevronContainer]}>\n                    <TouchableOpacity\n                        activeOpacity={onUpArrow ? 0.5 : 1}\n                        onPress={onUpArrow ? this.onUpArrow : null}\n                    >\n                        <View\n                            style={[\n                                defaultStyles.chevron,\n                                style.chevron,\n                                defaultStyles.chevronUp,\n                                style.chevronUp,\n                                onUpArrow ? [defaultStyles.chevronActive, style.chevronActive] : {},\n                            ]}\n                        />\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        activeOpacity={onDownArrow ? 0.5 : 1}\n                        onPress={onDownArrow ? this.onDownArrow : null}\n                    >\n                        <View\n                            style={[\n                                defaultStyles.chevron,\n                                style.chevron,\n                                defaultStyles.chevronDown,\n                                style.chevronDown,\n                                onDownArrow\n                                    ? [defaultStyles.chevronActive, style.chevronActive]\n                                    : {},\n                            ]}\n                        />\n                    </TouchableOpacity>\n                </View>\n                <TouchableOpacity\n                    testID=\"done_button\"\n                    onPress={() => {\n                        this.togglePicker(true, onDonePress);\n                    }}\n                    onPressIn={() => {\n                        this.setState({ doneDepressed: true });\n                    }}\n                    onPressOut={() => {\n                        this.setState({ doneDepressed: false });\n                    }}\n                    hitSlop={{ top: 4, right: 4, bottom: 4, left: 4 }}\n                    {...touchableDoneProps}\n                >\n                    <View testID=\"needed_for_touchable\">\n                        <Text\n                            testID=\"done_text\"\n                            allowFontScaling={false}\n                            style={[\n                                defaultStyles.done,\n                                style.done,\n                                doneDepressed\n                                    ? [defaultStyles.doneDepressed, style.doneDepressed]\n                                    : {},\n                            ]}\n                        >\n                            {doneText}\n                        </Text>\n                    </View>\n                </TouchableOpacity>\n            </View>\n        );\n    }\n\n    renderIcon() {\n        const { style, Icon } = this.props;\n\n        if (!Icon) {\n            return null;\n        }\n\n        return (\n            <View\n                testID=\"icon_container\"\n                style={[defaultStyles.iconContainer, style.iconContainer]}\n            >\n                <Icon testID=\"icon\" />\n            </View>\n        );\n    }\n\n    renderTextInputOrChildren() {\n        const { children, style, textInputProps } = this.props;\n        const { selectedItem } = this.state;\n\n        const containerStyle =\n            Platform.OS === 'ios' ? style.inputIOSContainer : style.inputAndroidContainer;\n\n        if (children) {\n            return (\n                <View pointerEvents=\"box-only\" style={containerStyle}>\n                    {children}\n                </View>\n            );\n        }\n\n        return (\n            <View pointerEvents=\"box-only\" style={containerStyle}>\n                <TextInput\n                    testID=\"text_input\"\n                    style={[\n                        Platform.OS === 'ios' ? style.inputIOS : style.inputAndroid,\n                        this.getPlaceholderStyle(),\n                    ]}\n                    value={selectedItem.displayValue ? selectedItem.value : selectedItem.label}\n                    ref={this.setInputRef}\n                    editable={false}\n                    {...textInputProps}\n                />\n                {this.renderIcon()}\n            </View>\n        );\n    }\n\n    renderIOS() {\n        const { style, modalProps, pickerProps, touchableWrapperProps } = this.props;\n        const { animationType, orientation, selectedItem, showPicker } = this.state;\n\n        return (\n            <View style={[defaultStyles.viewContainer, style.viewContainer]}>\n                <TouchableOpacity\n                    testID=\"ios_touchable_wrapper\"\n                    onPress={() => {\n                        this.togglePicker(true);\n                    }}\n                    activeOpacity={1}\n                    {...touchableWrapperProps}\n                >\n                    {this.renderTextInputOrChildren()}\n                </TouchableOpacity>\n                <Modal\n                    testID=\"ios_modal\"\n                    visible={showPicker}\n                    transparent\n                    animationType={animationType}\n                    supportedOrientations={['portrait', 'landscape']}\n                    onOrientationChange={this.onOrientationChange}\n                    {...modalProps}\n                >\n                    <TouchableOpacity\n                        style={[defaultStyles.modalViewTop, style.modalViewTop]}\n                        testID=\"ios_modal_top\"\n                        onPress={() => {\n                            this.togglePicker(true);\n                        }}\n                    />\n                    {this.renderInputAccessoryView()}\n                    <View\n                        style={[\n                            defaultStyles.modalViewBottom,\n                            { height: orientation === 'portrait' ? 215 : 162 },\n                            style.modalViewBottom,\n                        ]}\n                    >\n                        <Picker\n                            testID=\"ios_picker\"\n                            onValueChange={this.onValueChange}\n                            selectedValue={selectedItem.value}\n                            {...pickerProps}\n                        >\n                            {this.renderPickerItems()}\n                        </Picker>\n                    </View>\n                </Modal>\n            </View>\n        );\n    }\n\n    renderAndroidHeadless() {\n        const { disabled, Icon, style, pickerProps, onOpen, touchableWrapperProps } = this.props;\n        const { selectedItem } = this.state;\n\n        return (\n            <TouchableOpacity\n                testID=\"android_touchable_wrapper\"\n                onPress={onOpen}\n                activeOpacity={1}\n                {...touchableWrapperProps}\n            >\n                <View style={style.headlessAndroidContainer}>\n                    {this.renderTextInputOrChildren()}\n                    <Picker\n                        style={[\n                            Icon ? { backgroundColor: 'transparent' } : {}, // to hide native icon\n                            defaultStyles.headlessAndroidPicker,\n                            style.headlessAndroidPicker,\n                        ]}\n                        testID=\"android_picker_headless\"\n                        enabled={!disabled}\n                        onValueChange={this.onValueChange}\n                        selectedValue={selectedItem.value}\n                        {...pickerProps}\n                    >\n                        {this.renderPickerItems()}\n                    </Picker>\n                </View>\n            </TouchableOpacity>\n        );\n    }\n\n    renderAndroidNativePickerStyle() {\n        const { disabled, Icon, style, pickerProps } = this.props;\n        const { selectedItem } = this.state;\n\n        return (\n            <View style={[defaultStyles.viewContainer, style.viewContainer]}>\n                <Picker\n                    style={[\n                        Icon ? { backgroundColor: 'transparent' } : {}, // to hide native icon\n                        style.inputAndroid,\n                        this.getPlaceholderStyle(),\n                    ]}\n                    testID=\"android_picker\"\n                    enabled={!disabled}\n                    onValueChange={this.onValueChange}\n                    selectedValue={selectedItem.value}\n                    {...pickerProps}\n                >\n                    {this.renderPickerItems()}\n                </Picker>\n                {this.renderIcon()}\n            </View>\n        );\n    }\n\n    render() {\n        const { children, useNativeAndroidPickerStyle } = this.props;\n\n        if (Platform.OS === 'ios') {\n            return this.renderIOS();\n        }\n\n        if (children || !useNativeAndroidPickerStyle) {\n            return this.renderAndroidHeadless();\n        }\n\n        return this.renderAndroidNativePickerStyle();\n    }\n}\n\nexport { defaultStyles };\n"]},"metadata":{},"sourceType":"module"}