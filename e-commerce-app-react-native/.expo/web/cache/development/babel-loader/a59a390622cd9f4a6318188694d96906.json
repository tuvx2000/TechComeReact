{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { AUTH_LOADING, LOGIN, LOGOUT, EDIT_INFO, UPLOAD_PROFILEPIC, SIGN_UP, AUTH_FAILURE, FORGET_PASSWORD, RESET_PASSWORD } from \"./authActions\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport UserMessages from \"../../messages/user\";\nvar initialState = {\n  user: {},\n  notification: {},\n  isLoading: false,\n  error: false\n};\nexport var authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var userInformation = function userInformation() {\n    var getUser, parsedUser;\n    return _regeneratorRuntime.async(function userInformation$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n          case 2:\n            getUser = _context.sent;\n\n            if (getUser) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", initialState);\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(JSON.parse(getUser));\n\n          case 7:\n            parsedUser = _context.sent;\n            return _context.abrupt(\"return\", initialState.user = parsedUser.data);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  userInformation();\n\n  switch (action.type) {\n    case AUTH_LOADING:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoading: true\n        });\n      }\n\n    case LOGIN:\n      return {\n        user: action.user,\n        notification: UserMessages[\"user.login.success\"],\n        isLoading: false\n      };\n\n    case SIGN_UP:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoading: false\n        });\n      }\n\n    case AUTH_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false\n      });\n\n    case LOGOUT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: {},\n        notification: UserMessages[\"user.logout.sucesss\"],\n        isLoading: false\n      });\n\n    case FORGET_PASSWORD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false\n      });\n\n    case RESET_PASSWORD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false\n      });\n\n    case EDIT_INFO:\n      state.user.phone = action.phone;\n      state.user.address = action.address;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread({}, state.user),\n        isLoading: false\n      });\n\n    case UPLOAD_PROFILEPIC:\n      state.user.profilePicture = action.profilePic;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread({}, state.user),\n        isLoading: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/reducers/auth/authReducer.js"],"names":["AUTH_LOADING","LOGIN","LOGOUT","EDIT_INFO","UPLOAD_PROFILEPIC","SIGN_UP","AUTH_FAILURE","FORGET_PASSWORD","RESET_PASSWORD","AsyncStorage","UserMessages","initialState","user","notification","isLoading","error","authReducer","state","action","userInformation","getItem","getUser","JSON","parse","parsedUser","data","type","phone","address","profilePicture","profilePic"],"mappings":";;;;;;;AAAA,SACEA,YADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,SAJF,EAKEC,iBALF,EAMEC,OANF,EAOEC,YAPF,EAQEC,eARF,EASEC,cATF;SAWSC,Y;AACT,OAAOC,YAAP;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,YAAY,EAAE,EAFK;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAE3D,MAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACAV,YAAY,CAACW,OAAb,CAAqB,MAArB,CADA;;AAAA;AAChBC,YAAAA,OADgB;;AAAA,gBAEjBA,OAFiB;AAAA;AAAA;AAAA;;AAAA,6CAGbV,YAHa;;AAAA;AAAA;AAAA,6CAKGW,IAAI,CAACC,KAAL,CAAWF,OAAX,CALH;;AAAA;AAKhBG,YAAAA,UALgB;AAAA,6CAMdb,YAAY,CAACC,IAAb,GAAoBY,UAAU,CAACC,IANjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAQAN,EAAAA,eAAe;;AAEf,UAAQD,MAAM,CAACQ,IAAf;AACE,SAAK1B,YAAL;AAAmB;AACjB,+CACKiB,KADL;AAEEH,UAAAA,SAAS,EAAE;AAFb;AAKD;;AACD,SAAKb,KAAL;AACE,aAAO;AACLW,QAAAA,IAAI,EAAEM,MAAM,CAACN,IADR;AAELC,QAAAA,YAAY,EAAEH,YAAY,CAAC,oBAAD,CAFrB;AAGLI,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAKT,OAAL;AAAc;AACZ,+CACKY,KADL;AAEEH,UAAAA,SAAS,EAAE;AAFb;AAID;;AACD,SAAKR,YAAL;AACE,6CACKW,KADL;AAEEH,QAAAA,SAAS,EAAE;AAFb;;AAKF,SAAKZ,MAAL;AACE,6CACKe,KADL;AAEEL,QAAAA,IAAI,EAAE,EAFR;AAGEC,QAAAA,YAAY,EAAEH,YAAY,CAAC,qBAAD,CAH5B;AAIEI,QAAAA,SAAS,EAAE;AAJb;;AAMF,SAAKP,eAAL;AACE,6CACKU,KADL;AAEEH,QAAAA,SAAS,EAAE;AAFb;;AAIF,SAAKN,cAAL;AACE,6CACKS,KADL;AAEEH,QAAAA,SAAS,EAAE;AAFb;;AAIF,SAAKX,SAAL;AACEc,MAAAA,KAAK,CAACL,IAAN,CAAWe,KAAX,GAAmBT,MAAM,CAACS,KAA1B;AACAV,MAAAA,KAAK,CAACL,IAAN,CAAWgB,OAAX,GAAqBV,MAAM,CAACU,OAA5B;AAEA,6CACKX,KADL;AAEEL,QAAAA,IAAI,oBACCK,KAAK,CAACL,IADP,CAFN;AAKEE,QAAAA,SAAS,EAAE;AALb;;AAOF,SAAKV,iBAAL;AACEa,MAAAA,KAAK,CAACL,IAAN,CAAWiB,cAAX,GAA4BX,MAAM,CAACY,UAAnC;AACA,6CACKb,KADL;AAEEL,QAAAA,IAAI,oBACCK,KAAK,CAACL,IADP,CAFN;AAKEE,QAAAA,SAAS,EAAE;AALb;;AAOF;AACE,aAAOG,KAAP;AAhEJ;AAkED,CA9EM","sourcesContent":["import {\r\n  AUTH_LOADING,\r\n  LOGIN,\r\n  LOGOUT,\r\n  EDIT_INFO,\r\n  UPLOAD_PROFILEPIC,\r\n  SIGN_UP,\r\n  AUTH_FAILURE,\r\n  FORGET_PASSWORD,\r\n  RESET_PASSWORD,\r\n} from \"./authActions\";\r\nimport { AsyncStorage } from \"react-native\";\r\nimport UserMessages from \"../../messages/user\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  notification: {},\r\n  isLoading: false,\r\n  error: false,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  //set user if token doesn't expire yet\r\n  const userInformation = async () => {\r\n    const getUser = await AsyncStorage.getItem(\"user\");\r\n    if (!getUser) {\r\n      return initialState;\r\n    }\r\n    const parsedUser = await JSON.parse(getUser);\r\n    return (initialState.user = parsedUser.data);\r\n  };\r\n  userInformation();\r\n\r\n  switch (action.type) {\r\n    case AUTH_LOADING: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        // error: false,\r\n      };\r\n    }\r\n    case LOGIN:\r\n      return {\r\n        user: action.user,\r\n        notification: UserMessages[\"user.login.success\"],\r\n        isLoading: false,\r\n      };\r\n    case SIGN_UP: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    }\r\n    case AUTH_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: {},\r\n        notification: UserMessages[\"user.logout.sucesss\"],\r\n        isLoading: false,\r\n      };\r\n    case FORGET_PASSWORD:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    case RESET_PASSWORD:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    case EDIT_INFO:\r\n      state.user.phone = action.phone;\r\n      state.user.address = action.address;\r\n      //Return ...state.user make the comp rerender\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n        },\r\n        isLoading: false,\r\n      };\r\n    case UPLOAD_PROFILEPIC:\r\n      state.user.profilePicture = action.profilePic;\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n        },\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}