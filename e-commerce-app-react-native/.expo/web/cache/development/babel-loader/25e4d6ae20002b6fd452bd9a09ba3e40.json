{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\node_modules\\\\react-native-loading-placeholder\\\\src\\\\PlaceholderContainer.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar screenWidth = Dimensions.get('window').width;\n\nvar PlaceholderContainer = function (_Component) {\n  _inherits(PlaceholderContainer, _Component);\n\n  var _super = _createSuper(PlaceholderContainer);\n\n  function PlaceholderContainer(props) {\n    var _this;\n\n    _classCallCheck(this, PlaceholderContainer);\n\n    _this = _super.call(this, props);\n\n    _this._triggerAnimation = function () {\n      var _this$props = _this.props,\n          duration = _this$props.duration,\n          delay = _this$props.delay;\n      var _this$state = _this.state,\n          startPosition = _this$state.startPosition,\n          stopPosition = _this$state.stopPosition;\n      Animated.loop(Animated.sequence([Animated.timing(_this.position, {\n        toValue: stopPosition || screenWidth,\n        duration: duration,\n        useNativeDriver: true\n      }), Animated.timing(_this.position, {\n        toValue: startPosition || 0,\n        duration: 0,\n        delay: delay || 0,\n        useNativeDriver: true\n      })])).start();\n    };\n\n    _this._startAndRepeat = function () {\n      var Component = _this.state.Component;\n      !Component && _this._triggerAnimation();\n    };\n\n    _this._measureView = function (viewName, event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          x = _event$nativeEvent$la.x,\n          y = _event$nativeEvent$la.y,\n          height = _event$nativeEvent$la.height,\n          width = _event$nativeEvent$la.width;\n\n      _this.setState(function () {\n        var _ref;\n\n        return _ref = {}, _defineProperty(_ref, viewName, {\n          x: x,\n          y: y,\n          height: height,\n          width: width\n        }), _defineProperty(_ref, \"is\" + viewName + \"Measured\", true), _ref;\n      }, function () {\n        _this._setAnimationPositions();\n      });\n    };\n\n    _this._setAnimationPositions = function () {\n      var _this$state2 = _this.state,\n          ContainerComponent = _this$state2.ContainerComponent,\n          AnimatedComponent = _this$state2.AnimatedComponent,\n          isContainerComponentMeasured = _this$state2.isContainerComponentMeasured,\n          isAnimatedComponentMeasured = _this$state2.isAnimatedComponentMeasured;\n\n      if (!isContainerComponentMeasured || !isAnimatedComponentMeasured) {\n        return;\n      }\n\n      var startPosition = -(ContainerComponent.x + AnimatedComponent.width);\n      var stopPosition = ContainerComponent.x + ContainerComponent.width + AnimatedComponent.width;\n\n      _this.setState(function () {\n        return {\n          startPosition: startPosition,\n          stopPosition: stopPosition\n        };\n      }, function () {\n        _this.position.setValue(startPosition);\n\n        _this._startAndRepeat();\n      });\n    };\n\n    _this._registerPlaceholder = function (placeholder) {\n      var replace = _this.props.replace;\n\n      if (!replace) {\n        return;\n      }\n\n      _this.placeholders.push(placeholder);\n    };\n\n    _this._replacePlaceholders = function () {\n      try {\n        _this.placeholders.forEach(function (placeholder) {\n          placeholder._resolve();\n        });\n      } catch (e) {\n        console.log('Something went wrong');\n      }\n    };\n\n    _this.state = {\n      ContainerComponent: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      },\n      AnimatedComponent: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      },\n      startPosition: 0,\n      stopPosition: 0,\n      isContainerComponentMeasured: false,\n      isAnimatedComponentMeasured: false,\n      Component: null\n    };\n    _this.position = new Animated.Value(0);\n    _this.placeholders = [];\n    _this._measureContainerComponent = _this._measureView.bind(null, 'ContainerComponent');\n    _this._measureAnimatedComponent = _this._measureView.bind(null, 'AnimatedComponent');\n    return _this;\n  }\n\n  _createClass(PlaceholderContainer, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        position: this.position,\n        animatedComponent: this.props.animatedComponent,\n        registerPlaceholder: this._registerPlaceholder\n      };\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          loader = _this$props2.loader,\n          replace = _this$props2.replace;\n      loader && Promise.resolve(loader).then(function (Component) {\n        !replace ? _this2.setState({\n          Component: Component\n        }) : _this2._replacePlaceholders();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.position.stopAnimation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props3 = this.props,\n          style = _this$props3.style,\n          elements = _this$props3.elements,\n          animatedComponent = _this$props3.animatedComponent,\n          children = _this$props3.children;\n      var _this$state3 = this.state,\n          Component = _this$state3.Component,\n          isAnimatedComponentMeasured = _this$state3.isAnimatedComponentMeasured;\n      return React.createElement(View, {\n        ref: function ref(_ref3) {\n          _this3.containerRef = _ref3;\n        },\n        onLayout: this._measureContainerComponent,\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }, !isAnimatedComponentMeasured && React.createElement(View, {\n        ref: function ref(_ref2) {\n          _this3.componentRef = _ref2;\n        },\n        onLayout: this._measureAnimatedComponent,\n        style: styles.offscreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, animatedComponent), Component && Component || children);\n    }\n  }]);\n\n  return PlaceholderContainer;\n}(Component);\n\nexport { PlaceholderContainer as default };\nPlaceholderContainer.childContextTypes = {\n  position: PropTypes.object.isRequired,\n  animatedComponent: PropTypes.object.isRequired,\n  registerPlaceholder: PropTypes.func.isRequired\n};\nvar styles = StyleSheet.create({\n  offscreen: {\n    position: 'absolute',\n    left: -1000\n  }\n});","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/node_modules/react-native-loading-placeholder/src/PlaceholderContainer.js"],"names":["React","Component","PropTypes","screenWidth","Dimensions","get","width","PlaceholderContainer","props","_triggerAnimation","duration","delay","state","startPosition","stopPosition","Animated","loop","sequence","timing","position","toValue","useNativeDriver","start","_startAndRepeat","_measureView","viewName","event","nativeEvent","layout","x","y","height","setState","_setAnimationPositions","ContainerComponent","AnimatedComponent","isContainerComponentMeasured","isAnimatedComponentMeasured","setValue","_registerPlaceholder","placeholder","replace","placeholders","push","_replacePlaceholders","forEach","_resolve","e","console","log","Value","_measureContainerComponent","bind","_measureAnimatedComponent","animatedComponent","registerPlaceholder","loader","Promise","resolve","then","stopAnimation","style","elements","children","ref","containerRef","componentRef","styles","offscreen","childContextTypes","object","isRequired","func","StyleSheet","create","left"],"mappings":"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","sourcesContent":["/*\n* @flow\n*/\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Text,\n  View,\n  StyleSheet,\n  Animated,\n  Dimensions,\n  Platform\n} from 'react-native';\n\nconst screenWidth = Dimensions.get('window').width;\n\ntype PlaceholderContainerProps = {\n  duration: number,\n  delay: number,\n  style: Object,\n  animatedComponent: React.Element<*>,\n  loader: Function,\n  replace: boolean\n};\n\ntype PlaceholderContainerState = {\n  containerComponent: Object,\n  animatedComponent: Object,\n  startPosition: number,\n  stopPosition: number,\n  isContainerMeasured: boolean,\n  isAnimatedComponentMeasured: boolean,\n  Component: React.Element<*>\n};\n\nexport default class PlaceholderContainer extends Component {\n  props: PlaceholderContainerProps;\n  state: PlaceholderContainerState;\n  position: Animated.Value;\n  placeholders: Array<React.Element<*>>;\n  constructor(props: PlaceholderContainerProps) {\n    super(props);\n    this.state = {\n      ContainerComponent: { x: 0, y: 0, width: 0, height: 0 },\n      AnimatedComponent: { x: 0, y: 0, width: 0, height: 0 },\n      startPosition: 0,\n      stopPosition: 0,\n      isContainerComponentMeasured: false,\n      isAnimatedComponentMeasured: false,\n      Component: null\n    };\n    this.position = new Animated.Value(0);\n    this.placeholders = [];\n    this._measureContainerComponent = this._measureView.bind(\n      null,\n      'ContainerComponent'\n    );\n    this._measureAnimatedComponent = this._measureView.bind(\n      null,\n      'AnimatedComponent'\n    );\n  }\n  getChildContext(): Object {\n    return {\n      position: this.position,\n      animatedComponent: this.props.animatedComponent,\n      registerPlaceholder: this._registerPlaceholder\n    };\n  }\n  componentDidMount(): void {\n    const { loader, replace } = this.props;\n    loader &&\n      Promise.resolve(loader).then(Component => {\n        !replace ? this.setState({ Component }) : this._replacePlaceholders();\n      });\n  }\n\n  componentWillUnmount(): void {\n    this.position.stopAnimation();\n  }\n\n  render(): React.Element<*> {\n    const { style, elements, animatedComponent, children } = this.props;\n    const { Component, isAnimatedComponentMeasured } = this.state;\n    return (\n      <View\n        ref={ref => {\n          this.containerRef = ref;\n        }}\n        onLayout={this._measureContainerComponent}\n        style={style}\n      >\n        {!isAnimatedComponentMeasured &&\n          <View\n            ref={ref => {\n              this.componentRef = ref;\n            }}\n            onLayout={this._measureAnimatedComponent}\n            style={styles.offscreen}\n          >\n            {animatedComponent}\n          </View>}\n        {(Component && Component) || children}\n      </View>\n    );\n  }\n\n  _triggerAnimation = (): void => {\n    const { duration, delay } = this.props;\n    const { startPosition, stopPosition } = this.state;\n    Animated.loop(Animated.sequence([\n      Animated.timing(this.position, {\n        toValue: stopPosition || screenWidth,\n        duration: duration,\n        useNativeDriver: true\n      }),\n      Animated.timing(this.position, {\n        toValue: startPosition || 0,\n        duration: 0,\n        delay: delay || 0,\n        useNativeDriver: true\n      })\n    ])).start();\n  };\n\n  _startAndRepeat = (): void => {\n    const { Component } = this.state;\n    !Component && this._triggerAnimation();\n  };\n\n  _measureView = (viewName: string, event: Object): void => {\n    const { x, y, height, width } = event.nativeEvent.layout;\n    this.setState(\n      () => ({\n        [viewName]: {\n          x,\n          y,\n          height,\n          width\n        },\n        [`is${viewName}Measured`]: true\n      }),\n      () => {\n        this._setAnimationPositions();\n      }\n    );\n  };\n\n  _setAnimationPositions = (): void => {\n    const {\n      ContainerComponent,\n      AnimatedComponent,\n      isContainerComponentMeasured,\n      isAnimatedComponentMeasured\n    } = this.state;\n    if (!isContainerComponentMeasured || !isAnimatedComponentMeasured) {\n      return;\n    }\n    const startPosition = -(ContainerComponent.x + AnimatedComponent.width);\n    const stopPosition =\n      ContainerComponent.x + ContainerComponent.width + AnimatedComponent.width;\n    this.setState(\n      () => ({\n        startPosition,\n        stopPosition\n      }),\n      () => {\n        this.position.setValue(startPosition);\n        this._startAndRepeat();\n      }\n    );\n  };\n\n  _registerPlaceholder = (placeholder: React.Element<*>): void => {\n    const { replace } = this.props;\n    if (!replace) {\n      return;\n    }\n    this.placeholders.push(placeholder);\n  };\n\n  _replacePlaceholders = (): void => {\n    try {\n      this.placeholders.forEach(placeholder => {\n        placeholder._resolve();\n      });\n    } catch (e) {\n      console.log('Something went wrong');\n    }\n  };\n}\n\nPlaceholderContainer.childContextTypes = {\n  position: PropTypes.object.isRequired,\n  animatedComponent: PropTypes.object.isRequired,\n  registerPlaceholder: PropTypes.func.isRequired\n};\n\nconst styles = StyleSheet.create({\n  offscreen: {\n    position: 'absolute',\n    left: -1000\n  }\n});\n"]},"metadata":{},"sourceType":"module"}