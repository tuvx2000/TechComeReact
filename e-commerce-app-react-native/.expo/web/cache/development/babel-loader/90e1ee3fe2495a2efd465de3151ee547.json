{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\CartScreen\\\\CartScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchCart } from \"../../reducers\";\nimport Colors from \"../../utils/Colors\";\nimport { Header, CartBody, TotalButton } from \"./components\";\nimport Loader from \"../../components/Loaders/Loader\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height;\n\nexport var CartScreen = function CartScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isRefreshing = _useState2[0],\n      setIsRefreshing = _useState2[1];\n\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  });\n  var carts = useSelector(function (state) {\n    return state.cart.cartItems;\n  });\n  var loading = useSelector(function (state) {\n    return state.cart.isLoading;\n  });\n  var cartItems = carts.items;\n  var cartId = carts._id;\n  var dispatch = useDispatch();\n  var total = 0;\n  carts.items.map(function (item) {\n    return total += +item.item.price * +item.quantity;\n  });\n  var loadCarts = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsRefreshing(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(dispatch(fetchCart()));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](1);\n            alert(_context.t0);\n\n          case 9:\n            setIsRefreshing(false);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 6]], Promise);\n  }, [dispatch, setIsRefreshing]);\n  useEffect(function () {\n    loadCarts();\n  }, [user.userid]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    user: user,\n    carts: carts,\n    navigation: props.navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), loading ? React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 18\n    }\n  }) : React.createElement(React.Fragment, null), React.createElement(CartBody, {\n    user: user,\n    carts: carts,\n    loadCarts: loadCarts,\n    isRefreshing: isRefreshing,\n    navigation: props.navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), Object.keys(user).length === 0 ? React.createElement(React.Fragment, null) : carts.items.length === 0 ? React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }) : React.createElement(TotalButton, {\n    total: total,\n    cartItems: cartItems,\n    cartId: cartId,\n    navigation: props.navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.white\n  },\n  header: {\n    width: '100%',\n    backgroundColor: '#fff',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    height: Platform.OS === 'android' ? 70 : height < 668 ? 70 : 90,\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  },\n  centerLoader: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    top: Platform.OS === 'android' ? 70 : height < 668 ? 70 : 90\n  }\n});","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/CartScreen/CartScreen.js"],"names":["React","useEffect","useState","useCallback","useSelector","useDispatch","fetchCart","Colors","Header","CartBody","TotalButton","Loader","Dimensions","get","height","CartScreen","props","isRefreshing","setIsRefreshing","user","state","auth","carts","cart","cartItems","loading","isLoading","items","cartId","_id","dispatch","total","map","item","price","quantity","loadCarts","alert","userid","styles","container","navigation","Object","keys","length","StyleSheet","create","flex","backgroundColor","white","header","width","flexDirection","justifyContent","alignItems","Platform","OS","paddingVertical","paddingHorizontal","centerLoader","position","top"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { View, StyleSheet, Platform, Dimensions } from 'react-native';\r\n//Redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n//Action\r\nimport { fetchCart } from '../../reducers';\r\n//component\r\nimport Colors from '../../utils/Colors';\r\nimport { Header, CartBody, TotalButton } from './components';\r\n//Loader\r\nimport Loader from '../../components/Loaders/Loader';\r\n\r\nconst { height } = Dimensions.get('window');\r\n\r\nexport const CartScreen = (props) => {\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const user = useSelector((state) => state.auth.user);\r\n  const carts = useSelector((state) => state.cart.cartItems);\r\n  const loading = useSelector((state) => state.cart.isLoading);\r\n  const cartItems = carts.items;\r\n  const cartId = carts._id;\r\n  const dispatch = useDispatch();\r\n  let total = 0;\r\n  carts.items.map((item) => (total += +item.item.price * +item.quantity));\r\n  const loadCarts = useCallback(async () => {\r\n    setIsRefreshing(true);\r\n    try {\r\n      await dispatch(fetchCart());\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n    setIsRefreshing(false);\r\n  }, [dispatch, setIsRefreshing]);\r\n  useEffect(() => {\r\n    loadCarts();\r\n  }, [user.userid]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Header user={user} carts={carts} navigation={props.navigation} />\r\n      {loading ? <Loader /> : <></>}\r\n      <CartBody\r\n        user={user}\r\n        carts={carts}\r\n        loadCarts={loadCarts}\r\n        isRefreshing={isRefreshing}\r\n        navigation={props.navigation}\r\n      />\r\n      {Object.keys(user).length === 0 ? (\r\n        <></>\r\n      ) : carts.items.length === 0 ? (\r\n        <View />\r\n      ) : (\r\n        <TotalButton\r\n          total={total}\r\n          cartItems={cartItems}\r\n          cartId={cartId}\r\n          navigation={props.navigation}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: Colors.white,\r\n  },\r\n  header: {\r\n    width: '100%',\r\n    backgroundColor: '#fff',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-end',\r\n    height: Platform.OS === 'android' ? 70 : height < 668 ? 70 : 90,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n  centerLoader: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n    width: '100%',\r\n    position: 'absolute',\r\n    top: Platform.OS === 'android' ? 70 : height < 668 ? 70 : 90,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}