{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_FAVORITE, ADD_FAVORITE, REMOVE_FAVORITE, FAVORITE_LOADING, FAVORITE_FAILURE } from \"./favoriteActions\";\nvar initialState = {\n  favoriteList: [],\n  isLoading: false\n};\nexport var favoriteReducer = function favoriteReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FAVORITE_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true\n      });\n\n    case FAVORITE_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false\n      });\n\n    case FETCH_FAVORITE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favoriteList: action.favoriteList,\n        isLoading: false\n      });\n\n    case ADD_FAVORITE:\n      var newItem = action.addItem;\n      state.favoriteList.push(newItem);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false\n      });\n\n    case REMOVE_FAVORITE:\n      var id = action.itemId;\n      var newList = state.favoriteList.filter(function (item) {\n        return item._id !== id;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favoriteList: newList,\n        isLoading: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/reducers/favorite/favoriteReducer.js"],"names":["FETCH_FAVORITE","ADD_FAVORITE","REMOVE_FAVORITE","FAVORITE_LOADING","FAVORITE_FAILURE","initialState","favoriteList","isLoading","favoriteReducer","state","action","type","newItem","addItem","push","id","itemId","newList","filter","item","_id"],"mappings":";;;;;;AAAA,SACEA,cADF,EAEEC,YAFF,EAGEC,eAHF,EAIEC,gBAJF,EAKEC,gBALF;AAQA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;AAIA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,gBAAL;AACE,6CACKM,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAIF,SAAKH,gBAAL;AACE,6CACKK,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAIF,SAAKP,cAAL;AACE,6CACKS,KADL;AAEEH,QAAAA,YAAY,EAAEI,MAAM,CAACJ,YAFvB;AAGEC,QAAAA,SAAS,EAAE;AAHb;;AAKF,SAAKN,YAAL;AACE,UAAMW,OAAO,GAAGF,MAAM,CAACG,OAAvB;AACAJ,MAAAA,KAAK,CAACH,YAAN,CAAmBQ,IAAnB,CAAwBF,OAAxB;AACA,6CACKH,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAIF,SAAKL,eAAL;AACE,UAAMa,EAAE,GAAGL,MAAM,CAACM,MAAlB;AACA,UAAMC,OAAO,GAAGR,KAAK,CAACH,YAAN,CAAmBY,MAAnB,CAA0B,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,GAAL,KAAaL,EAAvB;AAAA,OAA1B,CAAhB;AACA,6CACKN,KADL;AAEEH,QAAAA,YAAY,EAAEW,OAFhB;AAGEV,QAAAA,SAAS,EAAE;AAHb;;AAKF;AACE,aAAOE,KAAP;AAjCJ;AAmCD,CApCM","sourcesContent":["import {\r\n  FETCH_FAVORITE,\r\n  ADD_FAVORITE,\r\n  REMOVE_FAVORITE,\r\n  FAVORITE_LOADING,\r\n  FAVORITE_FAILURE,\r\n} from \"./favoriteActions\";\r\n\r\nconst initialState = {\r\n  favoriteList: [],\r\n  isLoading: false,\r\n};\r\nexport const favoriteReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FAVORITE_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case FAVORITE_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    case FETCH_FAVORITE:\r\n      return {\r\n        ...state,\r\n        favoriteList: action.favoriteList,\r\n        isLoading: false,\r\n      };\r\n    case ADD_FAVORITE:\r\n      const newItem = action.addItem;\r\n      state.favoriteList.push(newItem);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    case REMOVE_FAVORITE:\r\n      const id = action.itemId;\r\n      const newList = state.favoriteList.filter((item) => item._id !== id);\r\n      return {\r\n        ...state,\r\n        favoriteList: newList,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}