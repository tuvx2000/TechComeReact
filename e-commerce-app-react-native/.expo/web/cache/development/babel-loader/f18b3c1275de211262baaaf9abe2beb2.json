{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\components\\\\UI\\\\NumberFormat.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Colors from \"../../utils/Colors\";\nimport NumberFormat from \"react-number-format\";\nimport CustomText from \"./CustomText\";\n\nvar Number = function Number(_ref, props) {\n  var price = _ref.price,\n      color = _ref.color;\n  return React.createElement(NumberFormat, {\n    value: price,\n    displayType: \"text\",\n    thousandSeparator: true,\n    suffix: \" đ\",\n    renderText: function renderText(formattedValue) {\n      return React.createElement(View, {\n        style: color ? _objectSpread(_objectSpread({}, styles.priceContainer), {}, {\n          backgroundColor: color\n        }) : styles.container,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, React.createElement(CustomText, {\n        style: _objectSpread(_objectSpread({}, props.style), {}, {\n          color: color ? \"#fff\" : Colors.red\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, formattedValue));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {},\n  priceContainer: {\n    paddingHorizontal: 7,\n    paddingVertical: 5,\n    borderRadius: 5,\n    shadowColor: \"black\",\n    shadowOpacity: 0.3,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    elevation: 1\n  },\n  price: {\n    fontSize: 13\n  }\n});\nexport default Number;","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/components/UI/NumberFormat.js"],"names":["React","Colors","NumberFormat","CustomText","Number","props","price","color","formattedValue","styles","priceContainer","backgroundColor","container","style","red","StyleSheet","create","paddingHorizontal","paddingVertical","borderRadius","shadowColor","shadowOpacity","shadowOffset","width","height","elevation","fontSize"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,OAAOC,MAAP;AAEA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,OAAOC,UAAP;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAmBC,KAAnB,EAA6B;AAAA,MAA1BC,KAA0B,QAA1BA,KAA0B;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAC1C,SACE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAED,KADT;AAEE,IAAA,WAAW,EAAE,MAFf;AAGE,IAAA,iBAAiB,EAAE,IAHrB;AAIE,IAAA,MAAM,EAAE,IAJV;AAKE,IAAA,UAAU,EAAE,oBAACE,cAAD;AAAA,aACV,oBAAC,IAAD;AACE,QAAA,KAAK,EACHD,KAAK,mCACIE,MAAM,CAACC,cADX;AAC2BC,UAAAA,eAAe,EAAEJ;AAD5C,aAEDE,MAAM,CAACG,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,UAAD;AACE,QAAA,KAAK,kCAAOP,KAAK,CAACQ,KAAb;AAAoBN,UAAAA,KAAK,EAAEA,KAAK,GAAG,MAAH,GAAYN,MAAM,CAACa;AAAnD,UADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGN,cAHH,CAPF,CADU;AAAA,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAuBD,CAxBD;;AA0BA,IAAMC,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE,EADoB;AAE/BF,EAAAA,cAAc,EAAE;AACdO,IAAAA,iBAAiB,EAAE,CADL;AAEdC,IAAAA,eAAe,EAAE,CAFH;AAGdC,IAAAA,YAAY,EAAE,CAHA;AAIdC,IAAAA,WAAW,EAAE,OAJC;AAKdC,IAAAA,aAAa,EAAE,GALD;AAMdC,IAAAA,YAAY,EAAE;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KANA;AAOdC,IAAAA,SAAS,EAAE;AAPG,GAFe;AAW/BnB,EAAAA,KAAK,EAAE;AACLoB,IAAAA,QAAQ,EAAE;AADL;AAXwB,CAAlB,CAAf;AAgBA,eAAetB,MAAf","sourcesContent":["import React from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\n//Color\r\nimport Colors from \"../../utils/Colors\";\r\n//number format\r\nimport NumberFormat from \"react-number-format\";\r\n//Text\r\nimport CustomText from \"./CustomText\";\r\n\r\nconst Number = ({ price, color }, props) => {\r\n  return (\r\n    <NumberFormat\r\n      value={price}\r\n      displayType={\"text\"}\r\n      thousandSeparator={true}\r\n      suffix={\" đ\"}\r\n      renderText={(formattedValue) => (\r\n        <View\r\n          style={\r\n            color\r\n              ? { ...styles.priceContainer, backgroundColor: color }\r\n              : styles.container\r\n          }\r\n        >\r\n          <CustomText\r\n            style={{ ...props.style, color: color ? \"#fff\" : Colors.red }}\r\n          >\r\n            {formattedValue}\r\n          </CustomText>\r\n        </View>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {},\r\n  priceContainer: {\r\n    paddingHorizontal: 7,\r\n    paddingVertical: 5,\r\n    borderRadius: 5,\r\n    shadowColor: \"black\",\r\n    shadowOpacity: 0.3,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    elevation: 1,\r\n  },\r\n  price: {\r\n    fontSize: 13,\r\n  },\r\n});\r\n\r\nexport default Number;\r\n"]},"metadata":{},"sourceType":"module"}