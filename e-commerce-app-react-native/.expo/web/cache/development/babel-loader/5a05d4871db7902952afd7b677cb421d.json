{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onChange\"];\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\LoginScreen\\\\components\\\\RenderField.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput } from \"react-native-paper\";\nimport Colors from \"../../../utils/Colors\";\nimport CustomText from \"../../../components/UI/CustomText\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nexport default renderField = function renderField(_ref) {\n  var label = _ref.label,\n      keyboardType = _ref.keyboardType,\n      secureTextEntry = _ref.secureTextEntry,\n      icon = _ref.icon,\n      showPass = _ref.showPass,\n      passIcon = _ref.passIcon,\n      setShowPass = _ref.setShowPass,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      warning = _ref$meta.warning,\n      _ref$input = _ref.input,\n      onChange = _ref$input.onChange,\n      restInput = _objectWithoutProperties(_ref$input, _excluded);\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, _extends({\n    placeholder: label,\n    autoCapitalize: \"none\",\n    mode: \"outlined\",\n    clearButtonMode: passIcon ? \"never\" : \"always\",\n    selectionColor: Colors.leave_green,\n    theme: {\n      colors: {\n        primary: Colors.leave_green\n      }\n    },\n    left: React.createElement(TextInput.Icon, {\n      name: icon,\n      size: 24,\n      color: Colors.lighter_green,\n      style: {\n        paddingRight: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }),\n    style: {\n      fontSize: 14,\n      backgroundColor: \"transparent\",\n      marginVertical: 5\n    },\n    keyboardType: keyboardType,\n    onChangeText: onChange,\n    secureTextEntry: secureTextEntry\n  }, restInput, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })), passIcon ? React.createElement(MaterialCommunityIcons, {\n    name: showPass ? \"eye\" : \"eye-off\",\n    size: 24,\n    color: Colors.lighter_green,\n    onPress: function onPress() {\n      setShowPass(function (prev) {\n        return !prev;\n      });\n    },\n    style: {\n      position: \"absolute\",\n      top: \"40%\",\n      right: 10,\n      zIndex: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }) : React.createElement(React.Fragment, null)), touched && error && React.createElement(CustomText, {\n    style: {\n      color: \"red\",\n      marginHorizontal: 15,\n      marginTop: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, error));\n};","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/LoginScreen/components/RenderField.js"],"names":["React","TextInput","Colors","CustomText","MaterialCommunityIcons","renderField","label","keyboardType","secureTextEntry","icon","showPass","passIcon","setShowPass","meta","touched","error","warning","input","onChange","restInput","leave_green","colors","primary","lighter_green","paddingRight","fontSize","backgroundColor","marginVertical","prev","position","top","right","zIndex","color","marginHorizontal","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { TextInput } from \"react-native-paper\";\r\n//Colors\r\nimport Colors from \"../../../utils/Colors\";\r\nimport CustomText from \"../../../components/UI/CustomText\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\nexport default renderField = ({\r\n  label,\r\n  keyboardType,\r\n  secureTextEntry,\r\n  icon,\r\n  showPass,\r\n  passIcon,\r\n  setShowPass,\r\n  meta: { touched, error, warning },\r\n  input: { onChange, ...restInput },\r\n}) => {\r\n  return (\r\n    <View>\r\n      <View>\r\n        <TextInput\r\n          placeholder={label}\r\n          autoCapitalize='none'\r\n          mode='outlined'\r\n          clearButtonMode={passIcon ? \"never\" : \"always\"}\r\n          selectionColor={Colors.leave_green}\r\n          theme={{ colors: { primary: Colors.leave_green } }}\r\n          left={\r\n            <TextInput.Icon\r\n              name={icon}\r\n              size={24}\r\n              color={Colors.lighter_green}\r\n              style={{ paddingRight: 10 }}\r\n            />\r\n          }\r\n          style={{\r\n            fontSize: 14,\r\n            backgroundColor: \"transparent\",\r\n            marginVertical: 5,\r\n            // paddingHorizontal: 5,\r\n          }}\r\n          keyboardType={keyboardType}\r\n          onChangeText={onChange}\r\n          secureTextEntry={secureTextEntry}\r\n          {...restInput}\r\n        />\r\n        {passIcon ? (\r\n          <MaterialCommunityIcons\r\n            name={showPass ? \"eye\" : \"eye-off\"}\r\n            size={24}\r\n            color={Colors.lighter_green}\r\n            onPress={() => {\r\n              setShowPass((prev) => !prev);\r\n            }}\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"40%\",\r\n              right: 10,\r\n              zIndex: 100,\r\n            }}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </View>\r\n      {touched && error && (\r\n        <CustomText\r\n          style={{ color: \"red\", marginHorizontal: 15, marginTop: 5 }}\r\n        >\r\n          {error}\r\n        </CustomText>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}