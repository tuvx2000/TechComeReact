{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\PreOrderScreen\\\\components\\\\RenderField.js\";\n\nimport React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput } from \"react-native-paper\";\nimport CustomText from \"../../../components/UI/CustomText\";\nimport Colors from \"../../../utils/Colors\";\nexport default renderField = function renderField(_ref) {\n  var label = _ref.label,\n      maxLength = _ref.maxLength,\n      keyboardType = _ref.keyboardType,\n      onChangeText = _ref.onChangeText,\n      returnKeyType = _ref.returnKeyType,\n      checkValidation = _ref.checkValidation,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      warning = _ref$meta.warning,\n      restInput = _extends({}, _ref.input);\n\n  useEffect(function () {\n    checkValidation(error);\n  }, [onChangeText]);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, _extends({\n    label: label,\n    mode: \"outlined\",\n    theme: {\n      colors: {\n        primary: Colors.leave_green\n      }\n    },\n    selectionColor: Colors.leave_green,\n    style: {\n      marginVertical: 10,\n      backgroundColor: Colors.white,\n      fontSize: 14\n    },\n    maxLength: maxLength,\n    autoCapitalize: \"words\",\n    returnKeyType: returnKeyType ? returnKeyType : \"next\",\n    keyboardType: keyboardType,\n    onChangeText: onChangeText\n  }, restInput, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }))), touched && error && React.createElement(CustomText, {\n    style: {\n      color: \"red\",\n      paddingHorizontal: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, error));\n};","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/PreOrderScreen/components/RenderField.js"],"names":["React","useEffect","TextInput","CustomText","Colors","renderField","label","maxLength","keyboardType","onChangeText","returnKeyType","checkValidation","meta","touched","error","warning","restInput","input","colors","primary","leave_green","marginVertical","backgroundColor","white","fontSize","color","paddingHorizontal"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,UAAP;AAEA,OAAOC,MAAP;AAEA,eAAeC,WAAW,GAAG,2BASvB;AAAA,MARJC,KAQI,QARJA,KAQI;AAAA,MAPJC,SAOI,QAPJA,SAOI;AAAA,MANJC,YAMI,QANJA,YAMI;AAAA,MALJC,YAKI,QALJA,YAKI;AAAA,MAJJC,aAII,QAJJA,aAII;AAAA,MAHJC,eAGI,QAHJA,eAGI;AAAA,uBAFJC,IAEI;AAAA,MAFIC,OAEJ,aAFIA,OAEJ;AAAA,MAFaC,KAEb,aAFaA,KAEb;AAAA,MAFoBC,OAEpB,aAFoBA,OAEpB;AAAA,MADQC,SACR,qBADJC,KACI;;AACJhB,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,eAAe,CAACG,KAAD,CAAf;AACD,GAFQ,EAEN,CAACL,YAAD,CAFM,CAAT;AAGA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEH,KADT;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAEf,MAAM,CAACgB;AAAlB;AAAV,KAHT;AAIE,IAAA,cAAc,EAAEhB,MAAM,CAACgB,WAJzB;AAKE,IAAA,KAAK,EAAE;AACLC,MAAAA,cAAc,EAAE,EADX;AAELC,MAAAA,eAAe,EAAElB,MAAM,CAACmB,KAFnB;AAGLC,MAAAA,QAAQ,EAAE;AAHL,KALT;AAUE,IAAA,SAAS,EAAEjB,SAVb;AAWE,IAAA,cAAc,EAAC,OAXjB;AAYE,IAAA,aAAa,EAAEG,aAAa,GAAGA,aAAH,GAAmB,MAZjD;AAaE,IAAA,YAAY,EAAEF,YAbhB;AAcE,IAAA,YAAY,EAAEC;AAdhB,KAeMO,SAfN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,EAoBGH,OAAO,IAAIC,KAAX,IACC,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEW,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,iBAAiB,EAAE;AAAnC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,KADH,CArBJ,CADF;AA4BD,CAzCD","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { TextInput } from \"react-native-paper\";\r\nimport CustomText from \"../../../components/UI/CustomText\";\r\n//Colors\r\nimport Colors from \"../../../utils/Colors\";\r\n\r\nexport default renderField = ({\r\n  label,\r\n  maxLength,\r\n  keyboardType,\r\n  onChangeText,\r\n  returnKeyType,\r\n  checkValidation,\r\n  meta: { touched, error, warning },\r\n  input: { ...restInput },\r\n}) => {\r\n  useEffect(() => {\r\n    checkValidation(error);\r\n  }, [onChangeText]);\r\n  return (\r\n    <View>\r\n      <View>\r\n        <TextInput\r\n          label={label}\r\n          mode='outlined'\r\n          theme={{ colors: { primary: Colors.leave_green } }}\r\n          selectionColor={Colors.leave_green}\r\n          style={{\r\n            marginVertical: 10,\r\n            backgroundColor: Colors.white,\r\n            fontSize: 14,\r\n          }}\r\n          maxLength={maxLength}\r\n          autoCapitalize='words'\r\n          returnKeyType={returnKeyType ? returnKeyType : \"next\"}\r\n          keyboardType={keyboardType}\r\n          onChangeText={onChangeText}\r\n          {...restInput}\r\n        />\r\n      </View>\r\n      {touched && error && (\r\n        <CustomText style={{ color: \"red\", paddingHorizontal: 5 }}>\r\n          {error}\r\n        </CustomText>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}