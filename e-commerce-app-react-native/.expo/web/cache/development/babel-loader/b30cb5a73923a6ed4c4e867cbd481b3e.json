{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\navigation\\\\StoneNavigator.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { createStackNavigator, CardStyleInterpolators, TransitionPresets } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { MaterialCommunityIcons, AntDesign } from '@expo/vector-icons';\nimport Colors from \"../utils/Colors\";\nimport CustomDrawer from \"./CustomDrawer\";\nimport CustomText from \"../components/UI/CustomText\";\nimport { AuthScreen } from \"../screens/AuthScreen\";\nimport { IntroScreen } from \"../screens/IntroScreen\";\nimport { SignupScreen } from \"../screens/SignupScreen\";\nimport { LoginScreen } from \"../screens/LoginScreen\";\nimport { TouchIdScreen } from \"../screens/TouchIdScreen\";\nimport { ForgetPwScreen } from \"../screens/ForgetPasswordScreen\";\nimport { ResetPwScreen } from \"../screens/ResetPwScreen\";\nimport { FinishResetPwScreen } from \"../screens/FinishResetPwScreen\";\nimport { HomeScreen } from \"../screens/HomeScreen\";\nimport { ContactScreen } from \"../screens/ContactScreen\";\nimport { CartScreen } from \"../screens/CartScreen\";\nimport { DetailScreen } from \"../screens/DetailScreen\";\nimport { FavoriteScreen } from \"../screens/FavoriteScreen\";\nimport { ProductScreen } from \"../screens/ProductScreen\";\nimport { OrderScreen } from \"../screens/OrderScreen\";\nimport { PreOrderScreen } from \"../screens/PreOrderScreen\";\nimport { PaymentScreen } from \"../screens/PaymentScreen\";\nimport { AddCreditCardScreen } from \"../screens/PaymentScreen\";\nimport { FinishOrderScreen } from \"../screens/FinishOrderScreen\";\nimport { ProfileScreen } from \"../screens/ProfileScreen\";\nimport { EditProfileScreen } from \"../screens/ProfileScreen\";\nimport { useSelector } from 'react-redux';\nvar IntroStack = createStackNavigator();\nexport var IntroStackScreen = function IntroStackScreen() {\n  return React.createElement(IntroStack.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, React.createElement(IntroStack.Screen, {\n    name: \"IntroScreen\",\n    component: IntroScreen,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }));\n};\nvar LoginStack = createStackNavigator();\nexport var LoginStackScreen = function LoginStackScreen() {\n  return React.createElement(LoginStack.Navigator, {\n    screenOptions: _objectSpread({\n      headerShown: false,\n      gestureEnabled: true,\n      cardOverlayEnabled: true\n    }, TransitionPresets.ModalPresentationIOS),\n    mode: \"modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }\n  }, React.createElement(LoginStack.Screen, {\n    name: \"LoginScreen\",\n    component: LoginScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }), React.createElement(LoginStack.Screen, {\n    name: \"ForgetPwScreen\",\n    component: ForgetPwScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }));\n};\nvar AuthStack = createStackNavigator();\nexport var AuthStackScreen = function AuthStackScreen() {\n  return React.createElement(AuthStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 3\n    }\n  }, React.createElement(AuthStack.Screen, {\n    name: \"AuthScreen\",\n    component: AuthScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }), React.createElement(AuthStack.Screen, {\n    name: \"LoginScreen\",\n    component: LoginStackScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }), React.createElement(AuthStack.Screen, {\n    name: \"SignupScreen\",\n    component: SignupScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }), React.createElement(AuthStack.Screen, {\n    name: \"FinishResetScreen\",\n    component: FinishResetPwScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }));\n};\nvar FavoriteStack = createStackNavigator();\nexport var FavoriteStackScreen = function FavoriteStackScreen() {\n  return React.createElement(FavoriteStack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 3\n    }\n  }, React.createElement(FavoriteStack.Screen, {\n    name: \"FavoriteScreen\",\n    component: FavoriteScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }), React.createElement(FavoriteStack.Screen, {\n    name: \"Detail\",\n    component: DetailScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }));\n};\nvar PaymentStack = createStackNavigator();\nexport var PaymentStackScreen = function PaymentStackScreen() {\n  return React.createElement(PaymentStack.Navigator, {\n    screenOptions: _objectSpread({\n      headerShown: false,\n      gestureEnabled: true,\n      cardOverlayEnabled: true\n    }, TransitionPresets.ModalPresentationIOS),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 3\n    }\n  }, React.createElement(PaymentStack.Screen, {\n    name: \"PaymentScreen\",\n    component: PaymentScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }), React.createElement(PaymentStack.Screen, {\n    name: \"AddCreditCardScreen\",\n    component: AddCreditCardScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }));\n};\nvar CartStack = createStackNavigator();\nexport var CartStackScreen = function CartStackScreen() {\n  return React.createElement(CartStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 3\n    }\n  }, React.createElement(CartStack.Screen, {\n    name: \"CartScreen\",\n    component: CartScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }), React.createElement(CartStack.Screen, {\n    name: \"PreOrderScreen\",\n    component: PreOrderScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }), React.createElement(CartStack.Screen, {\n    name: \"Payment\",\n    component: PaymentStackScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }), React.createElement(CartStack.Screen, {\n    name: \"AddCreditCardScreen\",\n    component: AddCreditCardScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }));\n};\nvar ProductStack = createStackNavigator();\nexport var ProductStackScreen = function ProductStackScreen() {\n  return React.createElement(ProductStack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 3\n    }\n  }, React.createElement(ProductStack.Screen, {\n    name: \"ProductScreen\",\n    component: ProductScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }), React.createElement(ProductStack.Screen, {\n    name: \"DetailScreen\",\n    component: DetailScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }), React.createElement(ProductStack.Screen, {\n    name: \"CartScreen\",\n    component: CartStackScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }));\n};\nvar ProfileStack = createStackNavigator();\nexport var ProfileStackScreen = function ProfileStackScreen() {\n  return React.createElement(ProfileStack.Navigator, {\n    screenOptions: _objectSpread({\n      headerShown: false,\n      gestureEnabled: true,\n      cardOverlayEnabled: true\n    }, TransitionPresets.ModalPresentationIOS),\n    mode: \"modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 3\n    }\n  }, React.createElement(ProfileStack.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }), React.createElement(ProfileStack.Screen, {\n    name: \"ProfileEdit\",\n    component: EditProfileScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }));\n};\nvar HomeStack = createStackNavigator();\nexport var HomeStackScreen = function HomeStackScreen() {\n  return React.createElement(HomeStack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 3\n    }\n  }, React.createElement(HomeStack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }), React.createElement(HomeStack.Screen, {\n    name: \"Detail\",\n    component: DetailScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }\n  }), React.createElement(HomeStack.Screen, {\n    name: \"Cart\",\n    component: CartStackScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }), React.createElement(HomeStack.Screen, {\n    name: \"Product\",\n    component: ProductStackScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }), React.createElement(HomeStack.Screen, {\n    name: \"FinishOrder\",\n    component: FinishOrderScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }), React.createElement(HomeStack.Screen, {\n    name: \"ResetPw\",\n    component: ResetPwScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }));\n};\nvar Tab = createMaterialBottomTabNavigator();\nexport var TabScreen = function TabScreen() {\n  var carts = useSelector(function (state) {\n    return state.cart.cartItems;\n  });\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          var iconName;\n          var color = focused ? Colors.lighter_green : Colors.grey;\n\n          if (route.name === 'HomeTab') {\n            iconName = 'home';\n          } else if (route.name === 'Favorite') {\n            iconName = 'hearto';\n          } else if (route.name === 'Cart') {\n            iconName = 'shoppingcart';\n          }\n\n          return React.createElement(AntDesign, {\n            name: iconName,\n            size: 23,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 18\n            }\n          });\n        }\n      };\n    },\n    barStyle: {\n      backgroundColor: Colors.light_grey,\n      height: 50,\n      justifyContent: 'center'\n    },\n    activeColor: Colors.lighter_green,\n    inactiveColor: Colors.grey,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"HomeTab\",\n    component: HomeStackScreen,\n    options: {\n      tabBarLabel: 'Trang chủ'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Favorite\",\n    component: FavoriteStackScreen,\n    options: function options() {\n      return {\n        tabBarLabel: 'Yêu thích'\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Cart\",\n    component: CartStackScreen,\n    options: function options() {\n      return {\n        tabBarLabel: 'Giỏ hàng',\n        tabBarBadge: carts.items.length === 0 ? null : carts.items.length\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }));\n};\nvar Drawer = createDrawerNavigator();\nexport var DrawerNavigator = function DrawerNavigator() {\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  });\n  var drawers = [{\n    name: 'HomeTab',\n    screen: TabScreen,\n    label: 'Trang Chủ',\n    icon: 'home-outline'\n  }, {\n    name: 'Order',\n    screen: OrderScreen,\n    label: 'Đơn Hàng',\n    icon: 'receipt'\n  }, {\n    name: 'Contact',\n    screen: ContactScreen,\n    label: 'Liên Hệ',\n    icon: 'contacts'\n  }];\n  return React.createElement(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawer, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 33\n        }\n      }));\n    },\n    drawerContentOptions: {\n      activeTintColor: Colors.grey,\n      itemStyle: {\n        marginVertical: 3\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }\n  }, drawers.map(function (_ref3) {\n    var name = _ref3.name,\n        icon = _ref3.icon,\n        label = _ref3.label,\n        screen = _ref3.screen;\n    return React.createElement(Drawer.Screen, {\n      key: name,\n      name: name,\n      component: screen,\n      options: function options() {\n        return {\n          title: function title(_ref4) {\n            var focused = _ref4.focused;\n            return React.createElement(CustomText, {\n              style: {\n                fontSize: 14,\n                fontWeight: '500',\n                color: focused ? Colors.lighter_green : Colors.grey,\n                fontFamily: 'Roboto-Medium'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 15\n              }\n            }, label);\n          },\n          drawerIcon: function drawerIcon(_ref5) {\n            var focused = _ref5.focused;\n            return React.createElement(MaterialCommunityIcons, {\n              name: icon,\n              size: 23,\n              color: focused ? Colors.lighter_green : Colors.grey,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 15\n              }\n            });\n          }\n        };\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }\n    });\n  }), Object.keys(user).length === 0 ? React.createElement(Drawer.Screen, {\n    name: \"SignUp\",\n    component: AuthStackScreen,\n    options: function options() {\n      return {\n        title: function title(_ref6) {\n          var focused = _ref6.focused;\n          return React.createElement(CustomText, {\n            style: {\n              fontSize: 14,\n              fontWeight: '500',\n              color: focused ? Colors.lighter_green : Colors.grey,\n              fontFamily: 'Roboto-Medium'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }\n          }, \"\\u0110\\u0103ng nh\\u1EADp\");\n        },\n        drawerIcon: function drawerIcon(_ref7) {\n          var focused = _ref7.focused;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"login\",\n            size: 23,\n            color: focused ? Colors.lighter_green : Colors.grey,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }\n          });\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }\n  }) : React.createElement(React.Fragment, null, React.createElement(Drawer.Screen, {\n    name: \"TouchId\",\n    component: TouchIdScreen,\n    options: function options() {\n      return {\n        title: function title(_ref8) {\n          var focused = _ref8.focused;\n          return React.createElement(CustomText, {\n            style: {\n              fontSize: 14,\n              fontWeight: '500',\n              color: focused ? Colors.lighter_green : Colors.grey,\n              fontFamily: 'Roboto-Medium'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }\n          }, \"Touch/Face ID\");\n        },\n        drawerIcon: function drawerIcon(_ref9) {\n          var focused = _ref9.focused;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"security\",\n            size: 25,\n            color: focused ? Colors.lighter_green : Colors.grey,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }\n          });\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: ProfileStackScreen,\n    options: function options() {\n      return {\n        title: function title(_ref10) {\n          var focused = _ref10.focused;\n          return React.createElement(CustomText, {\n            style: {\n              fontSize: 14,\n              fontWeight: '500',\n              color: focused ? Colors.lighter_green : Colors.grey,\n              fontFamily: 'Roboto-Medium'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }\n          }, \"Th\\xF4ng Tin C\\xE1 Nh\\xE2n\");\n        },\n        drawerIcon: function drawerIcon(_ref11) {\n          var focused = _ref11.focused;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"face-profile\",\n            size: 25,\n            color: focused ? Colors.lighter_green : Colors.grey,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }\n          });\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 11\n    }\n  })));\n};","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/navigation/StoneNavigator.js"],"names":["React","createStackNavigator","CardStyleInterpolators","TransitionPresets","createDrawerNavigator","createMaterialBottomTabNavigator","MaterialCommunityIcons","AntDesign","Colors","CustomDrawer","CustomText","AuthScreen","IntroScreen","SignupScreen","LoginScreen","TouchIdScreen","ForgetPwScreen","ResetPwScreen","FinishResetPwScreen","HomeScreen","ContactScreen","CartScreen","DetailScreen","FavoriteScreen","ProductScreen","OrderScreen","PreOrderScreen","PaymentScreen","AddCreditCardScreen","FinishOrderScreen","ProfileScreen","EditProfileScreen","useSelector","IntroStack","IntroStackScreen","headerShown","LoginStack","LoginStackScreen","gestureEnabled","cardOverlayEnabled","ModalPresentationIOS","AuthStack","AuthStackScreen","FavoriteStack","FavoriteStackScreen","cardStyleInterpolator","forVerticalIOS","PaymentStack","PaymentStackScreen","CartStack","CartStackScreen","ProductStack","ProductStackScreen","ProfileStack","ProfileStackScreen","HomeStack","HomeStackScreen","Tab","TabScreen","carts","state","cart","cartItems","route","tabBarIcon","focused","iconName","color","lighter_green","grey","name","backgroundColor","light_grey","height","justifyContent","tabBarLabel","tabBarBadge","items","length","Drawer","DrawerNavigator","user","auth","drawers","screen","label","icon","props","activeTintColor","itemStyle","marginVertical","map","title","fontSize","fontWeight","fontFamily","drawerIcon","Object","keys"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Platform } from 'react-native';\r\nimport {\r\n  createStackNavigator,\r\n  CardStyleInterpolators,\r\n  TransitionPresets,\r\n} from '@react-navigation/stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\n// Icon\r\nimport { MaterialCommunityIcons, AntDesign } from '@expo/vector-icons';\r\n// Color\r\nimport Colors from '../utils/Colors';\r\n// Custom Drawer\r\nimport CustomDrawer from './CustomDrawer';\r\nimport CustomText from '../components/UI/CustomText';\r\n// Auth Screens\r\nimport { AuthScreen } from '../screens/AuthScreen';\r\nimport { IntroScreen } from '../screens/IntroScreen';\r\nimport { SignupScreen } from '../screens/SignupScreen';\r\nimport { LoginScreen } from '../screens/LoginScreen';\r\nimport { TouchIdScreen } from '../screens/TouchIdScreen';\r\n// Reset Screens\r\nimport { ForgetPwScreen } from '../screens/ForgetPasswordScreen';\r\nimport { ResetPwScreen } from '../screens/ResetPwScreen';\r\nimport { FinishResetPwScreen } from '../screens/FinishResetPwScreen';\r\n// Home Screens\r\nimport { HomeScreen } from '../screens/HomeScreen';\r\nimport { ContactScreen } from '../screens/ContactScreen';\r\n//Product Screens\r\nimport { CartScreen } from '../screens/CartScreen';\r\nimport { DetailScreen } from '../screens/DetailScreen';\r\nimport { FavoriteScreen } from '../screens/FavoriteScreen';\r\nimport { ProductScreen } from '../screens/ProductScreen';\r\n// Order Screens\r\nimport { OrderScreen } from '../screens/OrderScreen';\r\nimport { PreOrderScreen } from '../screens/PreOrderScreen';\r\nimport { PaymentScreen } from '../screens/PaymentScreen';\r\nimport { AddCreditCardScreen } from '../screens/PaymentScreen';\r\nimport { FinishOrderScreen } from '../screens/FinishOrderScreen';\r\n// Profile Screens\r\nimport { ProfileScreen } from '../screens/ProfileScreen';\r\nimport { EditProfileScreen } from '../screens/ProfileScreen';\r\n// redux\r\nimport { useSelector } from 'react-redux';\r\n\r\n// create Navigator\r\n\r\nconst IntroStack = createStackNavigator();\r\nexport const IntroStackScreen = () => (\r\n  <IntroStack.Navigator>\r\n    <IntroStack.Screen\r\n      name='IntroScreen'\r\n      component={IntroScreen}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </IntroStack.Navigator>\r\n);\r\n\r\nconst LoginStack = createStackNavigator();\r\nexport const LoginStackScreen = () => (\r\n  <LoginStack.Navigator\r\n    screenOptions={{\r\n      headerShown: false,\r\n      gestureEnabled: true,\r\n      cardOverlayEnabled: true,\r\n      ...TransitionPresets.ModalPresentationIOS,\r\n    }}\r\n    mode='modal'\r\n  >\r\n    <LoginStack.Screen name='LoginScreen' component={LoginScreen} />\r\n    <LoginStack.Screen name='ForgetPwScreen' component={ForgetPwScreen} />\r\n  </LoginStack.Navigator>\r\n);\r\n\r\nconst AuthStack = createStackNavigator();\r\nexport const AuthStackScreen = () => (\r\n  <AuthStack.Navigator screenOptions={{ headerShown: false }}>\r\n    <AuthStack.Screen name='AuthScreen' component={AuthScreen} />\r\n    <AuthStack.Screen name='LoginScreen' component={LoginStackScreen} />\r\n    <AuthStack.Screen name='SignupScreen' component={SignupScreen} />\r\n    <AuthStack.Screen\r\n      name='FinishResetScreen'\r\n      component={FinishResetPwScreen}\r\n    />\r\n  </AuthStack.Navigator>\r\n);\r\n\r\nconst FavoriteStack = createStackNavigator();\r\nexport const FavoriteStackScreen = () => (\r\n  <FavoriteStack.Navigator\r\n    screenOptions={{\r\n      headerShown: false,\r\n      cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\r\n    }}\r\n  >\r\n    <FavoriteStack.Screen name='FavoriteScreen' component={FavoriteScreen} />\r\n    <FavoriteStack.Screen name='Detail' component={DetailScreen} />\r\n  </FavoriteStack.Navigator>\r\n);\r\n\r\nconst PaymentStack = createStackNavigator();\r\nexport const PaymentStackScreen = () => (\r\n  <PaymentStack.Navigator\r\n    screenOptions={{\r\n      headerShown: false,\r\n      gestureEnabled: true,\r\n      cardOverlayEnabled: true,\r\n      ...TransitionPresets.ModalPresentationIOS,\r\n    }}\r\n  >\r\n    <PaymentStack.Screen name='PaymentScreen' component={PaymentScreen} />\r\n    <PaymentStack.Screen\r\n      name='AddCreditCardScreen'\r\n      component={AddCreditCardScreen}\r\n    />\r\n  </PaymentStack.Navigator>\r\n);\r\n\r\nconst CartStack = createStackNavigator();\r\nexport const CartStackScreen = () => (\r\n  <CartStack.Navigator screenOptions={{ headerShown: false }}>\r\n    <CartStack.Screen name='CartScreen' component={CartScreen} />\r\n\r\n    <CartStack.Screen name='PreOrderScreen' component={PreOrderScreen} />\r\n    <CartStack.Screen name='Payment' component={PaymentStackScreen} />\r\n    <CartStack.Screen\r\n      name='AddCreditCardScreen'\r\n      component={AddCreditCardScreen}\r\n    />\r\n  </CartStack.Navigator>\r\n);\r\n\r\nconst ProductStack = createStackNavigator();\r\nexport const ProductStackScreen = () => (\r\n  <ProductStack.Navigator\r\n    screenOptions={{\r\n      headerShown: false,\r\n      cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\r\n    }}\r\n  >\r\n    <ProductStack.Screen name='ProductScreen' component={ProductScreen} />\r\n    <ProductStack.Screen name='DetailScreen' component={DetailScreen} />\r\n    <ProductStack.Screen name='CartScreen' component={CartStackScreen} />\r\n  </ProductStack.Navigator>\r\n);\r\n\r\nconst ProfileStack = createStackNavigator();\r\n\r\nexport const ProfileStackScreen = () => (\r\n  <ProfileStack.Navigator\r\n    screenOptions={{\r\n      headerShown: false,\r\n      gestureEnabled: true,\r\n      cardOverlayEnabled: true,\r\n      ...TransitionPresets.ModalPresentationIOS,\r\n    }}\r\n    mode='modal'\r\n  >\r\n    <ProfileStack.Screen name='Profile' component={ProfileScreen} />\r\n    <ProfileStack.Screen name='ProfileEdit' component={EditProfileScreen} />\r\n  </ProfileStack.Navigator>\r\n);\r\n\r\nconst HomeStack = createStackNavigator();\r\nexport const HomeStackScreen = () => (\r\n  <HomeStack.Navigator\r\n    screenOptions={{\r\n      headerShown: false,\r\n      cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\r\n    }}\r\n  >\r\n    <HomeStack.Screen\r\n      name='Home'\r\n      component={HomeScreen}\r\n      //animationEnabled: false , nằm trong option\r\n    />\r\n    <HomeStack.Screen name='Detail' component={DetailScreen} />\r\n    <HomeStack.Screen name='Cart' component={CartStackScreen} />\r\n    <HomeStack.Screen name='Product' component={ProductStackScreen} />\r\n    <HomeStack.Screen name='FinishOrder' component={FinishOrderScreen} />\r\n    <HomeStack.Screen name='ResetPw' component={ResetPwScreen} />\r\n  </HomeStack.Navigator>\r\n);\r\n\r\n//Tab\r\nconst Tab = createMaterialBottomTabNavigator();\r\n\r\nexport const TabScreen = () => {\r\n  const carts = useSelector((state) => state.cart.cartItems);\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused }) => {\r\n          let iconName;\r\n          const color = focused ? Colors.lighter_green : Colors.grey;\r\n          if (route.name === 'HomeTab') {\r\n            iconName = 'home';\r\n          } else if (route.name === 'Favorite') {\r\n            iconName = 'hearto';\r\n          } else if (route.name === 'Cart') {\r\n            iconName = 'shoppingcart';\r\n          }\r\n          return <AntDesign name={iconName} size={23} color={color} />;\r\n        },\r\n      })}\r\n      barStyle={{\r\n        backgroundColor: Colors.light_grey,\r\n        height: 50,\r\n        justifyContent: 'center',\r\n      }}\r\n      activeColor={Colors.lighter_green}\r\n      inactiveColor={Colors.grey}\r\n    >\r\n      <Tab.Screen\r\n        name='HomeTab'\r\n        component={HomeStackScreen}\r\n        options={{\r\n          tabBarLabel: 'Trang chủ',\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name='Favorite'\r\n        component={FavoriteStackScreen}\r\n        options={() => ({\r\n          tabBarLabel: 'Yêu thích',\r\n        })}\r\n      />\r\n      <Tab.Screen\r\n        name='Cart'\r\n        component={CartStackScreen}\r\n        options={() => ({\r\n          tabBarLabel: 'Giỏ hàng',\r\n          tabBarBadge: carts.items.length === 0 ? null : carts.items.length,\r\n        })}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\n//Drawer\r\nconst Drawer = createDrawerNavigator();\r\nexport const DrawerNavigator = () => {\r\n  const user = useSelector((state) => state.auth.user);\r\n  const drawers = [\r\n    {\r\n      name: 'HomeTab',\r\n      screen: TabScreen,\r\n      label: 'Trang Chủ',\r\n      icon: 'home-outline',\r\n    },\r\n    {\r\n      name: 'Order',\r\n      screen: OrderScreen,\r\n      label: 'Đơn Hàng',\r\n      icon: 'receipt',\r\n    },\r\n    {\r\n      name: 'Contact',\r\n      screen: ContactScreen,\r\n      label: 'Liên Hệ',\r\n      icon: 'contacts',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Drawer.Navigator\r\n      drawerContent={(props) => <CustomDrawer {...props} />}\r\n      drawerContentOptions={{\r\n        activeTintColor: Colors.grey,\r\n        itemStyle: { marginVertical: 3 },\r\n      }}\r\n    >\r\n      {drawers.map(({ name, icon, label, screen }) => (\r\n        <Drawer.Screen\r\n          key={name}\r\n          name={name}\r\n          component={screen}\r\n          options={() => ({\r\n            title: ({ focused }) => (\r\n              <CustomText\r\n                style={{\r\n                  fontSize: 14,\r\n                  fontWeight: '500',\r\n                  color: focused ? Colors.lighter_green : Colors.grey,\r\n                  fontFamily: 'Roboto-Medium',\r\n                }}\r\n              >\r\n                {label}\r\n              </CustomText>\r\n            ),\r\n            drawerIcon: ({ focused }) => (\r\n              <MaterialCommunityIcons\r\n                name={icon}\r\n                size={23}\r\n                color={focused ? Colors.lighter_green : Colors.grey}\r\n              />\r\n            ),\r\n          })}\r\n        />\r\n      ))}\r\n\r\n      {Object.keys(user).length === 0 ? (\r\n        <Drawer.Screen\r\n          name='SignUp'\r\n          component={AuthStackScreen}\r\n          options={() => ({\r\n            title: ({ focused }) => (\r\n              <CustomText\r\n                style={{\r\n                  fontSize: 14,\r\n                  fontWeight: '500',\r\n                  color: focused ? Colors.lighter_green : Colors.grey,\r\n                  fontFamily: 'Roboto-Medium',\r\n                }}\r\n              >\r\n                Đăng nhập\r\n              </CustomText>\r\n            ),\r\n            drawerIcon: ({ focused }) => (\r\n              <MaterialCommunityIcons\r\n                name='login'\r\n                size={23}\r\n                color={focused ? Colors.lighter_green : Colors.grey}\r\n              />\r\n            ),\r\n          })}\r\n        />\r\n      ) : (\r\n        <>\r\n          <Drawer.Screen\r\n            name='TouchId'\r\n            component={TouchIdScreen}\r\n            options={() => ({\r\n              title: ({ focused }) => (\r\n                <CustomText\r\n                  style={{\r\n                    fontSize: 14,\r\n                    fontWeight: '500',\r\n                    color: focused ? Colors.lighter_green : Colors.grey,\r\n                    fontFamily: 'Roboto-Medium',\r\n                  }}\r\n                >\r\n                  Touch/Face ID\r\n                </CustomText>\r\n              ),\r\n              drawerIcon: ({ focused }) => (\r\n                <MaterialCommunityIcons\r\n                  name='security'\r\n                  size={25}\r\n                  color={focused ? Colors.lighter_green : Colors.grey}\r\n                />\r\n              ),\r\n            })}\r\n          />\r\n          <Drawer.Screen\r\n            name='Profile'\r\n            component={ProfileStackScreen}\r\n            options={() => ({\r\n              title: ({ focused }) => (\r\n                <CustomText\r\n                  style={{\r\n                    fontSize: 14,\r\n                    fontWeight: '500',\r\n                    color: focused ? Colors.lighter_green : Colors.grey,\r\n                    fontFamily: 'Roboto-Medium',\r\n                  }}\r\n                >\r\n                  Thông Tin Cá Nhân\r\n                </CustomText>\r\n              ),\r\n              drawerIcon: ({ focused }) => (\r\n                <MaterialCommunityIcons\r\n                  name='face-profile'\r\n                  size={25}\r\n                  color={focused ? Colors.lighter_green : Colors.grey}\r\n                />\r\n              ),\r\n            })}\r\n          />\r\n        </>\r\n      )}\r\n    </Drawer.Navigator>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}