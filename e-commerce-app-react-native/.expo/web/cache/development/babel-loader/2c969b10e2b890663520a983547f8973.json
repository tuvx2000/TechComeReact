{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\LoginScreen\\\\components\\\\LoginForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Colors from \"../../../utils/Colors\";\nimport CustomText from \"../../../components/UI/CustomText\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Login as LoginAction } from \"../../../reducers\";\nimport PropTypes from \"prop-types\";\nimport renderField from \"./RenderField\";\nimport * as LocalAuthentication from \"expo-local-authentication\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { secretKey } from \"../../../utils/Config\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    height = _Dimensions$get.height;\n\nvar validate = function validate(values) {\n  var errors = {};\n\n  if (!values.email) {\n    errors.email = \"Email không được bỏ trống\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Email không hơp lệ\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Mật khẩu không được bỏ trống\";\n  } else if (values.password.length < 6) {\n    errors.password = \"Mật khẩu phải nhiều hơn hoặc bằng 6 ký tự\";\n  }\n\n  return errors;\n};\n\nvar Login = function Login(props) {\n  var dispatch = useDispatch();\n  var handleSubmit = props.handleSubmit;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showPass = _useState2[0],\n      setShowPass = _useState2[1];\n\n  var auth = useSelector(function (state) {\n    return state.auth;\n  });\n  var unmounted = useRef(false);\n\n  var scanFingerprintOrFaceId = function scanFingerprintOrFaceId() {\n    var resData, result, data;\n    return _regeneratorRuntime.async(function scanFingerprintOrFaceId$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync(secretKey));\n\n          case 2:\n            resData = _context.sent;\n\n            if (!(resData === null)) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", alert(\"You have to enable LOGIN by touch/face ID\"));\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(LocalAuthentication.authenticateAsync({\n              promptMessage: \"Authenticating\"\n            }));\n\n          case 7:\n            result = _context.sent;\n\n            if (!result.success) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(JSON.parse(resData));\n\n          case 11:\n            data = _context.sent;\n            dispatch(LoginAction(data.email, data.password));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var showAndroidAlert = function showAndroidAlert() {\n    Alert.alert(\"Fingerprint Scan\", \"Place your finger over the touch sensor and press scan.\", [{\n      text: \"Scan\",\n      onPress: function onPress() {\n        scanFingerprintOrFaceId();\n      }\n    }, {\n      text: \"Cancel\",\n      onPress: function onPress() {\n        return console.log(\"Cancel\");\n      },\n      style: \"cancel\"\n    }]);\n  };\n\n  useEffect(function () {\n    return function () {\n      unmounted.current = true;\n    };\n  }, []);\n\n  var submit = function submit(values) {\n    return _regeneratorRuntime.async(function submit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(dispatch(LoginAction(values.email, values.password)));\n\n          case 3:\n            props.navigation.navigate(\"Home\");\n            _context2.next = 9;\n            break;\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            alert(_context2.t0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS == \"ios\" ? \"position\" : \"height\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      props.navigation.goBack();\n    },\n    style: {\n      position: \"absolute\",\n      top: 50,\n      left: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, React.createElement(Ionicons, {\n    name: \"ios-arrow-back\",\n    size: 35,\n    color: Colors.light_green,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, React.createElement(CustomText, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"LOGIN\"))), React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"column\",\n      marginHorizontal: 10,\n      zIndex: -1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, React.createElement(Field, {\n    name: \"email\",\n    keyboardType: \"email-address\",\n    label: \"Email\",\n    icon: \"email\",\n    component: renderField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }), React.createElement(Field, {\n    name: \"password\",\n    keyboardType: \"default\",\n    label: \"Password\",\n    component: renderField,\n    secureTextEntry: showPass ? false : true,\n    passIcon: \"eye\",\n    icon: \"lock\",\n    showPass: showPass,\n    setShowPass: setShowPass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.group,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      props.navigation.navigate(\"ForgetPwScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, React.createElement(CustomText, {\n    style: _objectSpread(_objectSpread({}, styles.textSignSmall), {}, {\n      fontFamily: \"Roboto-Medium\"\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, \"Forget Password ?\"))), React.createElement(TouchableOpacity, {\n    onPress: handleSubmit(submit),\n    style: {\n      marginVertical: 10,\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.signIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, auth.isLoading ? React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }) : React.createElement(CustomText, {\n    style: styles.textSign,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  }, \"\\u0110\\u0103ng nh\\u1EADp\"))))), React.createElement(View, {\n    style: styles.center,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, React.createElement(CustomText, {\n    style: styles.loginOpt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, \"Ho\\u1EB7c \\u0111\\u0103ng nh\\u1EADp b\\u1EB1ng khu\\xF4n m\\u1EB7t/v\\xE2n tay\"), React.createElement(View, {\n    style: styles.circleImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: Platform.OS === \"android\" ? showAndroidAlert : scanFingerprintOrFaceId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../../assets/Images/faceid.png\"),\n    style: styles.faceid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nLogin.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired\n};\nvar styles = StyleSheet.create({\n  group: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    marginVertical: 10\n  },\n  header: {\n    marginTop: height * 0.2,\n    marginBottom: 10,\n    marginHorizontal: 20\n  },\n  title: {\n    color: Colors.light_green,\n    fontSize: 40,\n    letterSpacing: 5,\n    fontFamily: \"Roboto-Bold\",\n    textAlign: \"center\"\n  },\n  text: {\n    color: \"#fff\"\n  },\n  signIn: {\n    width: \"100%\",\n    height: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 5,\n    flexDirection: \"row\",\n    backgroundColor: Colors.lighter_green\n  },\n  textSign: {\n    fontSize: 15,\n    color: \"#fff\",\n    fontFamily: \"Roboto-Medium\"\n  },\n  textSignSmall: {\n    color: Colors.lighter_green,\n    textAlign: \"center\"\n  },\n  center: {\n    alignItems: \"center\"\n  },\n  circleImage: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderWidth: 2,\n    padding: 20,\n    borderRadius: 55,\n    borderStyle: \"dashed\",\n    borderColor: Colors.grey\n  },\n  faceid: {\n    resizeMode: \"contain\",\n    height: 70,\n    width: 70\n  },\n  loginOpt: {\n    color: Colors.lighter_green,\n    fontFamily: \"Roboto-Medium\",\n    marginBottom: 10\n  }\n});\nexport var LoginForm = reduxForm({\n  form: \"login\",\n  validate: validate\n})(Login);","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/LoginScreen/components/LoginForm.js"],"names":["React","useState","useRef","useEffect","Field","reduxForm","Colors","CustomText","Ionicons","useDispatch","useSelector","Login","LoginAction","PropTypes","renderField","LocalAuthentication","SecureStore","secretKey","Dimensions","get","height","validate","values","errors","email","test","password","length","props","dispatch","handleSubmit","showPass","setShowPass","auth","state","unmounted","scanFingerprintOrFaceId","getItemAsync","resData","alert","authenticateAsync","promptMessage","result","success","JSON","parse","data","showAndroidAlert","Alert","text","onPress","console","log","style","current","submit","navigation","navigate","Platform","OS","goBack","position","top","left","light_green","styles","header","title","Keyboard","dismiss","flexDirection","marginHorizontal","zIndex","group","textSignSmall","fontFamily","marginVertical","alignItems","signIn","isLoading","textSign","center","loginOpt","circleImage","require","faceid","propTypes","func","isRequired","reset","StyleSheet","create","justifyContent","marginTop","marginBottom","color","fontSize","letterSpacing","textAlign","width","borderRadius","backgroundColor","lighter_green","borderWidth","padding","borderStyle","borderColor","grey","resizeMode","LoginForm","form"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  TouchableOpacity,\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n  ActivityIndicator,\r\n  KeyboardAvoidingView,\r\n  ScrollView,\r\n  Platform,\r\n  Image,\r\n  Alert,\r\n  Dimensions,\r\n} from \"react-native\";\r\n//Colors\r\nimport Colors from \"../../../utils/Colors\";\r\nimport CustomText from \"../../../components/UI/CustomText\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n//Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//Action\r\nimport { Login as LoginAction } from \"../../../reducers\";\r\n//PropTypes check\r\nimport PropTypes from \"prop-types\";\r\nimport renderField from \"./RenderField\";\r\n//Authentiation Touch ID Face ID\r\nimport * as LocalAuthentication from \"expo-local-authentication\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport { secretKey } from \"../../../utils/Config\";\r\n\r\nconst { height } = Dimensions.get(\"window\");\r\n\r\n//Validation\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.email) {\r\n    errors.email = \"Email không được bỏ trống\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = \"Email không hơp lệ\";\r\n  }\r\n  if (!values.password) {\r\n    errors.password = \"Mật khẩu không được bỏ trống\";\r\n  } else if (values.password.length < 6) {\r\n    errors.password = \"Mật khẩu phải nhiều hơn hoặc bằng 6 ký tự\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst Login = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { handleSubmit } = props;\r\n  const [showPass, setShowPass] = useState(false);\r\n  const auth = useSelector((state) => state.auth);\r\n  const unmounted = useRef(false);\r\n  const scanFingerprintOrFaceId = async () => {\r\n    const resData = await SecureStore.getItemAsync(secretKey);\r\n    if (resData === null) {\r\n      return alert(\"You have to enable LOGIN by touch/face ID\");\r\n    }\r\n    const result = await LocalAuthentication.authenticateAsync({\r\n      promptMessage: \"Authenticating\",\r\n    });\r\n    if (result.success) {\r\n      const data = await JSON.parse(resData);\r\n      dispatch(LoginAction(data.email, data.password));\r\n    }\r\n  };\r\n\r\n  const showAndroidAlert = () => {\r\n    Alert.alert(\r\n      \"Fingerprint Scan\",\r\n      \"Place your finger over the touch sensor and press scan.\",\r\n      [\r\n        {\r\n          text: \"Scan\",\r\n          onPress: () => {\r\n            scanFingerprintOrFaceId();\r\n          },\r\n        },\r\n        {\r\n          text: \"Cancel\",\r\n          onPress: () => console.log(\"Cancel\"),\r\n          style: \"cancel\",\r\n        },\r\n      ]\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      unmounted.current = true;\r\n    };\r\n  }, []);\r\n\r\n  const submit = async (values) => {\r\n    try {\r\n      await dispatch(LoginAction(values.email, values.password));\r\n      props.navigation.navigate(\"Home\");\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS == \"ios\" ? \"position\" : \"height\"}\r\n    >\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          props.navigation.goBack();\r\n        }}\r\n        style={{ position: \"absolute\", top: 50, left: 20 }}\r\n      >\r\n        <Ionicons name=\"ios-arrow-back\" size={35} color={Colors.light_green} />\r\n      </TouchableOpacity>\r\n\r\n      <View style={styles.header}>\r\n        <View>\r\n          <CustomText style={styles.title}>LOGIN</CustomText>\r\n        </View>\r\n      </View>\r\n      <ScrollView>\r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n          <View\r\n            style={{\r\n              flexDirection: \"column\",\r\n              marginHorizontal: 10,\r\n              zIndex: -1,\r\n            }}\r\n          >\r\n            <View>\r\n              <Field\r\n                name=\"email\"\r\n                keyboardType=\"email-address\"\r\n                label=\"Email\"\r\n                icon=\"email\"\r\n                component={renderField}\r\n              />\r\n              <Field\r\n                name=\"password\"\r\n                keyboardType=\"default\"\r\n                label=\"Password\"\r\n                component={renderField}\r\n                secureTextEntry={showPass ? false : true}\r\n                passIcon=\"eye\"\r\n                icon=\"lock\"\r\n                showPass={showPass}\r\n                setShowPass={setShowPass}\r\n              />\r\n            </View>\r\n            <View style={styles.group}>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  props.navigation.navigate(\"ForgetPwScreen\");\r\n                }}\r\n              >\r\n                <CustomText\r\n                  style={{\r\n                    ...styles.textSignSmall,\r\n                    fontFamily: \"Roboto-Medium\",\r\n                  }}\r\n                >\r\n                  Forget Password ?\r\n                </CustomText>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <TouchableOpacity\r\n              onPress={handleSubmit(submit)}\r\n              style={{ marginVertical: 10, alignItems: \"center\" }}\r\n            >\r\n              <View style={styles.signIn}>\r\n                {auth.isLoading ? (\r\n                  <ActivityIndicator size=\"small\" color=\"#fff\" />\r\n                ) : (\r\n                  <CustomText style={styles.textSign}>Đăng nhập</CustomText>\r\n                )}\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n        <View style={styles.center}>\r\n          <CustomText style={styles.loginOpt}>\r\n            Hoặc đăng nhập bằng khuôn mặt/vân tay\r\n          </CustomText>\r\n          <View style={styles.circleImage}>\r\n            <TouchableOpacity\r\n              onPress={\r\n                Platform.OS === \"android\"\r\n                  ? showAndroidAlert\r\n                  : scanFingerprintOrFaceId\r\n              }\r\n            >\r\n              <Image\r\n                source={require(\"../../../assets/Images/faceid.png\")}\r\n                style={styles.faceid}\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  reset: PropTypes.func.isRequired,\r\n};\r\nconst styles = StyleSheet.create({\r\n  group: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    marginVertical: 10,\r\n  },\r\n  header: {\r\n    marginTop: height * 0.2,\r\n    marginBottom: 10,\r\n    marginHorizontal: 20,\r\n  },\r\n  title: {\r\n    color: Colors.light_green,\r\n    fontSize: 40,\r\n    letterSpacing: 5,\r\n    fontFamily: \"Roboto-Bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  text: {\r\n    color: \"#fff\",\r\n  },\r\n  signIn: {\r\n    width: \"100%\",\r\n    height: 50,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 5,\r\n    flexDirection: \"row\",\r\n    backgroundColor: Colors.lighter_green,\r\n  },\r\n  textSign: {\r\n    fontSize: 15,\r\n    color: \"#fff\",\r\n    fontFamily: \"Roboto-Medium\",\r\n  },\r\n  textSignSmall: {\r\n    color: Colors.lighter_green,\r\n    textAlign: \"center\",\r\n  },\r\n  center: {\r\n    alignItems: \"center\",\r\n  },\r\n  circleImage: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderWidth: 2,\r\n    padding: 20,\r\n    borderRadius: 55,\r\n    borderStyle: \"dashed\",\r\n    borderColor: Colors.grey,\r\n  },\r\n  faceid: {\r\n    resizeMode: \"contain\",\r\n    height: 70,\r\n    width: 70,\r\n  },\r\n  loginOpt: {\r\n    color: Colors.lighter_green,\r\n    fontFamily: \"Roboto-Medium\",\r\n    marginBottom: 10,\r\n  },\r\n});\r\nexport const LoginForm = reduxForm({\r\n  form: \"login\", // a unique identifier for this form\r\n  validate, // <--- validation function given to redux-form\r\n})(Login);\r\n"]},"metadata":{},"sourceType":"module"}