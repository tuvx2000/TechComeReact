{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\2020-2021\\\\II\\\\aws\\\\project\\\\TechComeReact\\\\e-commerce-app-react-native\\\\src\\\\screens\\\\PreOrderScreen\\\\PreOrderScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Address from \"./components/Address\";\nimport { useSelector } from \"react-redux\";\nimport Colors from \"../../utils/Colors\";\nimport { Header, SummaryOrder, TotalButton, UserForm } from \"./components\";\nimport Loader from \"../../components/Loaders/Loader\";\nexport var PreOrderScreen = function PreOrderScreen(props) {\n  var unmounted = useRef(false);\n  var isFocused = useIsFocused();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var carts = useSelector(function (state) {\n    return state.cart.cartItems;\n  });\n  var _props$route$params = props.route.params,\n      cartItems = _props$route$params.cartItems,\n      total = _props$route$params.total,\n      cartId = _props$route$params.cartId;\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      phone = _useState8[0],\n      setPhone = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      address = _useState10[0],\n      setAddress = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      province = _useState12[0],\n      setProvince = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      town = _useState14[0],\n      setTown = _useState14[1];\n\n  useEffect(function () {\n    return function () {\n      unmounted.current = true;\n    };\n  }, []);\n  useEffect(function () {\n    if (isFocused) {\n      setLoading(true);\n      var interval = setInterval(function () {\n        setLoading(false);\n      }, 1000);\n      return function () {\n        return clearInterval(interval);\n      };\n    }\n\n    return;\n  }, [isFocused]);\n\n  var getInfo = function getInfo(province, town) {\n    setProvince(province);\n    setTown(town);\n  };\n\n  var getReceiver = function getReceiver(name, phone, address) {\n    setName(name);\n    setPhone(phone);\n    setAddress(address);\n  };\n\n  var checkValidation = function checkValidation(error) {\n    setError(error);\n  };\n\n  var orderItems = [];\n  cartItems.map(function (item) {\n    orderItems.push({\n      item: item.item._id,\n      quantity: item.quantity\n    });\n  });\n  var fullAddress = address + \", \" + town + \" ,\" + province;\n\n  var toPayment = function toPayment() {\n    return _regeneratorRuntime.async(function toPayment$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (error == undefined && province.length !== 0 && town.length !== 0) {\n              props.navigation.navigate(\"Payment\", {\n                screen: \"PaymentScreen\",\n                params: {\n                  fullAddress: fullAddress,\n                  orderItems: orderItems,\n                  name: name,\n                  phone: phone,\n                  total: total,\n                  cartId: cartId,\n                  carts: carts\n                }\n              });\n            } else {\n              alert(\"Vui lòng nhập đầy đủ thông tin.\");\n            }\n\n            _context.next = 7;\n            break;\n\n          case 4:\n            _context.prev = 4;\n            _context.t0 = _context[\"catch\"](0);\n            throw _context.t0;\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 4]], Promise);\n  };\n\n  useEffect(function () {\n    if (carts.items.length === 0) {\n      props.navigation.goBack();\n    }\n  }, [carts.items]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    navigation: props.navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), loading ? React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }) : React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, React.createElement(UserForm, {\n    getReceiver: getReceiver,\n    checkValidation: checkValidation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), React.createElement(Address, {\n    getInfo: getInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), React.createElement(SummaryOrder, {\n    cartItems: cartItems,\n    total: total,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  })), React.createElement(TotalButton, {\n    toPayment: toPayment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.white\n  }\n});","map":{"version":3,"sources":["D:/2020-2021/II/aws/project/TechComeReact/e-commerce-app-react-native/src/screens/PreOrderScreen/PreOrderScreen.js"],"names":["React","useState","useEffect","useRef","useIsFocused","Address","useSelector","Colors","Header","SummaryOrder","TotalButton","UserForm","Loader","PreOrderScreen","props","unmounted","isFocused","loading","setLoading","carts","state","cart","cartItems","route","params","total","cartId","error","setError","name","setName","phone","setPhone","address","setAddress","province","setProvince","town","setTown","current","interval","setInterval","clearInterval","getInfo","getReceiver","checkValidation","orderItems","map","item","push","_id","quantity","fullAddress","toPayment","undefined","length","navigation","navigate","screen","alert","items","goBack","styles","container","StyleSheet","create","flex","backgroundColor","white"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { View, StyleSheet, ScrollView } from \"react-native\";\r\n//Address\r\nimport Address from \"./components/Address\";\r\n//Redux\r\nimport { useSelector } from \"react-redux\";\r\n//Steps\r\nimport Colors from \"../../utils/Colors\";\r\nimport { Header, SummaryOrder, TotalButton, UserForm } from \"./components\";\r\nimport Loader from \"../../components/Loaders/Loader\";\r\n\r\nexport const PreOrderScreen = (props) => {\r\n  const unmounted = useRef(false);\r\n  const isFocused = useIsFocused();\r\n  const [loading, setLoading] = useState(true);\r\n  const carts = useSelector((state) => state.cart.cartItems);\r\n  const { cartItems, total, cartId } = props.route.params;\r\n  const [error, setError] = useState(\"\");\r\n  //Can Toi uu lai\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [province, setProvince] = useState(\"\");\r\n  const [town, setTown] = useState(\"\");\r\n  useEffect(() => {\r\n    return () => {\r\n      unmounted.current = true;\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n      setLoading(true);\r\n      const interval = setInterval(() => {\r\n        setLoading(false);\r\n      }, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n    return;\r\n  }, [isFocused]);\r\n  const getInfo = (province, town) => {\r\n    setProvince(province);\r\n    setTown(town);\r\n  };\r\n  const getReceiver = (name, phone, address) => {\r\n    setName(name);\r\n    setPhone(phone);\r\n    setAddress(address);\r\n  };\r\n  const checkValidation = (error) => {\r\n    setError(error);\r\n  };\r\n  let orderItems = [];\r\n  cartItems.map((item) => {\r\n    orderItems.push({ item: item.item._id, quantity: item.quantity });\r\n  });\r\n\r\n  const fullAddress = `${address}, ${town} ,${province}`;\r\n  const toPayment = async () => {\r\n    try {\r\n      if (error == undefined && province.length !== 0 && town.length !== 0) {\r\n        props.navigation.navigate(\"Payment\", {\r\n          screen: \"PaymentScreen\",\r\n          params: {\r\n            fullAddress,\r\n            orderItems,\r\n            name,\r\n            phone,\r\n            total,\r\n            cartId,\r\n            carts,\r\n          },\r\n        });\r\n      } else {\r\n        alert(\"Vui lòng nhập đầy đủ thông tin.\");\r\n      }\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n    // props.navigation.navigate(\"Payment\", {\r\n    //   screen: \"PaymentScreen\",\r\n    //   params: {\r\n    //     fullAddress,\r\n    //     orderItems,\r\n    //     name,\r\n    //     phone,\r\n    //     total,\r\n    //     cartId,\r\n    //     carts,\r\n    //   },\r\n    // });\r\n  };\r\n  useEffect(() => {\r\n    if (carts.items.length === 0) {\r\n      props.navigation.goBack();\r\n    }\r\n  }, [carts.items]);\r\n  return (\r\n    <View style={styles.container}>\r\n      <Header navigation={props.navigation} />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <ScrollView>\r\n            <UserForm\r\n              getReceiver={getReceiver}\r\n              checkValidation={checkValidation}\r\n            />\r\n            <Address getInfo={getInfo} />\r\n            <SummaryOrder cartItems={cartItems} total={total} />\r\n          </ScrollView>\r\n          <TotalButton toPayment={toPayment} />\r\n        </>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, backgroundColor: Colors.white },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}